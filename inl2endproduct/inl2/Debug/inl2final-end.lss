
inl2final-end.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005e60  00080000  00080000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00085e60  00085e60  0000de60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     0000087c  20070000  00085e68  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000027e0  2007087c  000866e4  0001087c  2**2
                  ALLOC
  4 .stack        00002004  2007305c  00088ec4  0001087c  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  0001087c  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  000108a5  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000a4cc  00000000  00000000  00010900  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001c55  00000000  00000000  0001adcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000365f  00000000  00000000  0001ca21  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000008c8  00000000  00000000  00020080  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000007b8  00000000  00000000  00020948  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000173f8  00000000  00000000  00021100  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000d06f  00000000  00000000  000384f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0005fd0f  00000000  00000000  00045567  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000019b4  00000000  00000000  000a5278  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	20075060 	.word	0x20075060
   80004:	00080809 	.word	0x00080809
   80008:	00080805 	.word	0x00080805
   8000c:	00080805 	.word	0x00080805
   80010:	00080805 	.word	0x00080805
   80014:	00080805 	.word	0x00080805
   80018:	00080805 	.word	0x00080805
	...
   8002c:	00080805 	.word	0x00080805
   80030:	00080805 	.word	0x00080805
   80034:	00000000 	.word	0x00000000
   80038:	00080805 	.word	0x00080805
   8003c:	00080805 	.word	0x00080805
   80040:	00080805 	.word	0x00080805
   80044:	00080805 	.word	0x00080805
   80048:	00080805 	.word	0x00080805
   8004c:	00080805 	.word	0x00080805
   80050:	00080805 	.word	0x00080805
   80054:	00080805 	.word	0x00080805
   80058:	00080805 	.word	0x00080805
   8005c:	00080805 	.word	0x00080805
   80060:	00080805 	.word	0x00080805
   80064:	00080805 	.word	0x00080805
   80068:	00000000 	.word	0x00000000
   8006c:	000805a9 	.word	0x000805a9
   80070:	000805bd 	.word	0x000805bd
   80074:	000805d1 	.word	0x000805d1
   80078:	000805e5 	.word	0x000805e5
	...
   80084:	00080805 	.word	0x00080805
   80088:	00080805 	.word	0x00080805
   8008c:	00080805 	.word	0x00080805
   80090:	00080805 	.word	0x00080805
   80094:	00080805 	.word	0x00080805
   80098:	00080805 	.word	0x00080805
   8009c:	00080805 	.word	0x00080805
   800a0:	00080805 	.word	0x00080805
   800a4:	00000000 	.word	0x00000000
   800a8:	00080805 	.word	0x00080805
   800ac:	00080be1 	.word	0x00080be1
   800b0:	00080805 	.word	0x00080805
   800b4:	00080805 	.word	0x00080805
   800b8:	00080805 	.word	0x00080805
   800bc:	00080805 	.word	0x00080805
   800c0:	00080805 	.word	0x00080805
   800c4:	00080805 	.word	0x00080805
   800c8:	00080805 	.word	0x00080805
   800cc:	00080805 	.word	0x00080805
   800d0:	00080805 	.word	0x00080805
   800d4:	00080805 	.word	0x00080805
   800d8:	00080805 	.word	0x00080805
   800dc:	00080805 	.word	0x00080805
   800e0:	00080805 	.word	0x00080805
   800e4:	00080805 	.word	0x00080805
   800e8:	00080805 	.word	0x00080805
   800ec:	00080805 	.word	0x00080805
   800f0:	00080805 	.word	0x00080805

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	2007087c 	.word	0x2007087c
   80110:	00000000 	.word	0x00000000
   80114:	00085e68 	.word	0x00085e68

00080118 <frame_dummy>:
   80118:	b508      	push	{r3, lr}
   8011a:	4b06      	ldr	r3, [pc, #24]	; (80134 <frame_dummy+0x1c>)
   8011c:	b11b      	cbz	r3, 80126 <frame_dummy+0xe>
   8011e:	4806      	ldr	r0, [pc, #24]	; (80138 <frame_dummy+0x20>)
   80120:	4906      	ldr	r1, [pc, #24]	; (8013c <frame_dummy+0x24>)
   80122:	f3af 8000 	nop.w
   80126:	4806      	ldr	r0, [pc, #24]	; (80140 <frame_dummy+0x28>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b113      	cbz	r3, 80132 <frame_dummy+0x1a>
   8012c:	4b05      	ldr	r3, [pc, #20]	; (80144 <frame_dummy+0x2c>)
   8012e:	b103      	cbz	r3, 80132 <frame_dummy+0x1a>
   80130:	4798      	blx	r3
   80132:	bd08      	pop	{r3, pc}
   80134:	00000000 	.word	0x00000000
   80138:	00085e68 	.word	0x00085e68
   8013c:	20070880 	.word	0x20070880
   80140:	00085e68 	.word	0x00085e68
   80144:	00000000 	.word	0x00000000

00080148 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   80148:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   8014a:	480d      	ldr	r0, [pc, #52]	; (80180 <sysclk_init+0x38>)
   8014c:	4b0d      	ldr	r3, [pc, #52]	; (80184 <sysclk_init+0x3c>)
   8014e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   80150:	2000      	movs	r0, #0
   80152:	213e      	movs	r1, #62	; 0x3e
   80154:	4b0c      	ldr	r3, [pc, #48]	; (80188 <sysclk_init+0x40>)
   80156:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   80158:	4c0c      	ldr	r4, [pc, #48]	; (8018c <sysclk_init+0x44>)
   8015a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   8015c:	2800      	cmp	r0, #0
   8015e:	d0fc      	beq.n	8015a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   80160:	4b0b      	ldr	r3, [pc, #44]	; (80190 <sysclk_init+0x48>)
   80162:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   80164:	4a0b      	ldr	r2, [pc, #44]	; (80194 <sysclk_init+0x4c>)
   80166:	4b0c      	ldr	r3, [pc, #48]	; (80198 <sysclk_init+0x50>)
   80168:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   8016a:	4c0c      	ldr	r4, [pc, #48]	; (8019c <sysclk_init+0x54>)
   8016c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   8016e:	2800      	cmp	r0, #0
   80170:	d0fc      	beq.n	8016c <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80172:	2010      	movs	r0, #16
   80174:	4b0a      	ldr	r3, [pc, #40]	; (801a0 <sysclk_init+0x58>)
   80176:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   80178:	4b0a      	ldr	r3, [pc, #40]	; (801a4 <sysclk_init+0x5c>)
   8017a:	4798      	blx	r3
   8017c:	bd10      	pop	{r4, pc}
   8017e:	bf00      	nop
   80180:	0501bd00 	.word	0x0501bd00
   80184:	000809d5 	.word	0x000809d5
   80188:	0008065d 	.word	0x0008065d
   8018c:	000806b1 	.word	0x000806b1
   80190:	000806c1 	.word	0x000806c1
   80194:	200d3f01 	.word	0x200d3f01
   80198:	400e0600 	.word	0x400e0600
   8019c:	000806d1 	.word	0x000806d1
   801a0:	000805f9 	.word	0x000805f9
   801a4:	000808b9 	.word	0x000808b9

000801a8 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   801a8:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   801aa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   801ae:	4b17      	ldr	r3, [pc, #92]	; (8020c <board_init+0x64>)
   801b0:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   801b2:	200b      	movs	r0, #11
   801b4:	4c16      	ldr	r4, [pc, #88]	; (80210 <board_init+0x68>)
   801b6:	47a0      	blx	r4
   801b8:	200c      	movs	r0, #12
   801ba:	47a0      	blx	r4
   801bc:	200d      	movs	r0, #13
   801be:	47a0      	blx	r4
   801c0:	200e      	movs	r0, #14
   801c2:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   801c4:	203b      	movs	r0, #59	; 0x3b
   801c6:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   801ca:	4c12      	ldr	r4, [pc, #72]	; (80214 <board_init+0x6c>)
   801cc:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   801ce:	2055      	movs	r0, #85	; 0x55
   801d0:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   801d4:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   801d6:	2056      	movs	r0, #86	; 0x56
   801d8:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   801dc:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   801de:	2068      	movs	r0, #104	; 0x68
   801e0:	490d      	ldr	r1, [pc, #52]	; (80218 <board_init+0x70>)
   801e2:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   801e4:	205c      	movs	r0, #92	; 0x5c
   801e6:	490d      	ldr	r1, [pc, #52]	; (8021c <board_init+0x74>)
   801e8:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   801ea:	480d      	ldr	r0, [pc, #52]	; (80220 <board_init+0x78>)
   801ec:	f44f 7140 	mov.w	r1, #768	; 0x300
   801f0:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   801f4:	4b0b      	ldr	r3, [pc, #44]	; (80224 <board_init+0x7c>)
   801f6:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   801f8:	202b      	movs	r0, #43	; 0x2b
   801fa:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   801fe:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   80200:	202a      	movs	r0, #42	; 0x2a
   80202:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80206:	47a0      	blx	r4
   80208:	bd10      	pop	{r4, pc}
   8020a:	bf00      	nop
   8020c:	400e1a50 	.word	0x400e1a50
   80210:	000806e1 	.word	0x000806e1
   80214:	000803e9 	.word	0x000803e9
   80218:	28000079 	.word	0x28000079
   8021c:	28000001 	.word	0x28000001
   80220:	400e0e00 	.word	0x400e0e00
   80224:	000804bd 	.word	0x000804bd

00080228 <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
   80228:	b430      	push	{r4, r5}
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
   8022a:	2401      	movs	r4, #1
   8022c:	6004      	str	r4, [r0, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
   8022e:	2400      	movs	r4, #0
   80230:	6044      	str	r4, [r0, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
   80232:	f240 2502 	movw	r5, #514	; 0x202
   80236:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
	p_adc->ADC_RCR = 0;
   8023a:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
   8023e:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   80242:	6845      	ldr	r5, [r0, #4]
   80244:	432b      	orrs	r3, r5
	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
	p_adc->ADC_RCR = 0;
	p_adc->ADC_RNCR = 0;

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
   80246:	0052      	lsls	r2, r2, #1
   80248:	fbb1 f1f2 	udiv	r1, r1, r2
   8024c:	1e4d      	subs	r5, r1, #1
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   8024e:	022d      	lsls	r5, r5, #8
   80250:	b2ad      	uxth	r5, r5
   80252:	432b      	orrs	r3, r5
   80254:	6043      	str	r3, [r0, #4]
	return 0;
}
   80256:	4620      	mov	r0, r4
   80258:	bc30      	pop	{r4, r5}
   8025a:	4770      	bx	lr

0008025c <adc_set_resolution>:
 * \param resolution ADC resolution.
 *
 */
void adc_set_resolution(Adc *p_adc,const enum adc_resolution_t resolution)
{
	p_adc->ADC_MR |= (resolution << 4) & ADC_MR_LOWRES;
   8025c:	6843      	ldr	r3, [r0, #4]
   8025e:	0109      	lsls	r1, r1, #4
   80260:	f001 0110 	and.w	r1, r1, #16
   80264:	430b      	orrs	r3, r1
   80266:	6043      	str	r3, [r0, #4]
   80268:	4770      	bx	lr
   8026a:	bf00      	nop

0008026c <adc_configure_trigger>:
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
   8026c:	6843      	ldr	r3, [r0, #4]
   8026e:	4319      	orrs	r1, r3
   80270:	01d2      	lsls	r2, r2, #7
   80272:	b2d3      	uxtb	r3, r2
   80274:	4319      	orrs	r1, r3
   80276:	6041      	str	r1, [r0, #4]
   80278:	4770      	bx	lr
   8027a:	bf00      	nop

0008027c <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
   8027c:	b410      	push	{r4}
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   8027e:	6844      	ldr	r4, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
   80280:	4322      	orrs	r2, r4
   80282:	0609      	lsls	r1, r1, #24
   80284:	f001 6470 	and.w	r4, r1, #251658240	; 0xf000000
   80288:	4322      	orrs	r2, r4
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   8028a:	071b      	lsls	r3, r3, #28
   8028c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
   80290:	431a      	orrs	r2, r3
   80292:	6042      	str	r2, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
}
   80294:	f85d 4b04 	ldr.w	r4, [sp], #4
   80298:	4770      	bx	lr
   8029a:	bf00      	nop

0008029c <adc_start>:
 * \param p_adc Pointer to an ADC instance.
 */

void adc_start(Adc *p_adc)
{
	p_adc->ADC_CR = ADC_CR_START;
   8029c:	2302      	movs	r3, #2
   8029e:	6003      	str	r3, [r0, #0]
   802a0:	4770      	bx	lr
   802a2:	bf00      	nop

000802a4 <adc_enable_channel>:
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	p_adc->ADC_CHER = 1 << adc_ch;
   802a4:	2301      	movs	r3, #1
   802a6:	fa03 f101 	lsl.w	r1, r3, r1
   802aa:	6101      	str	r1, [r0, #16]
   802ac:	4770      	bx	lr
   802ae:	bf00      	nop

000802b0 <adc_get_channel_value>:
 */
uint32_t adc_get_channel_value(const Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	uint32_t ul_data = 0;

	if (15 >= adc_ch) {
   802b0:	290f      	cmp	r1, #15
		ul_data = *(p_adc->ADC_CDR + adc_ch);
   802b2:	bf9a      	itte	ls
   802b4:	3114      	addls	r1, #20
   802b6:	f850 0021 	ldrls.w	r0, [r0, r1, lsl #2]
 *
 * \return ADC value of the specified channel.
 */
uint32_t adc_get_channel_value(const Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	uint32_t ul_data = 0;
   802ba:	2000      	movhi	r0, #0
	if (15 >= adc_ch) {
		ul_data = *(p_adc->ADC_CDR + adc_ch);
	}

	return ul_data;
}
   802bc:	4770      	bx	lr
   802be:	bf00      	nop

000802c0 <adc_get_status>:
 *
 * \return ADC status structure.
 */
uint32_t adc_get_status(const Adc *p_adc)
{
	return p_adc->ADC_ISR;
   802c0:	6b00      	ldr	r0, [r0, #48]	; 0x30
}
   802c2:	4770      	bx	lr

000802c4 <dacc_reset>:
 *
 * \param p_dacc Pointer to a DACC instance. 
 */
void dacc_reset(Dacc *p_dacc)
{
	p_dacc->DACC_CR = DACC_CR_SWRST;
   802c4:	2301      	movs	r3, #1
   802c6:	6003      	str	r3, [r0, #0]
   802c8:	4770      	bx	lr
   802ca:	bf00      	nop

000802cc <dacc_set_transfer_mode>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_transfer_mode(Dacc *p_dacc, uint32_t ul_mode)
{
	if (ul_mode) {
   802cc:	b121      	cbz	r1, 802d8 <dacc_set_transfer_mode+0xc>
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR |= DACC_MR_WORD;
#else
		p_dacc->DACC_MR |= DACC_MR_WORD_WORD;
   802ce:	6843      	ldr	r3, [r0, #4]
   802d0:	f043 0310 	orr.w	r3, r3, #16
   802d4:	6043      	str	r3, [r0, #4]
   802d6:	e003      	b.n	802e0 <dacc_set_transfer_mode+0x14>
#endif
	} else {
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR &= (~DACC_MR_WORD);
#else
		p_dacc->DACC_MR &= (~DACC_MR_WORD_WORD);
   802d8:	6843      	ldr	r3, [r0, #4]
   802da:	f023 0310 	bic.w	r3, r3, #16
   802de:	6043      	str	r3, [r0, #4]
#endif
	}
	return DACC_RC_OK;
}
   802e0:	2000      	movs	r0, #0
   802e2:	4770      	bx	lr

000802e4 <dacc_write_conversion_data>:
 * \param p_dacc Pointer to a DACC instance. 
 * \param ul_data The data to be transferred to analog value. 
 */
void dacc_write_conversion_data(Dacc *p_dacc, uint32_t ul_data)
{
	p_dacc->DACC_CDR = ul_data;
   802e4:	6201      	str	r1, [r0, #32]
   802e6:	4770      	bx	lr

000802e8 <dacc_set_channel_selection>:
 *
 * \return \ref DACC_RC_OK if successful.
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
   802e8:	6843      	ldr	r3, [r0, #4]
	if (ul_channel > MAX_CH_NB) {
   802ea:	2901      	cmp	r1, #1
   802ec:	d806      	bhi.n	802fc <dacc_set_channel_selection+0x14>
		return DACC_RC_INVALID_PARAM;
	}
	mr &= ~(DACC_MR_TAG);
   802ee:	f423 1398 	bic.w	r3, r3, #1245184	; 0x130000
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
   802f2:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
	p_dacc->DACC_MR = mr;
   802f6:	6041      	str	r1, [r0, #4]
	return DACC_RC_OK;
   802f8:	2000      	movs	r0, #0
   802fa:	4770      	bx	lr
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
	if (ul_channel > MAX_CH_NB) {
		return DACC_RC_INVALID_PARAM;
   802fc:	2001      	movs	r0, #1
	}
	mr &= ~(DACC_MR_TAG);
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
	p_dacc->DACC_MR = mr;
	return DACC_RC_OK;
}
   802fe:	4770      	bx	lr

00080300 <dacc_set_timing>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_timing(Dacc *p_dacc,
		uint32_t ul_refresh, uint32_t ul_maxs, uint32_t ul_startup)
{
   80300:	b410      	push	{r4}
	uint32_t mr = p_dacc->DACC_MR
   80302:	6844      	ldr	r4, [r0, #4]
   80304:	f024 547c 	bic.w	r4, r4, #1056964608	; 0x3f000000
   80308:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
		& (~(DACC_MR_REFRESH_Msk | DACC_MR_STARTUP_Msk));
	mr |= DACC_MR_REFRESH(ul_refresh);
   8030c:	0209      	lsls	r1, r1, #8
   8030e:	b289      	uxth	r1, r1
   80310:	430c      	orrs	r4, r1
	if (ul_maxs) {
   80312:	b112      	cbz	r2, 8031a <dacc_set_timing+0x1a>
		mr |= DACC_MR_MAXS;
   80314:	f444 1400 	orr.w	r4, r4, #2097152	; 0x200000
   80318:	e001      	b.n	8031e <dacc_set_timing+0x1e>
	} else {
		mr &= ~DACC_MR_MAXS;
   8031a:	f424 1400 	bic.w	r4, r4, #2097152	; 0x200000
	}
	mr |= (DACC_MR_STARTUP_Msk & ((ul_startup) << DACC_MR_STARTUP_Pos));
   8031e:	061b      	lsls	r3, r3, #24
   80320:	f003 537c 	and.w	r3, r3, #1056964608	; 0x3f000000
   80324:	431c      	orrs	r4, r3
	p_dacc->DACC_MR = mr;
   80326:	6044      	str	r4, [r0, #4]
	return DACC_RC_OK;
}
   80328:	2000      	movs	r0, #0
   8032a:	f85d 4b04 	ldr.w	r4, [sp], #4
   8032e:	4770      	bx	lr

00080330 <dacc_enable_channel>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
   80330:	2901      	cmp	r1, #1
   80332:	d805      	bhi.n	80340 <dacc_enable_channel+0x10>
		return DACC_RC_INVALID_PARAM;

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
   80334:	2301      	movs	r3, #1
   80336:	fa03 f101 	lsl.w	r1, r3, r1
   8033a:	6101      	str	r1, [r0, #16]
	return DACC_RC_OK;
   8033c:	2000      	movs	r0, #0
   8033e:	4770      	bx	lr
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
		return DACC_RC_INVALID_PARAM;
   80340:	2001      	movs	r0, #1

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
	return DACC_RC_OK;
}
   80342:	4770      	bx	lr

00080344 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   80344:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   80346:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   8034a:	d016      	beq.n	8037a <pio_set_peripheral+0x36>
   8034c:	d804      	bhi.n	80358 <pio_set_peripheral+0x14>
   8034e:	b1c1      	cbz	r1, 80382 <pio_set_peripheral+0x3e>
   80350:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   80354:	d00a      	beq.n	8036c <pio_set_peripheral+0x28>
   80356:	e013      	b.n	80380 <pio_set_peripheral+0x3c>
   80358:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   8035c:	d011      	beq.n	80382 <pio_set_peripheral+0x3e>
   8035e:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   80362:	d00e      	beq.n	80382 <pio_set_peripheral+0x3e>
   80364:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   80368:	d10a      	bne.n	80380 <pio_set_peripheral+0x3c>
   8036a:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   8036c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   8036e:	6f01      	ldr	r1, [r0, #112]	; 0x70
   80370:	400b      	ands	r3, r1
   80372:	ea23 0302 	bic.w	r3, r3, r2
   80376:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   80378:	e002      	b.n	80380 <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   8037a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   8037c:	4313      	orrs	r3, r2
   8037e:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   80380:	6042      	str	r2, [r0, #4]
   80382:	4770      	bx	lr

00080384 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80384:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80386:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   8038a:	bf14      	ite	ne
   8038c:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   8038e:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   80390:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80394:	bf14      	ite	ne
   80396:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   80398:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   8039a:	f012 0f02 	tst.w	r2, #2
   8039e:	d002      	beq.n	803a6 <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   803a0:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   803a4:	e004      	b.n	803b0 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   803a6:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_SCIFSR = ul_mask;
   803aa:	bf18      	it	ne
   803ac:	f8c0 1080 	strne.w	r1, [r0, #128]	; 0x80
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   803b0:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   803b2:	6001      	str	r1, [r0, #0]
   803b4:	4770      	bx	lr
   803b6:	bf00      	nop

000803b8 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   803b8:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   803ba:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   803bc:	9c01      	ldr	r4, [sp, #4]
   803be:	b10c      	cbz	r4, 803c4 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   803c0:	6641      	str	r1, [r0, #100]	; 0x64
   803c2:	e000      	b.n	803c6 <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   803c4:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   803c6:	b10b      	cbz	r3, 803cc <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   803c8:	6501      	str	r1, [r0, #80]	; 0x50
   803ca:	e000      	b.n	803ce <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   803cc:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   803ce:	b10a      	cbz	r2, 803d4 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   803d0:	6301      	str	r1, [r0, #48]	; 0x30
   803d2:	e000      	b.n	803d6 <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   803d4:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   803d6:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   803d8:	6001      	str	r1, [r0, #0]
}
   803da:	f85d 4b04 	ldr.w	r4, [sp], #4
   803de:	4770      	bx	lr

000803e0 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   803e0:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   803e2:	4770      	bx	lr

000803e4 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   803e4:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   803e6:	4770      	bx	lr

000803e8 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   803e8:	b570      	push	{r4, r5, r6, lr}
   803ea:	b082      	sub	sp, #8
   803ec:	460d      	mov	r5, r1
	Pio *p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   803ee:	0944      	lsrs	r4, r0, #5
   803f0:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
   803f4:	f204 7407 	addw	r4, r4, #1799	; 0x707
   803f8:	0266      	lsls	r6, r4, #9

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   803fa:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
   803fe:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80402:	d030      	beq.n	80466 <pio_configure_pin+0x7e>
   80404:	d806      	bhi.n	80414 <pio_configure_pin+0x2c>
   80406:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   8040a:	d00a      	beq.n	80422 <pio_configure_pin+0x3a>
   8040c:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80410:	d018      	beq.n	80444 <pio_configure_pin+0x5c>
   80412:	e049      	b.n	804a8 <pio_configure_pin+0xc0>
   80414:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80418:	d030      	beq.n	8047c <pio_configure_pin+0x94>
   8041a:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   8041e:	d02d      	beq.n	8047c <pio_configure_pin+0x94>
   80420:	e042      	b.n	804a8 <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   80422:	f000 001f 	and.w	r0, r0, #31
   80426:	2401      	movs	r4, #1
   80428:	4084      	lsls	r4, r0
   8042a:	4630      	mov	r0, r6
   8042c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80430:	4622      	mov	r2, r4
   80432:	4b1f      	ldr	r3, [pc, #124]	; (804b0 <pio_configure_pin+0xc8>)
   80434:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80436:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   8043a:	bf14      	ite	ne
   8043c:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   8043e:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80440:	2001      	movs	r0, #1
   80442:	e032      	b.n	804aa <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   80444:	f000 001f 	and.w	r0, r0, #31
   80448:	2401      	movs	r4, #1
   8044a:	4084      	lsls	r4, r0
   8044c:	4630      	mov	r0, r6
   8044e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80452:	4622      	mov	r2, r4
   80454:	4b16      	ldr	r3, [pc, #88]	; (804b0 <pio_configure_pin+0xc8>)
   80456:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80458:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   8045c:	bf14      	ite	ne
   8045e:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80460:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80462:	2001      	movs	r0, #1
   80464:	e021      	b.n	804aa <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   80466:	f000 011f 	and.w	r1, r0, #31
   8046a:	2401      	movs	r4, #1
   8046c:	4630      	mov	r0, r6
   8046e:	fa04 f101 	lsl.w	r1, r4, r1
   80472:	462a      	mov	r2, r5
   80474:	4b0f      	ldr	r3, [pc, #60]	; (804b4 <pio_configure_pin+0xcc>)
   80476:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80478:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   8047a:	e016      	b.n	804aa <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   8047c:	f000 011f 	and.w	r1, r0, #31
   80480:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80482:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80486:	ea05 0304 	and.w	r3, r5, r4
   8048a:	9300      	str	r3, [sp, #0]
   8048c:	4630      	mov	r0, r6
   8048e:	fa04 f101 	lsl.w	r1, r4, r1
   80492:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80496:	bf14      	ite	ne
   80498:	2200      	movne	r2, #0
   8049a:	2201      	moveq	r2, #1
   8049c:	f3c5 0380 	ubfx	r3, r5, #2, #1
   804a0:	4d05      	ldr	r5, [pc, #20]	; (804b8 <pio_configure_pin+0xd0>)
   804a2:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
   804a4:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   804a6:	e000      	b.n	804aa <pio_configure_pin+0xc2>

	default:
		return 0;
   804a8:	2000      	movs	r0, #0
	}

	return 1;
}
   804aa:	b002      	add	sp, #8
   804ac:	bd70      	pop	{r4, r5, r6, pc}
   804ae:	bf00      	nop
   804b0:	00080345 	.word	0x00080345
   804b4:	00080385 	.word	0x00080385
   804b8:	000803b9 	.word	0x000803b9

000804bc <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   804bc:	b5f0      	push	{r4, r5, r6, r7, lr}
   804be:	b083      	sub	sp, #12
   804c0:	4607      	mov	r7, r0
   804c2:	460e      	mov	r6, r1
   804c4:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   804c6:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   804ca:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   804ce:	d026      	beq.n	8051e <pio_configure_pin_group+0x62>
   804d0:	d806      	bhi.n	804e0 <pio_configure_pin_group+0x24>
   804d2:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   804d6:	d00a      	beq.n	804ee <pio_configure_pin_group+0x32>
   804d8:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   804dc:	d013      	beq.n	80506 <pio_configure_pin_group+0x4a>
   804de:	e034      	b.n	8054a <pio_configure_pin_group+0x8e>
   804e0:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   804e4:	d01f      	beq.n	80526 <pio_configure_pin_group+0x6a>
   804e6:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   804ea:	d01c      	beq.n	80526 <pio_configure_pin_group+0x6a>
   804ec:	e02d      	b.n	8054a <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   804ee:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   804f2:	4632      	mov	r2, r6
   804f4:	4b16      	ldr	r3, [pc, #88]	; (80550 <pio_configure_pin_group+0x94>)
   804f6:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   804f8:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   804fc:	bf14      	ite	ne
   804fe:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80500:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80502:	2001      	movs	r0, #1
   80504:	e022      	b.n	8054c <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80506:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   8050a:	4632      	mov	r2, r6
   8050c:	4b10      	ldr	r3, [pc, #64]	; (80550 <pio_configure_pin_group+0x94>)
   8050e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80510:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80514:	bf14      	ite	ne
   80516:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80518:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   8051a:	2001      	movs	r0, #1
   8051c:	e016      	b.n	8054c <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   8051e:	4b0d      	ldr	r3, [pc, #52]	; (80554 <pio_configure_pin_group+0x98>)
   80520:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80522:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   80524:	e012      	b.n	8054c <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80526:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   8052a:	f005 0301 	and.w	r3, r5, #1
   8052e:	9300      	str	r3, [sp, #0]
   80530:	4638      	mov	r0, r7
   80532:	4631      	mov	r1, r6
   80534:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80538:	bf14      	ite	ne
   8053a:	2200      	movne	r2, #0
   8053c:	2201      	moveq	r2, #1
   8053e:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80542:	4c05      	ldr	r4, [pc, #20]	; (80558 <pio_configure_pin_group+0x9c>)
   80544:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80546:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80548:	e000      	b.n	8054c <pio_configure_pin_group+0x90>

	default:
		return 0;
   8054a:	2000      	movs	r0, #0
	}

	return 1;
}
   8054c:	b003      	add	sp, #12
   8054e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80550:	00080345 	.word	0x00080345
   80554:	00080385 	.word	0x00080385
   80558:	000803b9 	.word	0x000803b9

0008055c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   8055c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8055e:	4604      	mov	r4, r0
   80560:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80562:	4b0e      	ldr	r3, [pc, #56]	; (8059c <pio_handler_process+0x40>)
   80564:	4798      	blx	r3
   80566:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80568:	4620      	mov	r0, r4
   8056a:	4b0d      	ldr	r3, [pc, #52]	; (805a0 <pio_handler_process+0x44>)
   8056c:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   8056e:	4005      	ands	r5, r0
   80570:	d012      	beq.n	80598 <pio_handler_process+0x3c>
   80572:	4c0c      	ldr	r4, [pc, #48]	; (805a4 <pio_handler_process+0x48>)
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80574:	f854 3c0c 	ldr.w	r3, [r4, #-12]
   80578:	42b3      	cmp	r3, r6
   8057a:	d10a      	bne.n	80592 <pio_handler_process+0x36>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   8057c:	f854 1c08 	ldr.w	r1, [r4, #-8]
   80580:	4229      	tst	r1, r5
   80582:	d006      	beq.n	80592 <pio_handler_process+0x36>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80584:	6823      	ldr	r3, [r4, #0]
   80586:	4630      	mov	r0, r6
   80588:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   8058a:	f854 3c08 	ldr.w	r3, [r4, #-8]
   8058e:	ea25 0503 	bic.w	r5, r5, r3
   80592:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80594:	2d00      	cmp	r5, #0
   80596:	d1ed      	bne.n	80574 <pio_handler_process+0x18>
   80598:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8059a:	bf00      	nop
   8059c:	000803e1 	.word	0x000803e1
   805a0:	000803e5 	.word	0x000803e5
   805a4:	200708a4 	.word	0x200708a4

000805a8 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   805a8:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   805aa:	4802      	ldr	r0, [pc, #8]	; (805b4 <PIOA_Handler+0xc>)
   805ac:	210b      	movs	r1, #11
   805ae:	4b02      	ldr	r3, [pc, #8]	; (805b8 <PIOA_Handler+0x10>)
   805b0:	4798      	blx	r3
   805b2:	bd08      	pop	{r3, pc}
   805b4:	400e0e00 	.word	0x400e0e00
   805b8:	0008055d 	.word	0x0008055d

000805bc <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   805bc:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   805be:	4802      	ldr	r0, [pc, #8]	; (805c8 <PIOB_Handler+0xc>)
   805c0:	210c      	movs	r1, #12
   805c2:	4b02      	ldr	r3, [pc, #8]	; (805cc <PIOB_Handler+0x10>)
   805c4:	4798      	blx	r3
   805c6:	bd08      	pop	{r3, pc}
   805c8:	400e1000 	.word	0x400e1000
   805cc:	0008055d 	.word	0x0008055d

000805d0 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   805d0:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   805d2:	4802      	ldr	r0, [pc, #8]	; (805dc <PIOC_Handler+0xc>)
   805d4:	210d      	movs	r1, #13
   805d6:	4b02      	ldr	r3, [pc, #8]	; (805e0 <PIOC_Handler+0x10>)
   805d8:	4798      	blx	r3
   805da:	bd08      	pop	{r3, pc}
   805dc:	400e1200 	.word	0x400e1200
   805e0:	0008055d 	.word	0x0008055d

000805e4 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   805e4:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   805e6:	4802      	ldr	r0, [pc, #8]	; (805f0 <PIOD_Handler+0xc>)
   805e8:	210e      	movs	r1, #14
   805ea:	4b02      	ldr	r3, [pc, #8]	; (805f4 <PIOD_Handler+0x10>)
   805ec:	4798      	blx	r3
   805ee:	bd08      	pop	{r3, pc}
   805f0:	400e1400 	.word	0x400e1400
   805f4:	0008055d 	.word	0x0008055d

000805f8 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   805f8:	4b17      	ldr	r3, [pc, #92]	; (80658 <pmc_switch_mck_to_pllack+0x60>)
   805fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   805fc:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   80600:	4310      	orrs	r0, r2
   80602:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80604:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80606:	f013 0f08 	tst.w	r3, #8
   8060a:	d109      	bne.n	80620 <pmc_switch_mck_to_pllack+0x28>
   8060c:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80610:	4911      	ldr	r1, [pc, #68]	; (80658 <pmc_switch_mck_to_pllack+0x60>)
   80612:	e001      	b.n	80618 <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80614:	3b01      	subs	r3, #1
   80616:	d019      	beq.n	8064c <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80618:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   8061a:	f012 0f08 	tst.w	r2, #8
   8061e:	d0f9      	beq.n	80614 <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80620:	4b0d      	ldr	r3, [pc, #52]	; (80658 <pmc_switch_mck_to_pllack+0x60>)
   80622:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80624:	f022 0203 	bic.w	r2, r2, #3
   80628:	f042 0202 	orr.w	r2, r2, #2
   8062c:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8062e:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80630:	f010 0008 	ands.w	r0, r0, #8
   80634:	d10c      	bne.n	80650 <pmc_switch_mck_to_pllack+0x58>
   80636:	f44f 6300 	mov.w	r3, #2048	; 0x800
   8063a:	4907      	ldr	r1, [pc, #28]	; (80658 <pmc_switch_mck_to_pllack+0x60>)
   8063c:	e001      	b.n	80642 <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8063e:	3b01      	subs	r3, #1
   80640:	d008      	beq.n	80654 <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80642:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80644:	f012 0f08 	tst.w	r2, #8
   80648:	d0f9      	beq.n	8063e <pmc_switch_mck_to_pllack+0x46>
   8064a:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   8064c:	2001      	movs	r0, #1
   8064e:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
   80650:	2000      	movs	r0, #0
   80652:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80654:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80656:	4770      	bx	lr
   80658:	400e0600 	.word	0x400e0600

0008065c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   8065c:	b138      	cbz	r0, 8066e <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8065e:	4911      	ldr	r1, [pc, #68]	; (806a4 <pmc_switch_mainck_to_xtal+0x48>)
   80660:	6a0b      	ldr	r3, [r1, #32]
				PMC_CKGR_MOR_KEY_VALUE | CKGR_MOR_MOSCXTBY |
   80662:	4a11      	ldr	r2, [pc, #68]	; (806a8 <pmc_switch_mainck_to_xtal+0x4c>)
   80664:	401a      	ands	r2, r3
   80666:	4b11      	ldr	r3, [pc, #68]	; (806ac <pmc_switch_mainck_to_xtal+0x50>)
   80668:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8066a:	620b      	str	r3, [r1, #32]
   8066c:	4770      	bx	lr
				PMC_CKGR_MOR_KEY_VALUE | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   8066e:	4a0d      	ldr	r2, [pc, #52]	; (806a4 <pmc_switch_mainck_to_xtal+0x48>)
   80670:	6a13      	ldr	r3, [r2, #32]
				PMC_CKGR_MOR_KEY_VALUE | CKGR_MOR_MOSCXTEN |
   80672:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   80676:	f023 0303 	bic.w	r3, r3, #3
   8067a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   8067e:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   80682:	0209      	lsls	r1, r1, #8
   80684:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				PMC_CKGR_MOR_KEY_VALUE | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				PMC_CKGR_MOR_KEY_VALUE | CKGR_MOR_MOSCXTEN |
   80686:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				PMC_CKGR_MOR_KEY_VALUE | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80688:	6213      	str	r3, [r2, #32]
				PMC_CKGR_MOR_KEY_VALUE | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   8068a:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8068c:	f013 0f01 	tst.w	r3, #1
   80690:	d0fb      	beq.n	8068a <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= PMC_CKGR_MOR_KEY_VALUE | CKGR_MOR_MOSCSEL;
   80692:	4a04      	ldr	r2, [pc, #16]	; (806a4 <pmc_switch_mainck_to_xtal+0x48>)
   80694:	6a13      	ldr	r3, [r2, #32]
   80696:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   8069a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   8069e:	6213      	str	r3, [r2, #32]
   806a0:	4770      	bx	lr
   806a2:	bf00      	nop
   806a4:	400e0600 	.word	0x400e0600
   806a8:	fec8fffc 	.word	0xfec8fffc
   806ac:	01370002 	.word	0x01370002

000806b0 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   806b0:	4b02      	ldr	r3, [pc, #8]	; (806bc <pmc_osc_is_ready_mainck+0xc>)
   806b2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   806b4:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   806b8:	4770      	bx	lr
   806ba:	bf00      	nop
   806bc:	400e0600 	.word	0x400e0600

000806c0 <pmc_disable_pllack>:
/**
 * \brief Disable PLLA clock.
 */
void pmc_disable_pllack(void)
{
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   806c0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   806c4:	4b01      	ldr	r3, [pc, #4]	; (806cc <pmc_disable_pllack+0xc>)
   806c6:	629a      	str	r2, [r3, #40]	; 0x28
   806c8:	4770      	bx	lr
   806ca:	bf00      	nop
   806cc:	400e0600 	.word	0x400e0600

000806d0 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   806d0:	4b02      	ldr	r3, [pc, #8]	; (806dc <pmc_is_locked_pllack+0xc>)
   806d2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   806d4:	f000 0002 	and.w	r0, r0, #2
   806d8:	4770      	bx	lr
   806da:	bf00      	nop
   806dc:	400e0600 	.word	0x400e0600

000806e0 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   806e0:	282c      	cmp	r0, #44	; 0x2c
   806e2:	d820      	bhi.n	80726 <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
   806e4:	281f      	cmp	r0, #31
   806e6:	d80d      	bhi.n	80704 <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   806e8:	4b12      	ldr	r3, [pc, #72]	; (80734 <pmc_enable_periph_clk+0x54>)
   806ea:	699a      	ldr	r2, [r3, #24]
   806ec:	2301      	movs	r3, #1
   806ee:	4083      	lsls	r3, r0
   806f0:	401a      	ands	r2, r3
   806f2:	4293      	cmp	r3, r2
   806f4:	d019      	beq.n	8072a <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
   806f6:	2301      	movs	r3, #1
   806f8:	fa03 f000 	lsl.w	r0, r3, r0
   806fc:	4b0d      	ldr	r3, [pc, #52]	; (80734 <pmc_enable_periph_clk+0x54>)
   806fe:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80700:	2000      	movs	r0, #0
   80702:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80704:	4b0b      	ldr	r3, [pc, #44]	; (80734 <pmc_enable_periph_clk+0x54>)
   80706:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E)
	} else {
		ul_id -= 32;
   8070a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   8070c:	2301      	movs	r3, #1
   8070e:	4083      	lsls	r3, r0
   80710:	401a      	ands	r2, r3
   80712:	4293      	cmp	r3, r2
   80714:	d00b      	beq.n	8072e <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
   80716:	2301      	movs	r3, #1
   80718:	fa03 f000 	lsl.w	r0, r3, r0
   8071c:	4b05      	ldr	r3, [pc, #20]	; (80734 <pmc_enable_periph_clk+0x54>)
   8071e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   80722:	2000      	movs	r0, #0
   80724:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   80726:	2001      	movs	r0, #1
   80728:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   8072a:	2000      	movs	r0, #0
   8072c:	4770      	bx	lr
   8072e:	2000      	movs	r0, #0
}
   80730:	4770      	bx	lr
   80732:	bf00      	nop
   80734:	400e0600 	.word	0x400e0600

00080738 <tc_init>:
 * This is because the setting forces TIOB to be an input even if the
 * external event trigger has not been enabled with \c TC_CMR_ENETRG, and
 * thus prevents normal operation of TIOB.
 */
void tc_init(Tc *p_tc, uint32_t ul_channel, uint32_t ul_mode)
{
   80738:	b410      	push	{r4}
	TcChannel *tc_channel;

	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   8073a:	0189      	lsls	r1, r1, #6
   8073c:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   8073e:	2402      	movs	r4, #2
   80740:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   80742:	f04f 31ff 	mov.w	r1, #4294967295
   80746:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   80748:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   8074a:	605a      	str	r2, [r3, #4]
}
   8074c:	f85d 4b04 	ldr.w	r4, [sp], #4
   80750:	4770      	bx	lr
   80752:	bf00      	nop

00080754 <tc_set_block_mode>:
 * \param ul_blockmode Block mode register value to set.
 *
 */
void tc_set_block_mode(Tc *p_tc, uint32_t ul_blockmode)
{
	p_tc->TC_BMR = ul_blockmode;
   80754:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
   80758:	4770      	bx	lr
   8075a:	bf00      	nop

0008075c <tc_start>:
void tc_start(Tc *p_tc, uint32_t ul_channel)
{
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   8075c:	0189      	lsls	r1, r1, #6
   8075e:	2305      	movs	r3, #5
   80760:	5043      	str	r3, [r0, r1]
   80762:	4770      	bx	lr

00080764 <tc_stop>:
void tc_stop(Tc *p_tc, uint32_t ul_channel)
{
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKDIS;
   80764:	0189      	lsls	r1, r1, #6
   80766:	2302      	movs	r3, #2
   80768:	5043      	str	r3, [r0, r1]
   8076a:	4770      	bx	lr

0008076c <tc_read_cv>:
uint32_t tc_read_cv(Tc *p_tc, uint32_t ul_channel)
{
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_CV;
   8076c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80770:	6908      	ldr	r0, [r1, #16]
}
   80772:	4770      	bx	lr

00080774 <tc_write_rc>:
		uint32_t ul_value)
{
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   80774:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80778:	61ca      	str	r2, [r1, #28]
   8077a:	4770      	bx	lr

0008077c <tc_enable_interrupt>:
{
	TcChannel *tc_channel;

	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   8077c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
   80780:	624a      	str	r2, [r1, #36]	; 0x24
   80782:	4770      	bx	lr

00080784 <tc_get_status>:
{
	TcChannel *tc_channel;

	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80784:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
   80788:	6a08      	ldr	r0, [r1, #32]
}
   8078a:	4770      	bx	lr

0008078c <tc_find_mck_divisor>:
 *
 * \return 1 if a proper divisor has been found, otherwise 0.
 */
uint32_t tc_find_mck_divisor(uint32_t ul_freq, uint32_t ul_mck,
		uint32_t *p_uldiv, uint32_t *p_ultcclks, uint32_t ul_boardmck)
{
   8078c:	b4f0      	push	{r4, r5, r6, r7}
   8078e:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
   80790:	2402      	movs	r4, #2
   80792:	9401      	str	r4, [sp, #4]
   80794:	2408      	movs	r4, #8
   80796:	9402      	str	r4, [sp, #8]
   80798:	2420      	movs	r4, #32
   8079a:	9403      	str	r4, [sp, #12]
   8079c:	2480      	movs	r4, #128	; 0x80
   8079e:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
   807a0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   807a2:	0be4      	lsrs	r4, r4, #15
 * \return 1 if a proper divisor has been found, otherwise 0.
 */
uint32_t tc_find_mck_divisor(uint32_t ul_freq, uint32_t ul_mck,
		uint32_t *p_uldiv, uint32_t *p_ultcclks, uint32_t ul_boardmck)
{
	const uint32_t divisors[5] = { 2, 8, 32, 128,
   807a4:	9405      	str	r4, [sp, #20]
	/*  Satisfy frequency bound. */
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
   807a6:	0c4c      	lsrs	r4, r1, #17
		if (ul_freq > ul_high) {
   807a8:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
   807ac:	d81a      	bhi.n	807e4 <tc_find_mck_divisor+0x58>
			return 0;
		} else if (ul_freq >= ul_low) {
   807ae:	42a0      	cmp	r0, r4
   807b0:	d220      	bcs.n	807f4 <tc_find_mck_divisor+0x68>
   807b2:	ae01      	add	r6, sp, #4
	uint32_t ul_high, ul_low;

	/*  Satisfy frequency bound. */
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
   807b4:	2401      	movs	r4, #1
		ul_high = ul_mck / divisors[ul_index];
   807b6:	f856 5f04 	ldr.w	r5, [r6, #4]!
   807ba:	fbb1 f5f5 	udiv	r5, r1, r5
		ul_low  = ul_high / TC_DIV_FACTOR;
   807be:	0c2f      	lsrs	r7, r5, #16
		if (ul_freq > ul_high) {
   807c0:	4285      	cmp	r5, r0
   807c2:	d311      	bcc.n	807e8 <tc_find_mck_divisor+0x5c>
			return 0;
		} else if (ul_freq >= ul_low) {
   807c4:	4287      	cmp	r7, r0
   807c6:	d916      	bls.n	807f6 <tc_find_mck_divisor+0x6a>
	uint32_t ul_high, ul_low;

	/*  Satisfy frequency bound. */
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
   807c8:	3401      	adds	r4, #1
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
	uint32_t ul_index;
	uint32_t ul_high, ul_low;

	/*  Satisfy frequency bound. */
	for (ul_index = 0;
   807ca:	2c05      	cmp	r4, #5
   807cc:	d1f3      	bne.n	807b6 <tc_find_mck_divisor+0x2a>
   807ce:	e00d      	b.n	807ec <tc_find_mck_divisor+0x60>
		return 0;
	}

	/*  Store results. */
	if (p_uldiv) {
		*p_uldiv = divisors[ul_index];
   807d0:	a806      	add	r0, sp, #24
   807d2:	eb00 0184 	add.w	r1, r0, r4, lsl #2
   807d6:	f851 1c14 	ldr.w	r1, [r1, #-20]
   807da:	6011      	str	r1, [r2, #0]
	}

	if (p_ultcclks) {
   807dc:	b143      	cbz	r3, 807f0 <tc_find_mck_divisor+0x64>
		*p_ultcclks = ul_index;
   807de:	601c      	str	r4, [r3, #0]
	}

	return 1;
   807e0:	2001      	movs	r0, #1
   807e2:	e00b      	b.n	807fc <tc_find_mck_divisor+0x70>
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
			return 0;
   807e4:	2000      	movs	r0, #0
   807e6:	e009      	b.n	807fc <tc_find_mck_divisor+0x70>
   807e8:	2000      	movs	r0, #0
   807ea:	e007      	b.n	807fc <tc_find_mck_divisor+0x70>
		} else if (ul_freq >= ul_low) {
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
   807ec:	2000      	movs	r0, #0
   807ee:	e005      	b.n	807fc <tc_find_mck_divisor+0x70>

	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
   807f0:	2001      	movs	r0, #1
   807f2:	e003      	b.n	807fc <tc_find_mck_divisor+0x70>
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
	uint32_t ul_index;
	uint32_t ul_high, ul_low;

	/*  Satisfy frequency bound. */
	for (ul_index = 0;
   807f4:	2400      	movs	r4, #0
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
	}

	/*  Store results. */
	if (p_uldiv) {
   807f6:	2a00      	cmp	r2, #0
   807f8:	d1ea      	bne.n	807d0 <tc_find_mck_divisor+0x44>
   807fa:	e7ef      	b.n	807dc <tc_find_mck_divisor+0x50>
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
   807fc:	b006      	add	sp, #24
   807fe:	bcf0      	pop	{r4, r5, r6, r7}
   80800:	4770      	bx	lr
   80802:	bf00      	nop

00080804 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80804:	e7fe      	b.n	80804 <Dummy_Handler>
   80806:	bf00      	nop

00080808 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80808:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   8080a:	4b1e      	ldr	r3, [pc, #120]	; (80884 <Reset_Handler+0x7c>)
   8080c:	4a1e      	ldr	r2, [pc, #120]	; (80888 <Reset_Handler+0x80>)
   8080e:	429a      	cmp	r2, r3
   80810:	d003      	beq.n	8081a <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   80812:	4b1e      	ldr	r3, [pc, #120]	; (8088c <Reset_Handler+0x84>)
   80814:	4a1b      	ldr	r2, [pc, #108]	; (80884 <Reset_Handler+0x7c>)
   80816:	429a      	cmp	r2, r3
   80818:	d304      	bcc.n	80824 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   8081a:	4b1d      	ldr	r3, [pc, #116]	; (80890 <Reset_Handler+0x88>)
   8081c:	4a1d      	ldr	r2, [pc, #116]	; (80894 <Reset_Handler+0x8c>)
   8081e:	429a      	cmp	r2, r3
   80820:	d30f      	bcc.n	80842 <Reset_Handler+0x3a>
   80822:	e01a      	b.n	8085a <Reset_Handler+0x52>
   80824:	4b1c      	ldr	r3, [pc, #112]	; (80898 <Reset_Handler+0x90>)
   80826:	4c1d      	ldr	r4, [pc, #116]	; (8089c <Reset_Handler+0x94>)
   80828:	1ae4      	subs	r4, r4, r3
   8082a:	f024 0403 	bic.w	r4, r4, #3
   8082e:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80830:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
   80832:	4814      	ldr	r0, [pc, #80]	; (80884 <Reset_Handler+0x7c>)
   80834:	4914      	ldr	r1, [pc, #80]	; (80888 <Reset_Handler+0x80>)
   80836:	585a      	ldr	r2, [r3, r1]
   80838:	501a      	str	r2, [r3, r0]
   8083a:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   8083c:	42a3      	cmp	r3, r4
   8083e:	d1fa      	bne.n	80836 <Reset_Handler+0x2e>
   80840:	e7eb      	b.n	8081a <Reset_Handler+0x12>
   80842:	4b17      	ldr	r3, [pc, #92]	; (808a0 <Reset_Handler+0x98>)
   80844:	4917      	ldr	r1, [pc, #92]	; (808a4 <Reset_Handler+0x9c>)
   80846:	1ac9      	subs	r1, r1, r3
   80848:	f021 0103 	bic.w	r1, r1, #3
   8084c:	1d1a      	adds	r2, r3, #4
   8084e:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
   80850:	2200      	movs	r2, #0
   80852:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80856:	428b      	cmp	r3, r1
   80858:	d1fb      	bne.n	80852 <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   8085a:	4a13      	ldr	r2, [pc, #76]	; (808a8 <Reset_Handler+0xa0>)
   8085c:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
   80860:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   80864:	4911      	ldr	r1, [pc, #68]	; (808ac <Reset_Handler+0xa4>)
   80866:	608b      	str	r3, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80868:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   8086c:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
   80870:	d203      	bcs.n	8087a <Reset_Handler+0x72>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80872:	688a      	ldr	r2, [r1, #8]
   80874:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   80878:	608a      	str	r2, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   8087a:	4b0d      	ldr	r3, [pc, #52]	; (808b0 <Reset_Handler+0xa8>)
   8087c:	4798      	blx	r3

	/* Branch to main function */
	main();
   8087e:	4b0d      	ldr	r3, [pc, #52]	; (808b4 <Reset_Handler+0xac>)
   80880:	4798      	blx	r3
   80882:	e7fe      	b.n	80882 <Reset_Handler+0x7a>
   80884:	20070000 	.word	0x20070000
   80888:	00085e68 	.word	0x00085e68
   8088c:	2007087c 	.word	0x2007087c
   80890:	2007305c 	.word	0x2007305c
   80894:	2007087c 	.word	0x2007087c
   80898:	20070004 	.word	0x20070004
   8089c:	2007087f 	.word	0x2007087f
   808a0:	20070878 	.word	0x20070878
   808a4:	20073057 	.word	0x20073057
   808a8:	00080000 	.word	0x00080000
   808ac:	e000ed00 	.word	0xe000ed00
   808b0:	00081171 	.word	0x00081171
   808b4:	00080da9 	.word	0x00080da9

000808b8 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   808b8:	4b3e      	ldr	r3, [pc, #248]	; (809b4 <SystemCoreClockUpdate+0xfc>)
   808ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   808bc:	f003 0303 	and.w	r3, r3, #3
   808c0:	2b03      	cmp	r3, #3
   808c2:	d85f      	bhi.n	80984 <SystemCoreClockUpdate+0xcc>
   808c4:	e8df f003 	tbb	[pc, r3]
   808c8:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   808cc:	4b3a      	ldr	r3, [pc, #232]	; (809b8 <SystemCoreClockUpdate+0x100>)
   808ce:	695b      	ldr	r3, [r3, #20]
   808d0:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   808d4:	bf14      	ite	ne
   808d6:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   808da:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   808de:	4b37      	ldr	r3, [pc, #220]	; (809bc <SystemCoreClockUpdate+0x104>)
   808e0:	601a      	str	r2, [r3, #0]
   808e2:	e04f      	b.n	80984 <SystemCoreClockUpdate+0xcc>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   808e4:	4b33      	ldr	r3, [pc, #204]	; (809b4 <SystemCoreClockUpdate+0xfc>)
   808e6:	6a1b      	ldr	r3, [r3, #32]
   808e8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   808ec:	d003      	beq.n	808f6 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   808ee:	4a34      	ldr	r2, [pc, #208]	; (809c0 <SystemCoreClockUpdate+0x108>)
   808f0:	4b32      	ldr	r3, [pc, #200]	; (809bc <SystemCoreClockUpdate+0x104>)
   808f2:	601a      	str	r2, [r3, #0]
   808f4:	e046      	b.n	80984 <SystemCoreClockUpdate+0xcc>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   808f6:	4a33      	ldr	r2, [pc, #204]	; (809c4 <SystemCoreClockUpdate+0x10c>)
   808f8:	4b30      	ldr	r3, [pc, #192]	; (809bc <SystemCoreClockUpdate+0x104>)
   808fa:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   808fc:	4b2d      	ldr	r3, [pc, #180]	; (809b4 <SystemCoreClockUpdate+0xfc>)
   808fe:	6a1b      	ldr	r3, [r3, #32]
   80900:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80904:	2b10      	cmp	r3, #16
   80906:	d002      	beq.n	8090e <SystemCoreClockUpdate+0x56>
   80908:	2b20      	cmp	r3, #32
   8090a:	d004      	beq.n	80916 <SystemCoreClockUpdate+0x5e>
   8090c:	e03a      	b.n	80984 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   8090e:	4a2e      	ldr	r2, [pc, #184]	; (809c8 <SystemCoreClockUpdate+0x110>)
   80910:	4b2a      	ldr	r3, [pc, #168]	; (809bc <SystemCoreClockUpdate+0x104>)
   80912:	601a      	str	r2, [r3, #0]
				break;
   80914:	e036      	b.n	80984 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80916:	4a2a      	ldr	r2, [pc, #168]	; (809c0 <SystemCoreClockUpdate+0x108>)
   80918:	4b28      	ldr	r3, [pc, #160]	; (809bc <SystemCoreClockUpdate+0x104>)
   8091a:	601a      	str	r2, [r3, #0]
				break;
   8091c:	e032      	b.n	80984 <SystemCoreClockUpdate+0xcc>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   8091e:	4b25      	ldr	r3, [pc, #148]	; (809b4 <SystemCoreClockUpdate+0xfc>)
   80920:	6a1b      	ldr	r3, [r3, #32]
   80922:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80926:	d003      	beq.n	80930 <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80928:	4a25      	ldr	r2, [pc, #148]	; (809c0 <SystemCoreClockUpdate+0x108>)
   8092a:	4b24      	ldr	r3, [pc, #144]	; (809bc <SystemCoreClockUpdate+0x104>)
   8092c:	601a      	str	r2, [r3, #0]
   8092e:	e012      	b.n	80956 <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80930:	4a24      	ldr	r2, [pc, #144]	; (809c4 <SystemCoreClockUpdate+0x10c>)
   80932:	4b22      	ldr	r3, [pc, #136]	; (809bc <SystemCoreClockUpdate+0x104>)
   80934:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80936:	4b1f      	ldr	r3, [pc, #124]	; (809b4 <SystemCoreClockUpdate+0xfc>)
   80938:	6a1b      	ldr	r3, [r3, #32]
   8093a:	f003 0370 	and.w	r3, r3, #112	; 0x70
   8093e:	2b10      	cmp	r3, #16
   80940:	d002      	beq.n	80948 <SystemCoreClockUpdate+0x90>
   80942:	2b20      	cmp	r3, #32
   80944:	d004      	beq.n	80950 <SystemCoreClockUpdate+0x98>
   80946:	e006      	b.n	80956 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80948:	4a1f      	ldr	r2, [pc, #124]	; (809c8 <SystemCoreClockUpdate+0x110>)
   8094a:	4b1c      	ldr	r3, [pc, #112]	; (809bc <SystemCoreClockUpdate+0x104>)
   8094c:	601a      	str	r2, [r3, #0]
				break;
   8094e:	e002      	b.n	80956 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80950:	4a1b      	ldr	r2, [pc, #108]	; (809c0 <SystemCoreClockUpdate+0x108>)
   80952:	4b1a      	ldr	r3, [pc, #104]	; (809bc <SystemCoreClockUpdate+0x104>)
   80954:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80956:	4b17      	ldr	r3, [pc, #92]	; (809b4 <SystemCoreClockUpdate+0xfc>)
   80958:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   8095a:	f003 0303 	and.w	r3, r3, #3
   8095e:	2b02      	cmp	r3, #2
   80960:	d10d      	bne.n	8097e <SystemCoreClockUpdate+0xc6>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80962:	4b14      	ldr	r3, [pc, #80]	; (809b4 <SystemCoreClockUpdate+0xfc>)
   80964:	6a98      	ldr	r0, [r3, #40]	; 0x28
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80966:	6a99      	ldr	r1, [r3, #40]	; 0x28
   80968:	4b14      	ldr	r3, [pc, #80]	; (809bc <SystemCoreClockUpdate+0x104>)
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   8096a:	f3c0 400a 	ubfx	r0, r0, #16, #11
   8096e:	681a      	ldr	r2, [r3, #0]
   80970:	fb00 2202 	mla	r2, r0, r2, r2
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80974:	b2c9      	uxtb	r1, r1
   80976:	fbb2 f2f1 	udiv	r2, r2, r1
   8097a:	601a      	str	r2, [r3, #0]
   8097c:	e002      	b.n	80984 <SystemCoreClockUpdate+0xcc>
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
   8097e:	4a13      	ldr	r2, [pc, #76]	; (809cc <SystemCoreClockUpdate+0x114>)
   80980:	4b0e      	ldr	r3, [pc, #56]	; (809bc <SystemCoreClockUpdate+0x104>)
   80982:	601a      	str	r2, [r3, #0]
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80984:	4b0b      	ldr	r3, [pc, #44]	; (809b4 <SystemCoreClockUpdate+0xfc>)
   80986:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80988:	f003 0370 	and.w	r3, r3, #112	; 0x70
   8098c:	2b70      	cmp	r3, #112	; 0x70
   8098e:	d107      	bne.n	809a0 <SystemCoreClockUpdate+0xe8>
		SystemCoreClock /= 3U;
   80990:	4b0a      	ldr	r3, [pc, #40]	; (809bc <SystemCoreClockUpdate+0x104>)
   80992:	681a      	ldr	r2, [r3, #0]
   80994:	490e      	ldr	r1, [pc, #56]	; (809d0 <SystemCoreClockUpdate+0x118>)
   80996:	fba1 0202 	umull	r0, r2, r1, r2
   8099a:	0852      	lsrs	r2, r2, #1
   8099c:	601a      	str	r2, [r3, #0]
   8099e:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   809a0:	4b04      	ldr	r3, [pc, #16]	; (809b4 <SystemCoreClockUpdate+0xfc>)
   809a2:	6b19      	ldr	r1, [r3, #48]	; 0x30
   809a4:	4b05      	ldr	r3, [pc, #20]	; (809bc <SystemCoreClockUpdate+0x104>)
   809a6:	f3c1 1102 	ubfx	r1, r1, #4, #3
   809aa:	681a      	ldr	r2, [r3, #0]
   809ac:	40ca      	lsrs	r2, r1
   809ae:	601a      	str	r2, [r3, #0]
   809b0:	4770      	bx	lr
   809b2:	bf00      	nop
   809b4:	400e0600 	.word	0x400e0600
   809b8:	400e1a10 	.word	0x400e1a10
   809bc:	20070000 	.word	0x20070000
   809c0:	00b71b00 	.word	0x00b71b00
   809c4:	003d0900 	.word	0x003d0900
   809c8:	007a1200 	.word	0x007a1200
   809cc:	0e4e1c00 	.word	0x0e4e1c00
   809d0:	aaaaaaab 	.word	0xaaaaaaab

000809d4 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
   809d4:	4b1b      	ldr	r3, [pc, #108]	; (80a44 <system_init_flash+0x70>)
   809d6:	4298      	cmp	r0, r3
   809d8:	d806      	bhi.n	809e8 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
   809da:	2300      	movs	r3, #0
   809dc:	4a1a      	ldr	r2, [pc, #104]	; (80a48 <system_init_flash+0x74>)
   809de:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
   809e0:	f502 7200 	add.w	r2, r2, #512	; 0x200
   809e4:	6013      	str	r3, [r2, #0]
   809e6:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
   809e8:	4b18      	ldr	r3, [pc, #96]	; (80a4c <system_init_flash+0x78>)
   809ea:	4298      	cmp	r0, r3
   809ec:	d807      	bhi.n	809fe <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
   809ee:	f44f 7380 	mov.w	r3, #256	; 0x100
   809f2:	4a15      	ldr	r2, [pc, #84]	; (80a48 <system_init_flash+0x74>)
   809f4:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
   809f6:	f502 7200 	add.w	r2, r2, #512	; 0x200
   809fa:	6013      	str	r3, [r2, #0]
   809fc:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
   809fe:	4b14      	ldr	r3, [pc, #80]	; (80a50 <system_init_flash+0x7c>)
   80a00:	4298      	cmp	r0, r3
   80a02:	d807      	bhi.n	80a14 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
   80a04:	f44f 7300 	mov.w	r3, #512	; 0x200
   80a08:	4a0f      	ldr	r2, [pc, #60]	; (80a48 <system_init_flash+0x74>)
   80a0a:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
   80a0c:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80a10:	6013      	str	r3, [r2, #0]
   80a12:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
   80a14:	4b0f      	ldr	r3, [pc, #60]	; (80a54 <system_init_flash+0x80>)
   80a16:	4298      	cmp	r0, r3
   80a18:	d807      	bhi.n	80a2a <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
   80a1a:	f44f 7340 	mov.w	r3, #768	; 0x300
   80a1e:	4a0a      	ldr	r2, [pc, #40]	; (80a48 <system_init_flash+0x74>)
   80a20:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
   80a22:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80a26:	6013      	str	r3, [r2, #0]
   80a28:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
   80a2a:	4b0b      	ldr	r3, [pc, #44]	; (80a58 <system_init_flash+0x84>)
   80a2c:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
   80a2e:	bf94      	ite	ls
   80a30:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
   80a34:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
   80a38:	4a03      	ldr	r2, [pc, #12]	; (80a48 <system_init_flash+0x74>)
   80a3a:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
   80a3c:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80a40:	6013      	str	r3, [r2, #0]
   80a42:	4770      	bx	lr
   80a44:	0121eabf 	.word	0x0121eabf
   80a48:	400e0a00 	.word	0x400e0a00
   80a4c:	02faf07f 	.word	0x02faf07f
   80a50:	03d08fff 	.word	0x03d08fff
   80a54:	04c4b3ff 	.word	0x04c4b3ff
   80a58:	055d4a7f 	.word	0x055d4a7f

00080a5c <_sbrk>:
extern caddr_t _sbrk(int incr)
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if (heap == NULL) {
   80a5c:	4b05      	ldr	r3, [pc, #20]	; (80a74 <_sbrk+0x18>)
   80a5e:	681b      	ldr	r3, [r3, #0]
   80a60:	b913      	cbnz	r3, 80a68 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   80a62:	4a05      	ldr	r2, [pc, #20]	; (80a78 <_sbrk+0x1c>)
   80a64:	4b03      	ldr	r3, [pc, #12]	; (80a74 <_sbrk+0x18>)
   80a66:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   80a68:	4a02      	ldr	r2, [pc, #8]	; (80a74 <_sbrk+0x18>)
   80a6a:	6813      	ldr	r3, [r2, #0]

	heap += incr;
   80a6c:	4418      	add	r0, r3
   80a6e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
}
   80a70:	4618      	mov	r0, r3
   80a72:	4770      	bx	lr
   80a74:	20070908 	.word	0x20070908
   80a78:	20075060 	.word	0x20075060

00080a7c <adc_setup>:
 */ 

#include "adcdac.h"

int adc_setup(void)
{
   80a7c:	b538      	push	{r3, r4, r5, lr}
	
	if (pmc_enable_periph_clk(ID_ADC) == 0) 
   80a7e:	2025      	movs	r0, #37	; 0x25
   80a80:	4b11      	ldr	r3, [pc, #68]	; (80ac8 <adc_setup+0x4c>)
   80a82:	4798      	blx	r3
   80a84:	b9f0      	cbnz	r0, 80ac4 <adc_setup+0x48>
	{
		
		adc_init(ADC, sysclk_get_main_hz(), ADC_CLOCK, 0);
   80a86:	4c11      	ldr	r4, [pc, #68]	; (80acc <adc_setup+0x50>)
   80a88:	4620      	mov	r0, r4
   80a8a:	4911      	ldr	r1, [pc, #68]	; (80ad0 <adc_setup+0x54>)
   80a8c:	4a11      	ldr	r2, [pc, #68]	; (80ad4 <adc_setup+0x58>)
   80a8e:	2300      	movs	r3, #0
   80a90:	4d11      	ldr	r5, [pc, #68]	; (80ad8 <adc_setup+0x5c>)
   80a92:	47a8      	blx	r5
		adc_configure_timing(ADC, 0, 0, 0);
   80a94:	4620      	mov	r0, r4
   80a96:	2100      	movs	r1, #0
   80a98:	460a      	mov	r2, r1
   80a9a:	460b      	mov	r3, r1
   80a9c:	4d0f      	ldr	r5, [pc, #60]	; (80adc <adc_setup+0x60>)
   80a9e:	47a8      	blx	r5
		adc_set_resolution(ADC, ADC_MR_LOWRES_BITS_12);
   80aa0:	4620      	mov	r0, r4
   80aa2:	2100      	movs	r1, #0
   80aa4:	4b0e      	ldr	r3, [pc, #56]	; (80ae0 <adc_setup+0x64>)
   80aa6:	4798      	blx	r3
		adc_enable_channel(ADC, ADC_CHANNEL_BUTTONS);
   80aa8:	4620      	mov	r0, r4
   80aaa:	2107      	movs	r1, #7
   80aac:	4d0d      	ldr	r5, [pc, #52]	; (80ae4 <adc_setup+0x68>)
   80aae:	47a8      	blx	r5
		adc_enable_channel(ADC, ADC_CHANNEL_SAMPLE);
   80ab0:	4620      	mov	r0, r4
   80ab2:	210a      	movs	r1, #10
   80ab4:	47a8      	blx	r5
		adc_configure_trigger(ADC, ADC_TRIG_SW, 0);
   80ab6:	4620      	mov	r0, r4
   80ab8:	2100      	movs	r1, #0
   80aba:	460a      	mov	r2, r1
   80abc:	4b0a      	ldr	r3, [pc, #40]	; (80ae8 <adc_setup+0x6c>)
   80abe:	4798      	blx	r3
		return 1;
   80ac0:	2001      	movs	r0, #1
   80ac2:	bd38      	pop	{r3, r4, r5, pc}
	}
	else
	return 0;
   80ac4:	2000      	movs	r0, #0
}
   80ac6:	bd38      	pop	{r3, r4, r5, pc}
   80ac8:	000806e1 	.word	0x000806e1
   80acc:	400c0000 	.word	0x400c0000
   80ad0:	0a037a00 	.word	0x0a037a00
   80ad4:	01312d00 	.word	0x01312d00
   80ad8:	00080229 	.word	0x00080229
   80adc:	0008027d 	.word	0x0008027d
   80ae0:	0008025d 	.word	0x0008025d
   80ae4:	000802a5 	.word	0x000802a5
   80ae8:	0008026d 	.word	0x0008026d

00080aec <dac_setup>:


// added the DAC through ASF & also setup it


int dac_setup(void) {
   80aec:	b538      	push	{r3, r4, r5, lr}
		/* Enable the specified peripheral clock (ADC clock).
	   If function returns 0, then we can proceed... */
	if (pmc_enable_periph_clk(ID_DACC) == 0) {
   80aee:	2026      	movs	r0, #38	; 0x26
   80af0:	4b0e      	ldr	r3, [pc, #56]	; (80b2c <dac_setup+0x40>)
   80af2:	4798      	blx	r3
   80af4:	b9b8      	cbnz	r0, 80b26 <dac_setup+0x3a>
		dacc_reset(DACC);
   80af6:	4c0e      	ldr	r4, [pc, #56]	; (80b30 <dac_setup+0x44>)
   80af8:	4620      	mov	r0, r4
   80afa:	4b0e      	ldr	r3, [pc, #56]	; (80b34 <dac_setup+0x48>)
   80afc:	4798      	blx	r3
		dacc_set_transfer_mode(DACC, 0);
   80afe:	4620      	mov	r0, r4
   80b00:	2100      	movs	r1, #0
   80b02:	4b0d      	ldr	r3, [pc, #52]	; (80b38 <dac_setup+0x4c>)
   80b04:	4798      	blx	r3
		dacc_set_timing(DACC, 1, 1, 0);
   80b06:	4620      	mov	r0, r4
   80b08:	2101      	movs	r1, #1
   80b0a:	460a      	mov	r2, r1
   80b0c:	2300      	movs	r3, #0
   80b0e:	4d0b      	ldr	r5, [pc, #44]	; (80b3c <dac_setup+0x50>)
   80b10:	47a8      	blx	r5
		/* select and enable ADC channel - specified in 'adc.h' */
		dacc_set_channel_selection(DACC, DAC_CHANNEL);
   80b12:	4620      	mov	r0, r4
   80b14:	2100      	movs	r1, #0
   80b16:	4b0a      	ldr	r3, [pc, #40]	; (80b40 <dac_setup+0x54>)
   80b18:	4798      	blx	r3
		dacc_enable_channel(DACC, DAC_CHANNEL);	
   80b1a:	4620      	mov	r0, r4
   80b1c:	2100      	movs	r1, #0
   80b1e:	4b09      	ldr	r3, [pc, #36]	; (80b44 <dac_setup+0x58>)
   80b20:	4798      	blx	r3
		/* indicate everything's OK! */
		return 1;
   80b22:	2001      	movs	r0, #1
   80b24:	bd38      	pop	{r3, r4, r5, pc}
	}
	else
	/* indicate that something went wrong! */
	return 0;
   80b26:	2000      	movs	r0, #0
   80b28:	bd38      	pop	{r3, r4, r5, pc}
   80b2a:	bf00      	nop
   80b2c:	000806e1 	.word	0x000806e1
   80b30:	400c8000 	.word	0x400c8000
   80b34:	000802c5 	.word	0x000802c5
   80b38:	000802cd 	.word	0x000802cd
   80b3c:	00080301 	.word	0x00080301
   80b40:	000802e9 	.word	0x000802e9
   80b44:	00080331 	.word	0x00080331

00080b48 <lcd_update_time>:
#include "sampel.h"


// writing value of delay to LCD
void lcd_update_time(uint8_t pos, uint16_t val, const char *unit)
{
   80b48:	b530      	push	{r4, r5, lr}
   80b4a:	b083      	sub	sp, #12
   80b4c:	460d      	mov	r5, r1
   80b4e:	4614      	mov	r4, r2
	char value_str[8];
	/* position cursor */
	lcd_write(pos, LOW);
   80b50:	2100      	movs	r1, #0
   80b52:	4b0a      	ldr	r3, [pc, #40]	; (80b7c <lcd_update_time+0x34>)
   80b54:	4798      	blx	r3
	lcd_put_cursor(0,11);
   80b56:	2000      	movs	r0, #0
   80b58:	210b      	movs	r1, #11
   80b5a:	4b09      	ldr	r3, [pc, #36]	; (80b80 <lcd_update_time+0x38>)
   80b5c:	4798      	blx	r3
	delay(40);
   80b5e:	2028      	movs	r0, #40	; 0x28
   80b60:	4b08      	ldr	r3, [pc, #32]	; (80b84 <lcd_update_time+0x3c>)
   80b62:	4798      	blx	r3
	/* create formatted string */
	sprintf(value_str, "%d%s ", val, unit);
   80b64:	4668      	mov	r0, sp
   80b66:	4908      	ldr	r1, [pc, #32]	; (80b88 <lcd_update_time+0x40>)
   80b68:	462a      	mov	r2, r5
   80b6a:	4623      	mov	r3, r4
   80b6c:	4c07      	ldr	r4, [pc, #28]	; (80b8c <lcd_update_time+0x44>)
   80b6e:	47a0      	blx	r4
	/* write string on the LCD */
	LCDwriteString(value_str);
   80b70:	4668      	mov	r0, sp
   80b72:	4b07      	ldr	r3, [pc, #28]	; (80b90 <lcd_update_time+0x48>)
   80b74:	4798      	blx	r3
}
   80b76:	b003      	add	sp, #12
   80b78:	bd30      	pop	{r4, r5, pc}
   80b7a:	bf00      	nop
   80b7c:	00080e65 	.word	0x00080e65
   80b80:	0008102d 	.word	0x0008102d
   80b84:	00081135 	.word	0x00081135
   80b88:	00085c6c 	.word	0x00085c6c
   80b8c:	00081255 	.word	0x00081255
   80b90:	00081051 	.word	0x00081051

00080b94 <lcd_update_strength>:
// writing value of strength to LCD
void lcd_update_strength(uint8_t pos, uint16_t val, const char *unit)
{
   80b94:	b530      	push	{r4, r5, lr}
   80b96:	b083      	sub	sp, #12
   80b98:	460d      	mov	r5, r1
   80b9a:	4614      	mov	r4, r2
	char value_str[8];
	/* position cursor */
	lcd_write(pos, LOW);
   80b9c:	2100      	movs	r1, #0
   80b9e:	4b0a      	ldr	r3, [pc, #40]	; (80bc8 <lcd_update_strength+0x34>)
   80ba0:	4798      	blx	r3
	lcd_put_cursor(1,11);
   80ba2:	2001      	movs	r0, #1
   80ba4:	210b      	movs	r1, #11
   80ba6:	4b09      	ldr	r3, [pc, #36]	; (80bcc <lcd_update_strength+0x38>)
   80ba8:	4798      	blx	r3
	delay(40);
   80baa:	2028      	movs	r0, #40	; 0x28
   80bac:	4b08      	ldr	r3, [pc, #32]	; (80bd0 <lcd_update_strength+0x3c>)
   80bae:	4798      	blx	r3
	/* create formatted string */
	sprintf(value_str, "%d%s ", val, unit);
   80bb0:	4668      	mov	r0, sp
   80bb2:	4908      	ldr	r1, [pc, #32]	; (80bd4 <lcd_update_strength+0x40>)
   80bb4:	462a      	mov	r2, r5
   80bb6:	4623      	mov	r3, r4
   80bb8:	4c07      	ldr	r4, [pc, #28]	; (80bd8 <lcd_update_strength+0x44>)
   80bba:	47a0      	blx	r4
	/* write string on the LCD */
	LCDwriteString(value_str);
   80bbc:	4668      	mov	r0, sp
   80bbe:	4b07      	ldr	r3, [pc, #28]	; (80bdc <lcd_update_strength+0x48>)
   80bc0:	4798      	blx	r3
}
   80bc2:	b003      	add	sp, #12
   80bc4:	bd30      	pop	{r4, r5, pc}
   80bc6:	bf00      	nop
   80bc8:	00080e65 	.word	0x00080e65
   80bcc:	0008102d 	.word	0x0008102d
   80bd0:	00081135 	.word	0x00081135
   80bd4:	00085c6c 	.word	0x00085c6c
   80bd8:	00081255 	.word	0x00081255
   80bdc:	00081051 	.word	0x00081051

00080be0 <TC0_Handler>:

/**
 *  Interrupt handler for TC0 interrupt.
 */
void TC0_Handler(void)
{
   80be0:	b570      	push	{r4, r5, r6, lr}
 	static uint16_t buffer[buffer_time_max] = {0};	
 	static uint16_t i = 0;
 		
	/* clear status bit to acknowledge interrupt,
	   by reading TC Status Register - Channel 0 */
	tc_get_status(TC0, 0);
   80be2:	485e      	ldr	r0, [pc, #376]	; (80d5c <TC0_Handler+0x17c>)
   80be4:	2100      	movs	r1, #0
   80be6:	4b5e      	ldr	r3, [pc, #376]	; (80d60 <TC0_Handler+0x180>)
   80be8:	4798      	blx	r3

	adc_start(ADC);
   80bea:	485e      	ldr	r0, [pc, #376]	; (80d64 <TC0_Handler+0x184>)
   80bec:	4b5e      	ldr	r3, [pc, #376]	; (80d68 <TC0_Handler+0x188>)
   80bee:	4798      	blx	r3
	/* wait until DRDY is set (bit 24 in ADC Interrupt Status Register),
	   this checks if converted data is available */
	while ((adc_get_status(ADC) & 0x01000000) == 0);
   80bf0:	4d5c      	ldr	r5, [pc, #368]	; (80d64 <TC0_Handler+0x184>)
   80bf2:	4c5e      	ldr	r4, [pc, #376]	; (80d6c <TC0_Handler+0x18c>)
   80bf4:	4628      	mov	r0, r5
   80bf6:	47a0      	blx	r4
   80bf8:	f010 7f80 	tst.w	r0, #16777216	; 0x1000000
   80bfc:	d0fa      	beq.n	80bf4 <TC0_Handler+0x14>
	adc_in = adc_get_channel_value(ADC, ADC_CHANNEL_SAMPLE);
   80bfe:	4c59      	ldr	r4, [pc, #356]	; (80d64 <TC0_Handler+0x184>)
   80c00:	4620      	mov	r0, r4
   80c02:	210a      	movs	r1, #10
   80c04:	4b5a      	ldr	r3, [pc, #360]	; (80d70 <TC0_Handler+0x190>)
   80c06:	4798      	blx	r3
   80c08:	4605      	mov	r5, r0
	adc_start(ADC); /* start A/D conversion for reading buttons */
   80c0a:	4620      	mov	r0, r4
   80c0c:	4b56      	ldr	r3, [pc, #344]	; (80d68 <TC0_Handler+0x188>)
   80c0e:	4798      	blx	r3
	
	//to generate my level of delay
	buffer[i] = ((buffer[i] + adc_in) * strength) / 100;
   80c10:	4a58      	ldr	r2, [pc, #352]	; (80d74 <TC0_Handler+0x194>)
   80c12:	8813      	ldrh	r3, [r2, #0]
   80c14:	4958      	ldr	r1, [pc, #352]	; (80d78 <TC0_Handler+0x198>)
   80c16:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
   80c1a:	4428      	add	r0, r5
   80c1c:	4c57      	ldr	r4, [pc, #348]	; (80d7c <TC0_Handler+0x19c>)
   80c1e:	7824      	ldrb	r4, [r4, #0]
   80c20:	fb04 f000 	mul.w	r0, r4, r0
   80c24:	4c56      	ldr	r4, [pc, #344]	; (80d80 <TC0_Handler+0x1a0>)
   80c26:	fba4 6000 	umull	r6, r0, r4, r0
   80c2a:	0940      	lsrs	r0, r0, #5
   80c2c:	f821 0013 	strh.w	r0, [r1, r3, lsl #1]
	i++;
   80c30:	3301      	adds	r3, #1
   80c32:	b29b      	uxth	r3, r3
   80c34:	8013      	strh	r3, [r2, #0]
	if (i >= delay_time) {
   80c36:	4a53      	ldr	r2, [pc, #332]	; (80d84 <TC0_Handler+0x1a4>)
   80c38:	f9b2 2000 	ldrsh.w	r2, [r2]
   80c3c:	4293      	cmp	r3, r2
   80c3e:	db02      	blt.n	80c46 <TC0_Handler+0x66>
		i = 0;
   80c40:	2200      	movs	r2, #0
   80c42:	4b4c      	ldr	r3, [pc, #304]	; (80d74 <TC0_Handler+0x194>)
   80c44:	801a      	strh	r2, [r3, #0]
	}
	outvalue = adc_in + buffer[i];
   80c46:	4c4b      	ldr	r4, [pc, #300]	; (80d74 <TC0_Handler+0x194>)
   80c48:	8822      	ldrh	r2, [r4, #0]
   80c4a:	4b4b      	ldr	r3, [pc, #300]	; (80d78 <TC0_Handler+0x198>)
   80c4c:	f833 1012 	ldrh.w	r1, [r3, r2, lsl #1]
	// from digital - analog. This is what I hear. It sends the outvalue to conversion
	dacc_write_conversion_data(DACC, outvalue);
   80c50:	484d      	ldr	r0, [pc, #308]	; (80d88 <TC0_Handler+0x1a8>)
   80c52:	4429      	add	r1, r5
   80c54:	4b4d      	ldr	r3, [pc, #308]	; (80d8c <TC0_Handler+0x1ac>)
   80c56:	4798      	blx	r3
	
	/*
	 * removed TC3 handler and applied it directly in this TC
	 */
	if ((i % 200) == 0) {
   80c58:	8823      	ldrh	r3, [r4, #0]
   80c5a:	4a49      	ldr	r2, [pc, #292]	; (80d80 <TC0_Handler+0x1a0>)
   80c5c:	fba2 1203 	umull	r1, r2, r2, r3
   80c60:	0992      	lsrs	r2, r2, #6
   80c62:	21c8      	movs	r1, #200	; 0xc8
   80c64:	fb01 3312 	mls	r3, r1, r2, r3
   80c68:	b29b      	uxth	r3, r3
   80c6a:	2b00      	cmp	r3, #0
   80c6c:	d175      	bne.n	80d5a <TC0_Handler+0x17a>
		adc_in = adc_get_channel_value(ADC, ADC_CHANNEL_BUTTONS);
   80c6e:	483d      	ldr	r0, [pc, #244]	; (80d64 <TC0_Handler+0x184>)
   80c70:	2107      	movs	r1, #7
   80c72:	4b3f      	ldr	r3, [pc, #252]	; (80d70 <TC0_Handler+0x190>)
   80c74:	4798      	blx	r3
		if (adc_in < 400) { // increases strength by pressing RIGHT
   80c76:	f5b0 7fc8 	cmp.w	r0, #400	; 0x190
   80c7a:	d210      	bcs.n	80c9e <TC0_Handler+0xbe>
			if (strength < 100) {
   80c7c:	4b3f      	ldr	r3, [pc, #252]	; (80d7c <TC0_Handler+0x19c>)
   80c7e:	781b      	ldrb	r3, [r3, #0]
   80c80:	2b63      	cmp	r3, #99	; 0x63
   80c82:	d86a      	bhi.n	80d5a <TC0_Handler+0x17a>
				delay (40);
   80c84:	2028      	movs	r0, #40	; 0x28
   80c86:	4b42      	ldr	r3, [pc, #264]	; (80d90 <TC0_Handler+0x1b0>)
   80c88:	4798      	blx	r3
				strength++;
   80c8a:	4b3c      	ldr	r3, [pc, #240]	; (80d7c <TC0_Handler+0x19c>)
   80c8c:	7819      	ldrb	r1, [r3, #0]
   80c8e:	3101      	adds	r1, #1
   80c90:	b2c9      	uxtb	r1, r1
   80c92:	7019      	strb	r1, [r3, #0]
				display_strength_update(strength);
   80c94:	20cf      	movs	r0, #207	; 0xcf
   80c96:	4a3f      	ldr	r2, [pc, #252]	; (80d94 <TC0_Handler+0x1b4>)
   80c98:	4b3f      	ldr	r3, [pc, #252]	; (80d98 <TC0_Handler+0x1b8>)
   80c9a:	4798      	blx	r3
   80c9c:	bd70      	pop	{r4, r5, r6, pc}
			}
		} else if (adc_in < 1000) { // increases delay by pressing UP
   80c9e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
   80ca2:	d224      	bcs.n	80cee <TC0_Handler+0x10e>
			if (delay_time < buffer_max_value) {
   80ca4:	4b37      	ldr	r3, [pc, #220]	; (80d84 <TC0_Handler+0x1a4>)
   80ca6:	881b      	ldrh	r3, [r3, #0]
   80ca8:	b219      	sxth	r1, r3
   80caa:	f241 3286 	movw	r2, #4998	; 0x1386
   80cae:	4291      	cmp	r1, r2
   80cb0:	dc53      	bgt.n	80d5a <TC0_Handler+0x17a>
				delay_time += time_step;
   80cb2:	330a      	adds	r3, #10
   80cb4:	b29b      	uxth	r3, r3
				if (delay_time > buffer_max_value) {
   80cb6:	b219      	sxth	r1, r3
   80cb8:	f241 3287 	movw	r2, #4999	; 0x1387
   80cbc:	4291      	cmp	r1, r2
   80cbe:	dc02      	bgt.n	80cc6 <TC0_Handler+0xe6>
				strength++;
				display_strength_update(strength);
			}
		} else if (adc_in < 1000) { // increases delay by pressing UP
			if (delay_time < buffer_max_value) {
				delay_time += time_step;
   80cc0:	4a30      	ldr	r2, [pc, #192]	; (80d84 <TC0_Handler+0x1a4>)
   80cc2:	8013      	strh	r3, [r2, #0]
   80cc4:	e003      	b.n	80cce <TC0_Handler+0xee>
				if (delay_time > buffer_max_value) {
					delay_time = buffer_max_value;
   80cc6:	f241 3287 	movw	r2, #4999	; 0x1387
   80cca:	4b2e      	ldr	r3, [pc, #184]	; (80d84 <TC0_Handler+0x1a4>)
   80ccc:	801a      	strh	r2, [r3, #0]
				}
				display_time_update(delay_time);
   80cce:	4b2d      	ldr	r3, [pc, #180]	; (80d84 <TC0_Handler+0x1a4>)
   80cd0:	f9b3 3000 	ldrsh.w	r3, [r3]
   80cd4:	3301      	adds	r3, #1
   80cd6:	4931      	ldr	r1, [pc, #196]	; (80d9c <TC0_Handler+0x1bc>)
   80cd8:	fb81 2103 	smull	r2, r1, r1, r3
   80cdc:	17db      	asrs	r3, r3, #31
   80cde:	ebc3 01a1 	rsb	r1, r3, r1, asr #2
   80ce2:	20c0      	movs	r0, #192	; 0xc0
   80ce4:	b289      	uxth	r1, r1
   80ce6:	4a2e      	ldr	r2, [pc, #184]	; (80da0 <TC0_Handler+0x1c0>)
   80ce8:	4b2e      	ldr	r3, [pc, #184]	; (80da4 <TC0_Handler+0x1c4>)
   80cea:	4798      	blx	r3
   80cec:	bd70      	pop	{r4, r5, r6, pc}
			}			
		} else if (adc_in < 1500) { // decreases delay by pressing DOWN
   80cee:	f240 53db 	movw	r3, #1499	; 0x5db
   80cf2:	4298      	cmp	r0, r3
   80cf4:	d81f      	bhi.n	80d36 <TC0_Handler+0x156>
			if (delay_time > 0) { 
   80cf6:	4b23      	ldr	r3, [pc, #140]	; (80d84 <TC0_Handler+0x1a4>)
   80cf8:	881b      	ldrh	r3, [r3, #0]
   80cfa:	b21a      	sxth	r2, r3
   80cfc:	2a00      	cmp	r2, #0
   80cfe:	dd2c      	ble.n	80d5a <TC0_Handler+0x17a>
				delay_time -= time_step;
   80d00:	3b0a      	subs	r3, #10
   80d02:	b29b      	uxth	r3, r3
				if (delay_time < 0) {
   80d04:	f413 4f00 	tst.w	r3, #32768	; 0x8000
   80d08:	d102      	bne.n	80d10 <TC0_Handler+0x130>
				}
				display_time_update(delay_time);
			}			
		} else if (adc_in < 1500) { // decreases delay by pressing DOWN
			if (delay_time > 0) { 
				delay_time -= time_step;
   80d0a:	4a1e      	ldr	r2, [pc, #120]	; (80d84 <TC0_Handler+0x1a4>)
   80d0c:	8013      	strh	r3, [r2, #0]
   80d0e:	e002      	b.n	80d16 <TC0_Handler+0x136>
				if (delay_time < 0) {
					delay_time = 0;
   80d10:	2200      	movs	r2, #0
   80d12:	4b1c      	ldr	r3, [pc, #112]	; (80d84 <TC0_Handler+0x1a4>)
   80d14:	801a      	strh	r2, [r3, #0]
				}
				display_time_update(delay_time);
   80d16:	4b1b      	ldr	r3, [pc, #108]	; (80d84 <TC0_Handler+0x1a4>)
   80d18:	f9b3 3000 	ldrsh.w	r3, [r3]
   80d1c:	3301      	adds	r3, #1
   80d1e:	491f      	ldr	r1, [pc, #124]	; (80d9c <TC0_Handler+0x1bc>)
   80d20:	fb81 6103 	smull	r6, r1, r1, r3
   80d24:	17db      	asrs	r3, r3, #31
   80d26:	ebc3 01a1 	rsb	r1, r3, r1, asr #2
   80d2a:	20c0      	movs	r0, #192	; 0xc0
   80d2c:	b289      	uxth	r1, r1
   80d2e:	4a1c      	ldr	r2, [pc, #112]	; (80da0 <TC0_Handler+0x1c0>)
   80d30:	4b1c      	ldr	r3, [pc, #112]	; (80da4 <TC0_Handler+0x1c4>)
   80d32:	4798      	blx	r3
   80d34:	bd70      	pop	{r4, r5, r6, pc}
			}
		} else if (adc_in < 2000) { // decreases strength by pressing LEFT
   80d36:	f5b0 6ffa 	cmp.w	r0, #2000	; 0x7d0
   80d3a:	d20e      	bcs.n	80d5a <TC0_Handler+0x17a>
			if (strength > 0) {
   80d3c:	4b0f      	ldr	r3, [pc, #60]	; (80d7c <TC0_Handler+0x19c>)
   80d3e:	781b      	ldrb	r3, [r3, #0]
   80d40:	b15b      	cbz	r3, 80d5a <TC0_Handler+0x17a>
				delay (40);
   80d42:	2028      	movs	r0, #40	; 0x28
   80d44:	4b12      	ldr	r3, [pc, #72]	; (80d90 <TC0_Handler+0x1b0>)
   80d46:	4798      	blx	r3
				strength--;
   80d48:	4b0c      	ldr	r3, [pc, #48]	; (80d7c <TC0_Handler+0x19c>)
   80d4a:	7819      	ldrb	r1, [r3, #0]
   80d4c:	3901      	subs	r1, #1
   80d4e:	b2c9      	uxtb	r1, r1
   80d50:	7019      	strb	r1, [r3, #0]
				display_strength_update(strength);
   80d52:	20cf      	movs	r0, #207	; 0xcf
   80d54:	4a0f      	ldr	r2, [pc, #60]	; (80d94 <TC0_Handler+0x1b4>)
   80d56:	4b10      	ldr	r3, [pc, #64]	; (80d98 <TC0_Handler+0x1b8>)
   80d58:	4798      	blx	r3
   80d5a:	bd70      	pop	{r4, r5, r6, pc}
   80d5c:	40080000 	.word	0x40080000
   80d60:	00080785 	.word	0x00080785
   80d64:	400c0000 	.word	0x400c0000
   80d68:	0008029d 	.word	0x0008029d
   80d6c:	000802c1 	.word	0x000802c1
   80d70:	000802b1 	.word	0x000802b1
   80d74:	2007090e 	.word	0x2007090e
   80d78:	20070910 	.word	0x20070910
   80d7c:	2007090c 	.word	0x2007090c
   80d80:	51eb851f 	.word	0x51eb851f
   80d84:	20073020 	.word	0x20073020
   80d88:	400c8000 	.word	0x400c8000
   80d8c:	000802e5 	.word	0x000802e5
   80d90:	00081135 	.word	0x00081135
   80d94:	00085c74 	.word	0x00085c74
   80d98:	00080b95 	.word	0x00080b95
   80d9c:	66666667 	.word	0x66666667
   80da0:	00085c78 	.word	0x00085c78
   80da4:	00080b49 	.word	0x00080b49

00080da8 <main>:
#include "conf_tc.h"
#include "LCDShield.h"
#include "sampel.h"

int main(void)
{
   80da8:	b508      	push	{r3, lr}
	
	// intitiate the Due
	sysclk_init();
   80daa:	4b1b      	ldr	r3, [pc, #108]	; (80e18 <main+0x70>)
   80dac:	4798      	blx	r3
	board_init();
   80dae:	4b1b      	ldr	r3, [pc, #108]	; (80e1c <main+0x74>)
   80db0:	4798      	blx	r3
   80db2:	200b      	movs	r0, #11
   80db4:	4c1a      	ldr	r4, [pc, #104]	; (80e20 <main+0x78>)
   80db6:	47a0      	blx	r4
   80db8:	200c      	movs	r0, #12
   80dba:	47a0      	blx	r4
   80dbc:	200d      	movs	r0, #13
   80dbe:	47a0      	blx	r4
   80dc0:	200e      	movs	r0, #14
   80dc2:	47a0      	blx	r4
	// initiate the I/O-port
	ioport_init();
	// init ADC/DAC
	adc_setup();
   80dc4:	4b17      	ldr	r3, [pc, #92]	; (80e24 <main+0x7c>)
   80dc6:	4798      	blx	r3
	dac_setup();
   80dc8:	4b17      	ldr	r3, [pc, #92]	; (80e28 <main+0x80>)
   80dca:	4798      	blx	r3
	
	// init interrupt timer for delay
	configure_tc_buttons();	
   80dcc:	4b17      	ldr	r3, [pc, #92]	; (80e2c <main+0x84>)
   80dce:	4798      	blx	r3
	
	LCDinit();
   80dd0:	4b17      	ldr	r3, [pc, #92]	; (80e30 <main+0x88>)
   80dd2:	4798      	blx	r3
	
// just so you know :)

	LCDwriteString("Matko & Ali Rama");
   80dd4:	4817      	ldr	r0, [pc, #92]	; (80e34 <main+0x8c>)
   80dd6:	4c18      	ldr	r4, [pc, #96]	; (80e38 <main+0x90>)
   80dd8:	47a0      	blx	r4
	delay(400);
   80dda:	f44f 70c8 	mov.w	r0, #400	; 0x190
   80dde:	4b17      	ldr	r3, [pc, #92]	; (80e3c <main+0x94>)
   80de0:	4798      	blx	r3
	lcd_clear();
   80de2:	4b17      	ldr	r3, [pc, #92]	; (80e40 <main+0x98>)
   80de4:	4798      	blx	r3
	
	
 // text that doesn't change plus updated values	
	
	lcd_put_cursor(0,0);
   80de6:	2000      	movs	r0, #0
   80de8:	4601      	mov	r1, r0
   80dea:	4d16      	ldr	r5, [pc, #88]	; (80e44 <main+0x9c>)
   80dec:	47a8      	blx	r5
	LCDwriteString("Delay : ");
   80dee:	4816      	ldr	r0, [pc, #88]	; (80e48 <main+0xa0>)
   80df0:	47a0      	blx	r4
	display_time_update(init_delay);
   80df2:	20c0      	movs	r0, #192	; 0xc0
   80df4:	2100      	movs	r1, #0
   80df6:	4a15      	ldr	r2, [pc, #84]	; (80e4c <main+0xa4>)
   80df8:	4b15      	ldr	r3, [pc, #84]	; (80e50 <main+0xa8>)
   80dfa:	4798      	blx	r3
	lcd_put_cursor(1,0);
   80dfc:	2001      	movs	r0, #1
   80dfe:	2100      	movs	r1, #0
   80e00:	47a8      	blx	r5
	LCDwriteString("Strength : ");
   80e02:	4814      	ldr	r0, [pc, #80]	; (80e54 <main+0xac>)
   80e04:	47a0      	blx	r4
	display_strength_update(init_strength);
   80e06:	20cf      	movs	r0, #207	; 0xcf
   80e08:	2100      	movs	r1, #0
   80e0a:	4a13      	ldr	r2, [pc, #76]	; (80e58 <main+0xb0>)
   80e0c:	4b13      	ldr	r3, [pc, #76]	; (80e5c <main+0xb4>)
   80e0e:	4798      	blx	r3

	// interrupt timer for sampling
	configure_tc_audio();
   80e10:	4b13      	ldr	r3, [pc, #76]	; (80e60 <main+0xb8>)
   80e12:	4798      	blx	r3
   80e14:	e7fe      	b.n	80e14 <main+0x6c>
   80e16:	bf00      	nop
   80e18:	00080149 	.word	0x00080149
   80e1c:	000801a9 	.word	0x000801a9
   80e20:	000806e1 	.word	0x000806e1
   80e24:	00080a7d 	.word	0x00080a7d
   80e28:	00080aed 	.word	0x00080aed
   80e2c:	000810f9 	.word	0x000810f9
   80e30:	00080f39 	.word	0x00080f39
   80e34:	00085c7c 	.word	0x00085c7c
   80e38:	00081051 	.word	0x00081051
   80e3c:	00081135 	.word	0x00081135
   80e40:	00080f05 	.word	0x00080f05
   80e44:	0008102d 	.word	0x0008102d
   80e48:	00085c90 	.word	0x00085c90
   80e4c:	00085c78 	.word	0x00085c78
   80e50:	00080b49 	.word	0x00080b49
   80e54:	00085c9c 	.word	0x00085c9c
   80e58:	00085c74 	.word	0x00085c74
   80e5c:	00080b95 	.word	0x00080b95
   80e60:	00081071 	.word	0x00081071

00080e64 <lcd_write>:
 *        type = 0 controls the display
 *        type = 1 writes the content of the byte (usually interpreted as ASCII-code) to the display
 *
 *        LCDwrite returns the actual pinout value on PIOC 26-23, which is the reverse order compared to the Due pin order of D4-D7
 */
{
   80e64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80e68:	b084      	sub	sp, #16
   80e6a:	4607      	mov	r7, r0
   80e6c:	460d      	mov	r5, r1
        /* In it's infinite wisdom the shield has the data pins in mirrored order compared to the Due board */
        uint8_t mirror_pin[16]={0b0000,0b1000,0b0100,0b1100,0b0010,0b1010,0b0110,0b1110,0b0001,0b1001,0b0101,0b1101,0b0011,0b1011,0b0111,0b1111};
   80e6e:	4b22      	ldr	r3, [pc, #136]	; (80ef8 <lcd_write+0x94>)
   80e70:	466c      	mov	r4, sp
   80e72:	6818      	ldr	r0, [r3, #0]
   80e74:	6859      	ldr	r1, [r3, #4]
   80e76:	689a      	ldr	r2, [r3, #8]
   80e78:	68db      	ldr	r3, [r3, #12]
   80e7a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
        byte_orig = byte;


        /* write the first 4 bits to the shield. */
        byte = byte>>4;
        byte = mirror_pin[byte];
   80e7c:	eb04 1317 	add.w	r3, r4, r7, lsr #4
   80e80:	f813 2c10 	ldrb.w	r2, [r3, #-16]
        byte32 = (uint32_t)byte << 23;
   80e84:	05d3      	lsls	r3, r2, #23
        mirrored_output = byte<<4;
   80e86:	0112      	lsls	r2, r2, #4
   80e88:	fa5f f882 	uxtb.w	r8, r2
__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
   80e8c:	b125      	cbz	r5, 80e98 <lcd_write+0x34>
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80e8e:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
   80e92:	4a1a      	ldr	r2, [pc, #104]	; (80efc <lcd_write+0x98>)
   80e94:	6311      	str	r1, [r2, #48]	; 0x30
   80e96:	e003      	b.n	80ea0 <lcd_write+0x3c>
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80e98:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
   80e9c:	4a17      	ldr	r2, [pc, #92]	; (80efc <lcd_write+0x98>)
   80e9e:	6351      	str	r1, [r2, #52]	; 0x34
__always_inline static void arch_ioport_set_port_level(ioport_port_t port,
		ioport_port_mask_t mask, ioport_port_mask_t level)
{
	Pio *base = arch_ioport_port_to_base(port);

	base->PIO_SODR = mask & level;
   80ea0:	f003 62f0 	and.w	r2, r3, #125829120	; 0x7800000
   80ea4:	4c15      	ldr	r4, [pc, #84]	; (80efc <lcd_write+0x98>)
   80ea6:	6322      	str	r2, [r4, #48]	; 0x30
	base->PIO_CODR = mask & ~level;
   80ea8:	43db      	mvns	r3, r3
   80eaa:	f003 63f0 	and.w	r3, r3, #125829120	; 0x7800000
   80eae:	6363      	str	r3, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80eb0:	f44f 1600 	mov.w	r6, #2097152	; 0x200000
   80eb4:	6326      	str	r6, [r4, #48]	; 0x30
        
        ioport_set_pin_level(LCD_RS, type); 
        ioport_set_port_level(IOPORT_PIOC, LCD_mask_D4_D7, byte32);
        ioport_set_pin_level(LCD_Enable, HIGH);
        delay(1);
   80eb6:	2001      	movs	r0, #1
   80eb8:	4d11      	ldr	r5, [pc, #68]	; (80f00 <lcd_write+0x9c>)
   80eba:	47a8      	blx	r5
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80ebc:	6366      	str	r6, [r4, #52]	; 0x34
        ioport_set_pin_level(LCD_Enable, LOW);
        
        delay(100);
   80ebe:	2064      	movs	r0, #100	; 0x64
   80ec0:	47a8      	blx	r5
        
        /* write the second 4 bits to the shield. */
        byte = byte_orig;
        byte = byte & 0x0f;
        byte = mirror_pin[byte];
   80ec2:	f007 070f 	and.w	r7, r7, #15
   80ec6:	ab04      	add	r3, sp, #16
   80ec8:	441f      	add	r7, r3
   80eca:	f817 2c10 	ldrb.w	r2, [r7, #-16]
        byte32 = (uint32_t)byte<<23;
   80ece:	05d3      	lsls	r3, r2, #23
        mirrored_output = mirrored_output + byte;
   80ed0:	4442      	add	r2, r8
   80ed2:	b2d7      	uxtb	r7, r2
__always_inline static void arch_ioport_set_port_level(ioport_port_t port,
		ioport_port_mask_t mask, ioport_port_mask_t level)
{
	Pio *base = arch_ioport_port_to_base(port);

	base->PIO_SODR = mask & level;
   80ed4:	f003 62f0 	and.w	r2, r3, #125829120	; 0x7800000
   80ed8:	6322      	str	r2, [r4, #48]	; 0x30
	base->PIO_CODR = mask & ~level;
   80eda:	43db      	mvns	r3, r3
   80edc:	f003 63f0 	and.w	r3, r3, #125829120	; 0x7800000
   80ee0:	6363      	str	r3, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80ee2:	6326      	str	r6, [r4, #48]	; 0x30


        ioport_set_port_level(IOPORT_PIOC, LCD_mask_D4_D7, byte32);
        ioport_set_pin_level(LCD_Enable, HIGH);
        delay(1);
   80ee4:	2001      	movs	r0, #1
   80ee6:	47a8      	blx	r5
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80ee8:	6366      	str	r6, [r4, #52]	; 0x34
        ioport_set_pin_level(LCD_Enable, LOW);
		delay(100);
   80eea:	2064      	movs	r0, #100	; 0x64
   80eec:	47a8      	blx	r5
        
        return mirrored_output;
}
   80eee:	4638      	mov	r0, r7
   80ef0:	b004      	add	sp, #16
   80ef2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80ef6:	bf00      	nop
   80ef8:	00085ca8 	.word	0x00085ca8
   80efc:	400e1200 	.word	0x400e1200
   80f00:	00081135 	.word	0x00081135

00080f04 <lcd_clear>:
	return 1;
}

// clears display and sets cursror to home
int lcd_clear(void)
{
   80f04:	b508      	push	{r3, lr}
	lcd_write(0x01, LOW);
   80f06:	2001      	movs	r0, #1
   80f08:	2100      	movs	r1, #0
   80f0a:	4b04      	ldr	r3, [pc, #16]	; (80f1c <lcd_clear+0x18>)
   80f0c:	4798      	blx	r3
	delay(1600);	/* delay of 1.6 ms is necessary */
   80f0e:	f44f 60c8 	mov.w	r0, #1600	; 0x640
   80f12:	4b03      	ldr	r3, [pc, #12]	; (80f20 <lcd_clear+0x1c>)
   80f14:	4798      	blx	r3
	return 1;
}
   80f16:	2001      	movs	r0, #1
   80f18:	bd08      	pop	{r3, pc}
   80f1a:	bf00      	nop
   80f1c:	00080e65 	.word	0x00080e65
   80f20:	00081135 	.word	0x00081135

00080f24 <lcd_set_cursor>:

// Sets the cursor
int lcd_set_cursor(uint8_t cursor)
{
   80f24:	b508      	push	{r3, lr}
	lcd_write((0x0C | cursor), LOW);
   80f26:	f040 000c 	orr.w	r0, r0, #12
   80f2a:	2100      	movs	r1, #0
   80f2c:	4b01      	ldr	r3, [pc, #4]	; (80f34 <lcd_set_cursor+0x10>)
   80f2e:	4798      	blx	r3
	return 1;
}
   80f30:	2001      	movs	r0, #1
   80f32:	bd08      	pop	{r3, pc}
   80f34:	00080e65 	.word	0x00080e65

00080f38 <LCDinit>:

/*
 * Initializes the display on the LCD shield, returns 1 if everything is OK.
 */
int LCDinit(void)
{	
   80f38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   80f3c:	4c36      	ldr	r4, [pc, #216]	; (81018 <LCDinit+0xe0>)
   80f3e:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
   80f42:	6127      	str	r7, [r4, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80f44:	f8c4 70a0 	str.w	r7, [r4, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   80f48:	f44f 1500 	mov.w	r5, #2097152	; 0x200000
   80f4c:	6125      	str	r5, [r4, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80f4e:	f8c4 50a0 	str.w	r5, [r4, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   80f52:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
   80f56:	6123      	str	r3, [r4, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80f58:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80f5c:	6323      	str	r3, [r4, #48]	; 0x30
		ioport_port_mask_t mask, enum ioport_direction group_direction)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (group_direction == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = mask;
   80f5e:	f04f 63f0 	mov.w	r3, #125829120	; 0x7800000
   80f62:	6123      	str	r3, [r4, #16]
	} else if (group_direction == IOPORT_DIR_INPUT) {
		base->PIO_ODR = mask;
	}

	base->PIO_OWER = mask;
   80f64:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80f68:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_BACKLIGHT, HIGH);
	ioport_set_port_dir(IOPORT_PIOC, LCD_mask_D4_D7, IOPORT_DIR_OUTPUT);

	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(30000);		/* wait > 15 ms */
   80f6a:	f247 5030 	movw	r0, #30000	; 0x7530
   80f6e:	4e2b      	ldr	r6, [pc, #172]	; (8101c <LCDinit+0xe4>)
   80f70:	47b0      	blx	r6
   80f72:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80f74:	f04f 6a80 	mov.w	sl, #67108864	; 0x4000000
   80f78:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
   80f7c:	f04f 7900 	mov.w	r9, #33554432	; 0x2000000
   80f80:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80f84:	f04f 7880 	mov.w	r8, #16777216	; 0x1000000
   80f88:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   80f8c:	f44f 0700 	mov.w	r7, #8388608	; 0x800000
   80f90:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80f92:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, HIGH);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);		/* delay 1 us */
   80f94:	2001      	movs	r0, #1
   80f96:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80f98:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(4100);	/* wait for more than 4,1 ms */
   80f9a:	f241 0004 	movw	r0, #4100	; 0x1004
   80f9e:	47b0      	blx	r6
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80fa0:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
   80fa4:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80fa8:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   80fac:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80fae:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, HIGH);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);		/* delay 1 us */
   80fb0:	2001      	movs	r0, #1
   80fb2:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80fb4:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);

	delay(100);	/* wait 100 us */
   80fb6:	2064      	movs	r0, #100	; 0x64
   80fb8:	47b0      	blx	r6
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80fba:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
   80fbe:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80fc2:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   80fc6:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80fc8:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, HIGH);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);		/* delay 1 us */
   80fca:	2001      	movs	r0, #1
   80fcc:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80fce:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);		
	
	delay(100);	/* wait 100 us */
   80fd0:	2064      	movs	r0, #100	; 0x64
   80fd2:	47b0      	blx	r6
   80fd4:	f8c4 a034 	str.w	sl, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80fd8:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80fdc:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   80fe0:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80fe2:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, LOW);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);
   80fe4:	2001      	movs	r0, #1
   80fe6:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80fe8:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(100);
   80fea:	2064      	movs	r0, #100	; 0x64
   80fec:	47b0      	blx	r6

	lcd_write(0b00101000, LOW);		/* Two rows, small font */
   80fee:	2028      	movs	r0, #40	; 0x28
   80ff0:	2100      	movs	r1, #0
   80ff2:	4c0b      	ldr	r4, [pc, #44]	; (81020 <LCDinit+0xe8>)
   80ff4:	47a0      	blx	r4
	lcd_write(0b00001000, LOW);		/* Display off */
   80ff6:	2008      	movs	r0, #8
   80ff8:	2100      	movs	r1, #0
   80ffa:	47a0      	blx	r4
	lcd_clear();					/* Display clear */
   80ffc:	4b09      	ldr	r3, [pc, #36]	; (81024 <LCDinit+0xec>)
   80ffe:	4798      	blx	r3
	
	delay(3000);
   81000:	f640 30b8 	movw	r0, #3000	; 0xbb8
   81004:	47b0      	blx	r6
	
	lcd_write(0b00000110, LOW);			/* Entry mode set: move cursor right, no display shift */
   81006:	2006      	movs	r0, #6
   81008:	2100      	movs	r1, #0
   8100a:	47a0      	blx	r4
	lcd_set_cursor(LCD_NO_CURSOR);		/* Display on + cursor setting */
   8100c:	2000      	movs	r0, #0
   8100e:	4b06      	ldr	r3, [pc, #24]	; (81028 <LCDinit+0xf0>)
   81010:	4798      	blx	r3

	/* simple return statement showing that the
	   initialization of the LCD has completed */
	return 1;
}
   81012:	2001      	movs	r0, #1
   81014:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   81018:	400e1200 	.word	0x400e1200
   8101c:	00081135 	.word	0x00081135
   81020:	00080e65 	.word	0x00080e65
   81024:	00080f05 	.word	0x00080f05
   81028:	00080f25 	.word	0x00080f25

0008102c <lcd_put_cursor>:
}

// By pointing to the correct address on the DDRAM of the LCD we can put cursor at
// the column and row that we intend
int lcd_put_cursor(uint8_t row, uint8_t col)
{
   8102c:	b508      	push	{r3, lr}
	lcd_write((128 | (row << 6) | col), LOW);
   8102e:	f061 017f 	orn	r1, r1, #127	; 0x7f
   81032:	ea41 1080 	orr.w	r0, r1, r0, lsl #6
   81036:	b2c0      	uxtb	r0, r0
   81038:	2100      	movs	r1, #0
   8103a:	4b03      	ldr	r3, [pc, #12]	; (81048 <lcd_put_cursor+0x1c>)
   8103c:	4798      	blx	r3
	delay(40);	/* delay of 40 microseconds is necessary */
   8103e:	2028      	movs	r0, #40	; 0x28
   81040:	4b02      	ldr	r3, [pc, #8]	; (8104c <lcd_put_cursor+0x20>)
   81042:	4798      	blx	r3
	return 1;
}
   81044:	2001      	movs	r0, #1
   81046:	bd08      	pop	{r3, pc}
   81048:	00080e65 	.word	0x00080e65
   8104c:	00081135 	.word	0x00081135

00081050 <LCDwriteString>:
	return LCDwriteString(digit_str);
}

/* displays strings on the LCD display */
int LCDwriteString(const char *str)
{
   81050:	b570      	push	{r4, r5, r6, lr}
   81052:	4604      	mov	r4, r0
	// loop until break
	while (*str != '\0') {
   81054:	7800      	ldrb	r0, [r0, #0]
   81056:	b138      	cbz	r0, 81068 <LCDwriteString+0x18>
		lcd_write(*str, HIGH);
   81058:	2601      	movs	r6, #1
   8105a:	4d04      	ldr	r5, [pc, #16]	; (8106c <LCDwriteString+0x1c>)
   8105c:	4631      	mov	r1, r6
   8105e:	47a8      	blx	r5

/* displays strings on the LCD display */
int LCDwriteString(const char *str)
{
	// loop until break
	while (*str != '\0') {
   81060:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   81064:	2800      	cmp	r0, #0
   81066:	d1f9      	bne.n	8105c <LCDwriteString+0xc>
		lcd_write(*str, HIGH);
		str++;
	}
	return 1;
   81068:	2001      	movs	r0, #1
   8106a:	bd70      	pop	{r4, r5, r6, pc}
   8106c:	00080e65 	.word	0x00080e65

00081070 <configure_tc_audio>:

#include <asf.h>
#include "conf_tc.h"

void configure_tc_audio(void)
{
   81070:	b530      	push	{r4, r5, lr}
   81072:	b085      	sub	sp, #20
	uint32_t ul_sysclk = sysclk_get_cpu_hz();
	uint32_t ul_div, ul_tcclks;
	/* Configure PMC */
	pmc_enable_periph_clk(ID_TC0);
   81074:	201b      	movs	r0, #27
   81076:	4b16      	ldr	r3, [pc, #88]	; (810d0 <configure_tc_audio+0x60>)
   81078:	4798      	blx	r3
	tc_find_mck_divisor(SAMPLE_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
   8107a:	4d16      	ldr	r5, [pc, #88]	; (810d4 <configure_tc_audio+0x64>)
   8107c:	9500      	str	r5, [sp, #0]
   8107e:	f242 7010 	movw	r0, #10000	; 0x2710
   81082:	4629      	mov	r1, r5
   81084:	aa03      	add	r2, sp, #12
   81086:	ab02      	add	r3, sp, #8
   81088:	4c13      	ldr	r4, [pc, #76]	; (810d8 <configure_tc_audio+0x68>)
   8108a:	47a0      	blx	r4
	/** Configure TC for a 10 kHz frequency and trigger on RC compare. */
	tc_init(TC0, 0, (0 | TC_CMR_CPCTRG));
   8108c:	4c13      	ldr	r4, [pc, #76]	; (810dc <configure_tc_audio+0x6c>)
   8108e:	4620      	mov	r0, r4
   81090:	2100      	movs	r1, #0
   81092:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   81096:	4b12      	ldr	r3, [pc, #72]	; (810e0 <configure_tc_audio+0x70>)
   81098:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / SAMPLE_FREQ);
   8109a:	9b03      	ldr	r3, [sp, #12]
   8109c:	fbb5 f5f3 	udiv	r5, r5, r3
   810a0:	4a10      	ldr	r2, [pc, #64]	; (810e4 <configure_tc_audio+0x74>)
   810a2:	fba2 3205 	umull	r3, r2, r2, r5
   810a6:	4620      	mov	r0, r4
   810a8:	2100      	movs	r1, #0
   810aa:	0b52      	lsrs	r2, r2, #13
   810ac:	4b0e      	ldr	r3, [pc, #56]	; (810e8 <configure_tc_audio+0x78>)
   810ae:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   810b0:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   810b4:	4b0d      	ldr	r3, [pc, #52]	; (810ec <configure_tc_audio+0x7c>)
   810b6:	601a      	str	r2, [r3, #0]
	/* Configure and enable interrupt on RC compare */
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
   810b8:	4620      	mov	r0, r4
   810ba:	2100      	movs	r1, #0
   810bc:	2210      	movs	r2, #16
   810be:	4b0c      	ldr	r3, [pc, #48]	; (810f0 <configure_tc_audio+0x80>)
   810c0:	4798      	blx	r3
	tc_start(TC0, 0);
   810c2:	4620      	mov	r0, r4
   810c4:	2100      	movs	r1, #0
   810c6:	4b0b      	ldr	r3, [pc, #44]	; (810f4 <configure_tc_audio+0x84>)
   810c8:	4798      	blx	r3
}
   810ca:	b005      	add	sp, #20
   810cc:	bd30      	pop	{r4, r5, pc}
   810ce:	bf00      	nop
   810d0:	000806e1 	.word	0x000806e1
   810d4:	0501bd00 	.word	0x0501bd00
   810d8:	0008078d 	.word	0x0008078d
   810dc:	40080000 	.word	0x40080000
   810e0:	00080739 	.word	0x00080739
   810e4:	d1b71759 	.word	0xd1b71759
   810e8:	00080775 	.word	0x00080775
   810ec:	e000e100 	.word	0xe000e100
   810f0:	0008077d 	.word	0x0008077d
   810f4:	0008075d 	.word	0x0008075d

000810f8 <configure_tc_buttons>:


void configure_tc_buttons(void)
{
   810f8:	b510      	push	{r4, lr}
		/* Configure interrupts for shield buttons */
		/*----------------------------------------------------------------*/

		/* Configure power management of timer clock 1 */
		
	pmc_enable_periph_clk(ID_TC3);
   810fa:	201e      	movs	r0, #30
   810fc:	4b08      	ldr	r3, [pc, #32]	; (81120 <configure_tc_buttons+0x28>)
   810fe:	4798      	blx	r3
	tc_init(TC1, 0, 0);
   81100:	4c08      	ldr	r4, [pc, #32]	; (81124 <configure_tc_buttons+0x2c>)
   81102:	4620      	mov	r0, r4
   81104:	2100      	movs	r1, #0
   81106:	460a      	mov	r2, r1
   81108:	4b07      	ldr	r3, [pc, #28]	; (81128 <configure_tc_buttons+0x30>)
   8110a:	4798      	blx	r3
	tc_set_block_mode(TC1, 0);
   8110c:	4620      	mov	r0, r4
   8110e:	2100      	movs	r1, #0
   81110:	4b06      	ldr	r3, [pc, #24]	; (8112c <configure_tc_buttons+0x34>)
   81112:	4798      	blx	r3
	tc_stop(TC1, 0);
   81114:	4620      	mov	r0, r4
   81116:	2100      	movs	r1, #0
   81118:	4b05      	ldr	r3, [pc, #20]	; (81130 <configure_tc_buttons+0x38>)
   8111a:	4798      	blx	r3
   8111c:	bd10      	pop	{r4, pc}
   8111e:	bf00      	nop
   81120:	000806e1 	.word	0x000806e1
   81124:	40084000 	.word	0x40084000
   81128:	00080739 	.word	0x00080739
   8112c:	00080755 	.word	0x00080755
   81130:	00080765 	.word	0x00080765

00081134 <delay>:
}

// to generate my delay
void delay(uint32_t us)
{
   81134:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   81136:	4604      	mov	r4, r0
	tc_start(TC1, 0);
   81138:	4809      	ldr	r0, [pc, #36]	; (81160 <delay+0x2c>)
   8113a:	2100      	movs	r1, #0
   8113c:	4b09      	ldr	r3, [pc, #36]	; (81164 <delay+0x30>)
   8113e:	4798      	blx	r3
	while (tc_read_cv(TC1, 0) < (us * 42)); // delay in microseconds
   81140:	272a      	movs	r7, #42	; 0x2a
   81142:	fb07 f704 	mul.w	r7, r7, r4
   81146:	4e06      	ldr	r6, [pc, #24]	; (81160 <delay+0x2c>)
   81148:	2500      	movs	r5, #0
   8114a:	4c07      	ldr	r4, [pc, #28]	; (81168 <delay+0x34>)
   8114c:	4630      	mov	r0, r6
   8114e:	4629      	mov	r1, r5
   81150:	47a0      	blx	r4
   81152:	42b8      	cmp	r0, r7
   81154:	d3fa      	bcc.n	8114c <delay+0x18>
	tc_stop(TC1, 0);
   81156:	4802      	ldr	r0, [pc, #8]	; (81160 <delay+0x2c>)
   81158:	2100      	movs	r1, #0
   8115a:	4b04      	ldr	r3, [pc, #16]	; (8116c <delay+0x38>)
   8115c:	4798      	blx	r3
   8115e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   81160:	40084000 	.word	0x40084000
   81164:	0008075d 	.word	0x0008075d
   81168:	0008076d 	.word	0x0008076d
   8116c:	00080765 	.word	0x00080765

00081170 <__libc_init_array>:
   81170:	b570      	push	{r4, r5, r6, lr}
   81172:	4e0f      	ldr	r6, [pc, #60]	; (811b0 <__libc_init_array+0x40>)
   81174:	4d0f      	ldr	r5, [pc, #60]	; (811b4 <__libc_init_array+0x44>)
   81176:	1b76      	subs	r6, r6, r5
   81178:	10b6      	asrs	r6, r6, #2
   8117a:	d007      	beq.n	8118c <__libc_init_array+0x1c>
   8117c:	3d04      	subs	r5, #4
   8117e:	2400      	movs	r4, #0
   81180:	3401      	adds	r4, #1
   81182:	f855 3f04 	ldr.w	r3, [r5, #4]!
   81186:	4798      	blx	r3
   81188:	42a6      	cmp	r6, r4
   8118a:	d1f9      	bne.n	81180 <__libc_init_array+0x10>
   8118c:	4e0a      	ldr	r6, [pc, #40]	; (811b8 <__libc_init_array+0x48>)
   8118e:	4d0b      	ldr	r5, [pc, #44]	; (811bc <__libc_init_array+0x4c>)
   81190:	f004 fe54 	bl	85e3c <_init>
   81194:	1b76      	subs	r6, r6, r5
   81196:	10b6      	asrs	r6, r6, #2
   81198:	d008      	beq.n	811ac <__libc_init_array+0x3c>
   8119a:	3d04      	subs	r5, #4
   8119c:	2400      	movs	r4, #0
   8119e:	3401      	adds	r4, #1
   811a0:	f855 3f04 	ldr.w	r3, [r5, #4]!
   811a4:	4798      	blx	r3
   811a6:	42a6      	cmp	r6, r4
   811a8:	d1f9      	bne.n	8119e <__libc_init_array+0x2e>
   811aa:	bd70      	pop	{r4, r5, r6, pc}
   811ac:	bd70      	pop	{r4, r5, r6, pc}
   811ae:	bf00      	nop
   811b0:	00085e48 	.word	0x00085e48
   811b4:	00085e48 	.word	0x00085e48
   811b8:	00085e50 	.word	0x00085e50
   811bc:	00085e48 	.word	0x00085e48

000811c0 <memset>:
   811c0:	b4f0      	push	{r4, r5, r6, r7}
   811c2:	0784      	lsls	r4, r0, #30
   811c4:	d043      	beq.n	8124e <memset+0x8e>
   811c6:	1e54      	subs	r4, r2, #1
   811c8:	2a00      	cmp	r2, #0
   811ca:	d03e      	beq.n	8124a <memset+0x8a>
   811cc:	b2cd      	uxtb	r5, r1
   811ce:	4603      	mov	r3, r0
   811d0:	e003      	b.n	811da <memset+0x1a>
   811d2:	1e62      	subs	r2, r4, #1
   811d4:	2c00      	cmp	r4, #0
   811d6:	d038      	beq.n	8124a <memset+0x8a>
   811d8:	4614      	mov	r4, r2
   811da:	f803 5b01 	strb.w	r5, [r3], #1
   811de:	079a      	lsls	r2, r3, #30
   811e0:	d1f7      	bne.n	811d2 <memset+0x12>
   811e2:	2c03      	cmp	r4, #3
   811e4:	d92a      	bls.n	8123c <memset+0x7c>
   811e6:	b2cd      	uxtb	r5, r1
   811e8:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   811ec:	2c0f      	cmp	r4, #15
   811ee:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   811f2:	d915      	bls.n	81220 <memset+0x60>
   811f4:	f1a4 0710 	sub.w	r7, r4, #16
   811f8:	093f      	lsrs	r7, r7, #4
   811fa:	f103 0610 	add.w	r6, r3, #16
   811fe:	eb06 1607 	add.w	r6, r6, r7, lsl #4
   81202:	461a      	mov	r2, r3
   81204:	6015      	str	r5, [r2, #0]
   81206:	6055      	str	r5, [r2, #4]
   81208:	6095      	str	r5, [r2, #8]
   8120a:	60d5      	str	r5, [r2, #12]
   8120c:	3210      	adds	r2, #16
   8120e:	42b2      	cmp	r2, r6
   81210:	d1f8      	bne.n	81204 <memset+0x44>
   81212:	f004 040f 	and.w	r4, r4, #15
   81216:	3701      	adds	r7, #1
   81218:	2c03      	cmp	r4, #3
   8121a:	eb03 1307 	add.w	r3, r3, r7, lsl #4
   8121e:	d90d      	bls.n	8123c <memset+0x7c>
   81220:	461e      	mov	r6, r3
   81222:	4622      	mov	r2, r4
   81224:	3a04      	subs	r2, #4
   81226:	2a03      	cmp	r2, #3
   81228:	f846 5b04 	str.w	r5, [r6], #4
   8122c:	d8fa      	bhi.n	81224 <memset+0x64>
   8122e:	1f22      	subs	r2, r4, #4
   81230:	f022 0203 	bic.w	r2, r2, #3
   81234:	3204      	adds	r2, #4
   81236:	4413      	add	r3, r2
   81238:	f004 0403 	and.w	r4, r4, #3
   8123c:	b12c      	cbz	r4, 8124a <memset+0x8a>
   8123e:	b2c9      	uxtb	r1, r1
   81240:	441c      	add	r4, r3
   81242:	f803 1b01 	strb.w	r1, [r3], #1
   81246:	42a3      	cmp	r3, r4
   81248:	d1fb      	bne.n	81242 <memset+0x82>
   8124a:	bcf0      	pop	{r4, r5, r6, r7}
   8124c:	4770      	bx	lr
   8124e:	4614      	mov	r4, r2
   81250:	4603      	mov	r3, r0
   81252:	e7c6      	b.n	811e2 <memset+0x22>

00081254 <sprintf>:
   81254:	b40e      	push	{r1, r2, r3}
   81256:	b5f0      	push	{r4, r5, r6, r7, lr}
   81258:	b09c      	sub	sp, #112	; 0x70
   8125a:	ac21      	add	r4, sp, #132	; 0x84
   8125c:	f854 2b04 	ldr.w	r2, [r4], #4
   81260:	490e      	ldr	r1, [pc, #56]	; (8129c <sprintf+0x48>)
   81262:	4606      	mov	r6, r0
   81264:	4623      	mov	r3, r4
   81266:	f44f 7e02 	mov.w	lr, #520	; 0x208
   8126a:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   8126e:	6808      	ldr	r0, [r1, #0]
   81270:	f64f 77ff 	movw	r7, #65535	; 0xffff
   81274:	a902      	add	r1, sp, #8
   81276:	9602      	str	r6, [sp, #8]
   81278:	9606      	str	r6, [sp, #24]
   8127a:	9401      	str	r4, [sp, #4]
   8127c:	f8ad e014 	strh.w	lr, [sp, #20]
   81280:	9504      	str	r5, [sp, #16]
   81282:	9507      	str	r5, [sp, #28]
   81284:	f8ad 7016 	strh.w	r7, [sp, #22]
   81288:	f000 f83a 	bl	81300 <_svfprintf_r>
   8128c:	9b02      	ldr	r3, [sp, #8]
   8128e:	2200      	movs	r2, #0
   81290:	701a      	strb	r2, [r3, #0]
   81292:	b01c      	add	sp, #112	; 0x70
   81294:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81298:	b003      	add	sp, #12
   8129a:	4770      	bx	lr
   8129c:	20070430 	.word	0x20070430

000812a0 <strlen>:
   812a0:	f020 0103 	bic.w	r1, r0, #3
   812a4:	f010 0003 	ands.w	r0, r0, #3
   812a8:	f1c0 0000 	rsb	r0, r0, #0
   812ac:	f851 3b04 	ldr.w	r3, [r1], #4
   812b0:	f100 0c04 	add.w	ip, r0, #4
   812b4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   812b8:	f06f 0200 	mvn.w	r2, #0
   812bc:	bf1c      	itt	ne
   812be:	fa22 f20c 	lsrne.w	r2, r2, ip
   812c2:	4313      	orrne	r3, r2
   812c4:	f04f 0c01 	mov.w	ip, #1
   812c8:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   812cc:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   812d0:	eba3 020c 	sub.w	r2, r3, ip
   812d4:	ea22 0203 	bic.w	r2, r2, r3
   812d8:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   812dc:	bf04      	itt	eq
   812de:	f851 3b04 	ldreq.w	r3, [r1], #4
   812e2:	3004      	addeq	r0, #4
   812e4:	d0f4      	beq.n	812d0 <strlen+0x30>
   812e6:	f013 0fff 	tst.w	r3, #255	; 0xff
   812ea:	bf1f      	itttt	ne
   812ec:	3001      	addne	r0, #1
   812ee:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
   812f2:	3001      	addne	r0, #1
   812f4:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
   812f8:	bf18      	it	ne
   812fa:	3001      	addne	r0, #1
   812fc:	4770      	bx	lr
   812fe:	bf00      	nop

00081300 <_svfprintf_r>:
   81300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81304:	b0c9      	sub	sp, #292	; 0x124
   81306:	9310      	str	r3, [sp, #64]	; 0x40
   81308:	910c      	str	r1, [sp, #48]	; 0x30
   8130a:	4691      	mov	r9, r2
   8130c:	900d      	str	r0, [sp, #52]	; 0x34
   8130e:	f002 fb61 	bl	839d4 <_localeconv_r>
   81312:	6800      	ldr	r0, [r0, #0]
   81314:	9015      	str	r0, [sp, #84]	; 0x54
   81316:	f7ff ffc3 	bl	812a0 <strlen>
   8131a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   8131c:	9018      	str	r0, [sp, #96]	; 0x60
   8131e:	89a3      	ldrh	r3, [r4, #12]
   81320:	061e      	lsls	r6, r3, #24
   81322:	d503      	bpl.n	8132c <_svfprintf_r+0x2c>
   81324:	6923      	ldr	r3, [r4, #16]
   81326:	2b00      	cmp	r3, #0
   81328:	f001 8081 	beq.w	8242e <_svfprintf_r+0x112e>
   8132c:	ac38      	add	r4, sp, #224	; 0xe0
   8132e:	46a4      	mov	ip, r4
   81330:	9408      	str	r4, [sp, #32]
   81332:	942b      	str	r4, [sp, #172]	; 0xac
   81334:	2500      	movs	r5, #0
   81336:	2400      	movs	r4, #0
   81338:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
   8133c:	2300      	movs	r3, #0
   8133e:	9311      	str	r3, [sp, #68]	; 0x44
   81340:	932d      	str	r3, [sp, #180]	; 0xb4
   81342:	932c      	str	r3, [sp, #176]	; 0xb0
   81344:	931a      	str	r3, [sp, #104]	; 0x68
   81346:	9319      	str	r3, [sp, #100]	; 0x64
   81348:	930e      	str	r3, [sp, #56]	; 0x38
   8134a:	4666      	mov	r6, ip
   8134c:	f899 3000 	ldrb.w	r3, [r9]
   81350:	2b00      	cmp	r3, #0
   81352:	f000 80f8 	beq.w	81546 <_svfprintf_r+0x246>
   81356:	2b25      	cmp	r3, #37	; 0x25
   81358:	f000 80f5 	beq.w	81546 <_svfprintf_r+0x246>
   8135c:	f109 0201 	add.w	r2, r9, #1
   81360:	e001      	b.n	81366 <_svfprintf_r+0x66>
   81362:	2b25      	cmp	r3, #37	; 0x25
   81364:	d004      	beq.n	81370 <_svfprintf_r+0x70>
   81366:	7813      	ldrb	r3, [r2, #0]
   81368:	4614      	mov	r4, r2
   8136a:	3201      	adds	r2, #1
   8136c:	2b00      	cmp	r3, #0
   8136e:	d1f8      	bne.n	81362 <_svfprintf_r+0x62>
   81370:	ebc9 0504 	rsb	r5, r9, r4
   81374:	b17d      	cbz	r5, 81396 <_svfprintf_r+0x96>
   81376:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81378:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   8137a:	3301      	adds	r3, #1
   8137c:	442a      	add	r2, r5
   8137e:	2b07      	cmp	r3, #7
   81380:	f8c6 9000 	str.w	r9, [r6]
   81384:	6075      	str	r5, [r6, #4]
   81386:	922d      	str	r2, [sp, #180]	; 0xb4
   81388:	932c      	str	r3, [sp, #176]	; 0xb0
   8138a:	f300 80c2 	bgt.w	81512 <_svfprintf_r+0x212>
   8138e:	3608      	adds	r6, #8
   81390:	980e      	ldr	r0, [sp, #56]	; 0x38
   81392:	4428      	add	r0, r5
   81394:	900e      	str	r0, [sp, #56]	; 0x38
   81396:	7823      	ldrb	r3, [r4, #0]
   81398:	2b00      	cmp	r3, #0
   8139a:	f000 80c2 	beq.w	81522 <_svfprintf_r+0x222>
   8139e:	2300      	movs	r3, #0
   813a0:	f894 8001 	ldrb.w	r8, [r4, #1]
   813a4:	461a      	mov	r2, r3
   813a6:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   813aa:	930f      	str	r3, [sp, #60]	; 0x3c
   813ac:	9309      	str	r3, [sp, #36]	; 0x24
   813ae:	f104 0901 	add.w	r9, r4, #1
   813b2:	f04f 34ff 	mov.w	r4, #4294967295
   813b6:	940a      	str	r4, [sp, #40]	; 0x28
   813b8:	f109 0901 	add.w	r9, r9, #1
   813bc:	f1a8 0320 	sub.w	r3, r8, #32
   813c0:	2b58      	cmp	r3, #88	; 0x58
   813c2:	f200 83c5 	bhi.w	81b50 <_svfprintf_r+0x850>
   813c6:	e8df f013 	tbh	[pc, r3, lsl #1]
   813ca:	026a      	.short	0x026a
   813cc:	03c303c3 	.word	0x03c303c3
   813d0:	03c30271 	.word	0x03c30271
   813d4:	03c303c3 	.word	0x03c303c3
   813d8:	03c303c3 	.word	0x03c303c3
   813dc:	031403c3 	.word	0x031403c3
   813e0:	03c30366 	.word	0x03c30366
   813e4:	00c0009d 	.word	0x00c0009d
   813e8:	027803c3 	.word	0x027803c3
   813ec:	027f027f 	.word	0x027f027f
   813f0:	027f027f 	.word	0x027f027f
   813f4:	027f027f 	.word	0x027f027f
   813f8:	027f027f 	.word	0x027f027f
   813fc:	03c3027f 	.word	0x03c3027f
   81400:	03c303c3 	.word	0x03c303c3
   81404:	03c303c3 	.word	0x03c303c3
   81408:	03c303c3 	.word	0x03c303c3
   8140c:	03c303c3 	.word	0x03c303c3
   81410:	029003c3 	.word	0x029003c3
   81414:	03c30371 	.word	0x03c30371
   81418:	03c30371 	.word	0x03c30371
   8141c:	03c303c3 	.word	0x03c303c3
   81420:	036a03c3 	.word	0x036a03c3
   81424:	03c303c3 	.word	0x03c303c3
   81428:	03c30078 	.word	0x03c30078
   8142c:	03c303c3 	.word	0x03c303c3
   81430:	03c303c3 	.word	0x03c303c3
   81434:	03c30059 	.word	0x03c30059
   81438:	02af03c3 	.word	0x02af03c3
   8143c:	03c303c3 	.word	0x03c303c3
   81440:	03c303c3 	.word	0x03c303c3
   81444:	03c303c3 	.word	0x03c303c3
   81448:	03c303c3 	.word	0x03c303c3
   8144c:	03c303c3 	.word	0x03c303c3
   81450:	03480337 	.word	0x03480337
   81454:	03710371 	.word	0x03710371
   81458:	02ff0371 	.word	0x02ff0371
   8145c:	03c30348 	.word	0x03c30348
   81460:	030803c3 	.word	0x030803c3
   81464:	02c503c3 	.word	0x02c503c3
   81468:	0320007c 	.word	0x0320007c
   8146c:	03c303a3 	.word	0x03c303a3
   81470:	03c302d9 	.word	0x03c302d9
   81474:	03c3005f 	.word	0x03c3005f
   81478:	00de03c3 	.word	0x00de03c3
   8147c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81480:	f04c 0c10 	orr.w	ip, ip, #16
   81484:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81488:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8148a:	06a2      	lsls	r2, r4, #26
   8148c:	f100 8354 	bmi.w	81b38 <_svfprintf_r+0x838>
   81490:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81492:	06e3      	lsls	r3, r4, #27
   81494:	f100 85bd 	bmi.w	82012 <_svfprintf_r+0xd12>
   81498:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8149c:	f01c 0f40 	tst.w	ip, #64	; 0x40
   814a0:	f000 85b7 	beq.w	82012 <_svfprintf_r+0xd12>
   814a4:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   814a8:	2500      	movs	r5, #0
   814aa:	f8bc 4000 	ldrh.w	r4, [ip]
   814ae:	f10c 0c04 	add.w	ip, ip, #4
   814b2:	2301      	movs	r3, #1
   814b4:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   814b8:	e08c      	b.n	815d4 <_svfprintf_r+0x2d4>
   814ba:	9d09      	ldr	r5, [sp, #36]	; 0x24
   814bc:	f045 0510 	orr.w	r5, r5, #16
   814c0:	9509      	str	r5, [sp, #36]	; 0x24
   814c2:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   814c6:	f01c 0320 	ands.w	r3, ip, #32
   814ca:	f040 832a 	bne.w	81b22 <_svfprintf_r+0x822>
   814ce:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   814d2:	f01c 0210 	ands.w	r2, ip, #16
   814d6:	f040 85a4 	bne.w	82022 <_svfprintf_r+0xd22>
   814da:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   814de:	f01c 0340 	ands.w	r3, ip, #64	; 0x40
   814e2:	f000 859e 	beq.w	82022 <_svfprintf_r+0xd22>
   814e6:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   814ea:	4613      	mov	r3, r2
   814ec:	f8bc 4000 	ldrh.w	r4, [ip]
   814f0:	f10c 0c04 	add.w	ip, ip, #4
   814f4:	2500      	movs	r5, #0
   814f6:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   814fa:	e06b      	b.n	815d4 <_svfprintf_r+0x2d4>
   814fc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   814fe:	9310      	str	r3, [sp, #64]	; 0x40
   81500:	4264      	negs	r4, r4
   81502:	940f      	str	r4, [sp, #60]	; 0x3c
   81504:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81506:	f045 0504 	orr.w	r5, r5, #4
   8150a:	9509      	str	r5, [sp, #36]	; 0x24
   8150c:	f899 8000 	ldrb.w	r8, [r9]
   81510:	e752      	b.n	813b8 <_svfprintf_r+0xb8>
   81512:	980d      	ldr	r0, [sp, #52]	; 0x34
   81514:	990c      	ldr	r1, [sp, #48]	; 0x30
   81516:	aa2b      	add	r2, sp, #172	; 0xac
   81518:	f003 fb4a 	bl	84bb0 <__ssprint_r>
   8151c:	b940      	cbnz	r0, 81530 <_svfprintf_r+0x230>
   8151e:	ae38      	add	r6, sp, #224	; 0xe0
   81520:	e736      	b.n	81390 <_svfprintf_r+0x90>
   81522:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   81524:	b123      	cbz	r3, 81530 <_svfprintf_r+0x230>
   81526:	980d      	ldr	r0, [sp, #52]	; 0x34
   81528:	990c      	ldr	r1, [sp, #48]	; 0x30
   8152a:	aa2b      	add	r2, sp, #172	; 0xac
   8152c:	f003 fb40 	bl	84bb0 <__ssprint_r>
   81530:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81532:	980e      	ldr	r0, [sp, #56]	; 0x38
   81534:	89a3      	ldrh	r3, [r4, #12]
   81536:	f013 0f40 	tst.w	r3, #64	; 0x40
   8153a:	bf18      	it	ne
   8153c:	f04f 30ff 	movne.w	r0, #4294967295
   81540:	b049      	add	sp, #292	; 0x124
   81542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81546:	464c      	mov	r4, r9
   81548:	e725      	b.n	81396 <_svfprintf_r+0x96>
   8154a:	f899 8000 	ldrb.w	r8, [r9]
   8154e:	f109 0001 	add.w	r0, r9, #1
   81552:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
   81556:	f001 810c 	beq.w	82772 <_svfprintf_r+0x1472>
   8155a:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   8155e:	2b09      	cmp	r3, #9
   81560:	bf98      	it	ls
   81562:	2100      	movls	r1, #0
   81564:	f201 806b 	bhi.w	8263e <_svfprintf_r+0x133e>
   81568:	f810 8b01 	ldrb.w	r8, [r0], #1
   8156c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   81570:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   81574:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   81578:	2b09      	cmp	r3, #9
   8157a:	d9f5      	bls.n	81568 <_svfprintf_r+0x268>
   8157c:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
   81580:	910a      	str	r1, [sp, #40]	; 0x28
   81582:	4681      	mov	r9, r0
   81584:	e71a      	b.n	813bc <_svfprintf_r+0xbc>
   81586:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81588:	4ca1      	ldr	r4, [pc, #644]	; (81810 <_svfprintf_r+0x510>)
   8158a:	06af      	lsls	r7, r5, #26
   8158c:	941a      	str	r4, [sp, #104]	; 0x68
   8158e:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81592:	f140 81d1 	bpl.w	81938 <_svfprintf_r+0x638>
   81596:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8159a:	f10c 0307 	add.w	r3, ip, #7
   8159e:	f023 0307 	bic.w	r3, r3, #7
   815a2:	f103 0408 	add.w	r4, r3, #8
   815a6:	9410      	str	r4, [sp, #64]	; 0x40
   815a8:	e9d3 4500 	ldrd	r4, r5, [r3]
   815ac:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   815b0:	f01c 0f01 	tst.w	ip, #1
   815b4:	f000 8462 	beq.w	81e7c <_svfprintf_r+0xb7c>
   815b8:	ea54 0005 	orrs.w	r0, r4, r5
   815bc:	f000 845e 	beq.w	81e7c <_svfprintf_r+0xb7c>
   815c0:	2330      	movs	r3, #48	; 0x30
   815c2:	f04c 0c02 	orr.w	ip, ip, #2
   815c6:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
   815ca:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
   815ce:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   815d2:	2302      	movs	r3, #2
   815d4:	f04f 0a00 	mov.w	sl, #0
   815d8:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   815dc:	990a      	ldr	r1, [sp, #40]	; 0x28
   815de:	2900      	cmp	r1, #0
   815e0:	db05      	blt.n	815ee <_svfprintf_r+0x2ee>
   815e2:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   815e6:	f02c 0c80 	bic.w	ip, ip, #128	; 0x80
   815ea:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   815ee:	ea54 0005 	orrs.w	r0, r4, r5
   815f2:	f040 82c5 	bne.w	81b80 <_svfprintf_r+0x880>
   815f6:	990a      	ldr	r1, [sp, #40]	; 0x28
   815f8:	2900      	cmp	r1, #0
   815fa:	f040 82c1 	bne.w	81b80 <_svfprintf_r+0x880>
   815fe:	2b00      	cmp	r3, #0
   81600:	f040 8438 	bne.w	81e74 <_svfprintf_r+0xb74>
   81604:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81608:	f01c 0f01 	tst.w	ip, #1
   8160c:	f000 8432 	beq.w	81e74 <_svfprintf_r+0xb74>
   81610:	af48      	add	r7, sp, #288	; 0x120
   81612:	2330      	movs	r3, #48	; 0x30
   81614:	9d08      	ldr	r5, [sp, #32]
   81616:	f807 3d41 	strb.w	r3, [r7, #-65]!
   8161a:	1bec      	subs	r4, r5, r7
   8161c:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
   81620:	2500      	movs	r5, #0
   81622:	4564      	cmp	r4, ip
   81624:	bfa8      	it	ge
   81626:	46a4      	movge	ip, r4
   81628:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   8162c:	9514      	str	r5, [sp, #80]	; 0x50
   8162e:	f1ba 0f00 	cmp.w	sl, #0
   81632:	d002      	beq.n	8163a <_svfprintf_r+0x33a>
   81634:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81636:	3501      	adds	r5, #1
   81638:	950b      	str	r5, [sp, #44]	; 0x2c
   8163a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8163c:	f013 0302 	ands.w	r3, r3, #2
   81640:	9312      	str	r3, [sp, #72]	; 0x48
   81642:	d002      	beq.n	8164a <_svfprintf_r+0x34a>
   81644:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81646:	3502      	adds	r5, #2
   81648:	950b      	str	r5, [sp, #44]	; 0x2c
   8164a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8164e:	f01c 0c84 	ands.w	ip, ip, #132	; 0x84
   81652:	f8cd c04c 	str.w	ip, [sp, #76]	; 0x4c
   81656:	f040 8290 	bne.w	81b7a <_svfprintf_r+0x87a>
   8165a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   8165c:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
   81660:	ebcc 0b05 	rsb	fp, ip, r5
   81664:	f1bb 0f00 	cmp.w	fp, #0
   81668:	f340 8287 	ble.w	81b7a <_svfprintf_r+0x87a>
   8166c:	f1bb 0f10 	cmp.w	fp, #16
   81670:	992d      	ldr	r1, [sp, #180]	; 0xb4
   81672:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   81674:	f8df a1a0 	ldr.w	sl, [pc, #416]	; 81818 <_svfprintf_r+0x518>
   81678:	dd2c      	ble.n	816d4 <_svfprintf_r+0x3d4>
   8167a:	971b      	str	r7, [sp, #108]	; 0x6c
   8167c:	4630      	mov	r0, r6
   8167e:	4657      	mov	r7, sl
   81680:	2510      	movs	r5, #16
   81682:	46ca      	mov	sl, r9
   81684:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   81686:	46a1      	mov	r9, r4
   81688:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   8168a:	e006      	b.n	8169a <_svfprintf_r+0x39a>
   8168c:	f1ab 0b10 	sub.w	fp, fp, #16
   81690:	f1bb 0f10 	cmp.w	fp, #16
   81694:	f100 0008 	add.w	r0, r0, #8
   81698:	dd17      	ble.n	816ca <_svfprintf_r+0x3ca>
   8169a:	3201      	adds	r2, #1
   8169c:	3110      	adds	r1, #16
   8169e:	2a07      	cmp	r2, #7
   816a0:	912d      	str	r1, [sp, #180]	; 0xb4
   816a2:	922c      	str	r2, [sp, #176]	; 0xb0
   816a4:	6007      	str	r7, [r0, #0]
   816a6:	6045      	str	r5, [r0, #4]
   816a8:	ddf0      	ble.n	8168c <_svfprintf_r+0x38c>
   816aa:	4620      	mov	r0, r4
   816ac:	4631      	mov	r1, r6
   816ae:	aa2b      	add	r2, sp, #172	; 0xac
   816b0:	f003 fa7e 	bl	84bb0 <__ssprint_r>
   816b4:	2800      	cmp	r0, #0
   816b6:	f47f af3b 	bne.w	81530 <_svfprintf_r+0x230>
   816ba:	f1ab 0b10 	sub.w	fp, fp, #16
   816be:	f1bb 0f10 	cmp.w	fp, #16
   816c2:	992d      	ldr	r1, [sp, #180]	; 0xb4
   816c4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   816c6:	a838      	add	r0, sp, #224	; 0xe0
   816c8:	dce7      	bgt.n	8169a <_svfprintf_r+0x39a>
   816ca:	464c      	mov	r4, r9
   816cc:	46d1      	mov	r9, sl
   816ce:	46ba      	mov	sl, r7
   816d0:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
   816d2:	4606      	mov	r6, r0
   816d4:	3201      	adds	r2, #1
   816d6:	eb0b 0c01 	add.w	ip, fp, r1
   816da:	2a07      	cmp	r2, #7
   816dc:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   816e0:	922c      	str	r2, [sp, #176]	; 0xb0
   816e2:	e886 0c00 	stmia.w	r6, {sl, fp}
   816e6:	f300 841a 	bgt.w	81f1e <_svfprintf_r+0xc1e>
   816ea:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   816ee:	3608      	adds	r6, #8
   816f0:	f1ba 0f00 	cmp.w	sl, #0
   816f4:	d00f      	beq.n	81716 <_svfprintf_r+0x416>
   816f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   816f8:	f10c 0c01 	add.w	ip, ip, #1
   816fc:	3301      	adds	r3, #1
   816fe:	f10d 018f 	add.w	r1, sp, #143	; 0x8f
   81702:	2201      	movs	r2, #1
   81704:	2b07      	cmp	r3, #7
   81706:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8170a:	932c      	str	r3, [sp, #176]	; 0xb0
   8170c:	e886 0006 	stmia.w	r6, {r1, r2}
   81710:	f300 83a4 	bgt.w	81e5c <_svfprintf_r+0xb5c>
   81714:	3608      	adds	r6, #8
   81716:	9b12      	ldr	r3, [sp, #72]	; 0x48
   81718:	b173      	cbz	r3, 81738 <_svfprintf_r+0x438>
   8171a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8171c:	f10c 0c02 	add.w	ip, ip, #2
   81720:	3301      	adds	r3, #1
   81722:	a924      	add	r1, sp, #144	; 0x90
   81724:	2202      	movs	r2, #2
   81726:	2b07      	cmp	r3, #7
   81728:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8172c:	932c      	str	r3, [sp, #176]	; 0xb0
   8172e:	e886 0006 	stmia.w	r6, {r1, r2}
   81732:	f300 8387 	bgt.w	81e44 <_svfprintf_r+0xb44>
   81736:	3608      	adds	r6, #8
   81738:	9d13      	ldr	r5, [sp, #76]	; 0x4c
   8173a:	2d80      	cmp	r5, #128	; 0x80
   8173c:	f000 82ca 	beq.w	81cd4 <_svfprintf_r+0x9d4>
   81740:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   81742:	ebc4 0a05 	rsb	sl, r4, r5
   81746:	f1ba 0f00 	cmp.w	sl, #0
   8174a:	dd3b      	ble.n	817c4 <_svfprintf_r+0x4c4>
   8174c:	f1ba 0f10 	cmp.w	sl, #16
   81750:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81752:	4d30      	ldr	r5, [pc, #192]	; (81814 <_svfprintf_r+0x514>)
   81754:	dd2b      	ble.n	817ae <_svfprintf_r+0x4ae>
   81756:	940a      	str	r4, [sp, #40]	; 0x28
   81758:	4632      	mov	r2, r6
   8175a:	f04f 0b10 	mov.w	fp, #16
   8175e:	462e      	mov	r6, r5
   81760:	4661      	mov	r1, ip
   81762:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   81764:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   81766:	e006      	b.n	81776 <_svfprintf_r+0x476>
   81768:	f1aa 0a10 	sub.w	sl, sl, #16
   8176c:	f1ba 0f10 	cmp.w	sl, #16
   81770:	f102 0208 	add.w	r2, r2, #8
   81774:	dd17      	ble.n	817a6 <_svfprintf_r+0x4a6>
   81776:	3301      	adds	r3, #1
   81778:	3110      	adds	r1, #16
   8177a:	2b07      	cmp	r3, #7
   8177c:	912d      	str	r1, [sp, #180]	; 0xb4
   8177e:	932c      	str	r3, [sp, #176]	; 0xb0
   81780:	e882 0840 	stmia.w	r2, {r6, fp}
   81784:	ddf0      	ble.n	81768 <_svfprintf_r+0x468>
   81786:	4620      	mov	r0, r4
   81788:	4629      	mov	r1, r5
   8178a:	aa2b      	add	r2, sp, #172	; 0xac
   8178c:	f003 fa10 	bl	84bb0 <__ssprint_r>
   81790:	2800      	cmp	r0, #0
   81792:	f47f aecd 	bne.w	81530 <_svfprintf_r+0x230>
   81796:	f1aa 0a10 	sub.w	sl, sl, #16
   8179a:	f1ba 0f10 	cmp.w	sl, #16
   8179e:	992d      	ldr	r1, [sp, #180]	; 0xb4
   817a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   817a2:	aa38      	add	r2, sp, #224	; 0xe0
   817a4:	dce7      	bgt.n	81776 <_svfprintf_r+0x476>
   817a6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   817a8:	4635      	mov	r5, r6
   817aa:	468c      	mov	ip, r1
   817ac:	4616      	mov	r6, r2
   817ae:	3301      	adds	r3, #1
   817b0:	44d4      	add	ip, sl
   817b2:	2b07      	cmp	r3, #7
   817b4:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   817b8:	932c      	str	r3, [sp, #176]	; 0xb0
   817ba:	e886 0420 	stmia.w	r6, {r5, sl}
   817be:	f300 8335 	bgt.w	81e2c <_svfprintf_r+0xb2c>
   817c2:	3608      	adds	r6, #8
   817c4:	9d09      	ldr	r5, [sp, #36]	; 0x24
   817c6:	05ed      	lsls	r5, r5, #23
   817c8:	f100 8224 	bmi.w	81c14 <_svfprintf_r+0x914>
   817cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   817ce:	44a4      	add	ip, r4
   817d0:	3301      	adds	r3, #1
   817d2:	2b07      	cmp	r3, #7
   817d4:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   817d8:	6037      	str	r7, [r6, #0]
   817da:	6074      	str	r4, [r6, #4]
   817dc:	932c      	str	r3, [sp, #176]	; 0xb0
   817de:	f300 830f 	bgt.w	81e00 <_svfprintf_r+0xb00>
   817e2:	3608      	adds	r6, #8
   817e4:	9c09      	ldr	r4, [sp, #36]	; 0x24
   817e6:	0763      	lsls	r3, r4, #29
   817e8:	d549      	bpl.n	8187e <_svfprintf_r+0x57e>
   817ea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   817ec:	980b      	ldr	r0, [sp, #44]	; 0x2c
   817ee:	1a2c      	subs	r4, r5, r0
   817f0:	2c00      	cmp	r4, #0
   817f2:	dd44      	ble.n	8187e <_svfprintf_r+0x57e>
   817f4:	2c10      	cmp	r4, #16
   817f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   817f8:	f8df a01c 	ldr.w	sl, [pc, #28]	; 81818 <_svfprintf_r+0x518>
   817fc:	dd2b      	ble.n	81856 <_svfprintf_r+0x556>
   817fe:	4657      	mov	r7, sl
   81800:	2510      	movs	r5, #16
   81802:	4662      	mov	r2, ip
   81804:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   81808:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
   8180c:	e00b      	b.n	81826 <_svfprintf_r+0x526>
   8180e:	bf00      	nop
   81810:	00085cf4 	.word	0x00085cf4
   81814:	00085cc0 	.word	0x00085cc0
   81818:	00085d14 	.word	0x00085d14
   8181c:	3c10      	subs	r4, #16
   8181e:	2c10      	cmp	r4, #16
   81820:	f106 0608 	add.w	r6, r6, #8
   81824:	dd15      	ble.n	81852 <_svfprintf_r+0x552>
   81826:	3301      	adds	r3, #1
   81828:	3210      	adds	r2, #16
   8182a:	2b07      	cmp	r3, #7
   8182c:	922d      	str	r2, [sp, #180]	; 0xb4
   8182e:	932c      	str	r3, [sp, #176]	; 0xb0
   81830:	6037      	str	r7, [r6, #0]
   81832:	6075      	str	r5, [r6, #4]
   81834:	ddf2      	ble.n	8181c <_svfprintf_r+0x51c>
   81836:	4650      	mov	r0, sl
   81838:	4641      	mov	r1, r8
   8183a:	aa2b      	add	r2, sp, #172	; 0xac
   8183c:	f003 f9b8 	bl	84bb0 <__ssprint_r>
   81840:	2800      	cmp	r0, #0
   81842:	f47f ae75 	bne.w	81530 <_svfprintf_r+0x230>
   81846:	3c10      	subs	r4, #16
   81848:	2c10      	cmp	r4, #16
   8184a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   8184c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8184e:	ae38      	add	r6, sp, #224	; 0xe0
   81850:	dce9      	bgt.n	81826 <_svfprintf_r+0x526>
   81852:	4694      	mov	ip, r2
   81854:	46ba      	mov	sl, r7
   81856:	3301      	adds	r3, #1
   81858:	44a4      	add	ip, r4
   8185a:	2b07      	cmp	r3, #7
   8185c:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81860:	932c      	str	r3, [sp, #176]	; 0xb0
   81862:	f8c6 a000 	str.w	sl, [r6]
   81866:	6074      	str	r4, [r6, #4]
   81868:	dd09      	ble.n	8187e <_svfprintf_r+0x57e>
   8186a:	980d      	ldr	r0, [sp, #52]	; 0x34
   8186c:	990c      	ldr	r1, [sp, #48]	; 0x30
   8186e:	aa2b      	add	r2, sp, #172	; 0xac
   81870:	f003 f99e 	bl	84bb0 <__ssprint_r>
   81874:	2800      	cmp	r0, #0
   81876:	f47f ae5b 	bne.w	81530 <_svfprintf_r+0x230>
   8187a:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   8187e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81880:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81882:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81884:	42a8      	cmp	r0, r5
   81886:	bfac      	ite	ge
   81888:	1824      	addge	r4, r4, r0
   8188a:	1964      	addlt	r4, r4, r5
   8188c:	940e      	str	r4, [sp, #56]	; 0x38
   8188e:	f1bc 0f00 	cmp.w	ip, #0
   81892:	f040 82c1 	bne.w	81e18 <_svfprintf_r+0xb18>
   81896:	2300      	movs	r3, #0
   81898:	932c      	str	r3, [sp, #176]	; 0xb0
   8189a:	ae38      	add	r6, sp, #224	; 0xe0
   8189c:	e556      	b.n	8134c <_svfprintf_r+0x4c>
   8189e:	f899 8000 	ldrb.w	r8, [r9]
   818a2:	2a00      	cmp	r2, #0
   818a4:	f47f ad88 	bne.w	813b8 <_svfprintf_r+0xb8>
   818a8:	2220      	movs	r2, #32
   818aa:	e585      	b.n	813b8 <_svfprintf_r+0xb8>
   818ac:	9d09      	ldr	r5, [sp, #36]	; 0x24
   818ae:	f045 0501 	orr.w	r5, r5, #1
   818b2:	9509      	str	r5, [sp, #36]	; 0x24
   818b4:	f899 8000 	ldrb.w	r8, [r9]
   818b8:	e57e      	b.n	813b8 <_svfprintf_r+0xb8>
   818ba:	9d09      	ldr	r5, [sp, #36]	; 0x24
   818bc:	f045 0580 	orr.w	r5, r5, #128	; 0x80
   818c0:	9509      	str	r5, [sp, #36]	; 0x24
   818c2:	f899 8000 	ldrb.w	r8, [r9]
   818c6:	e577      	b.n	813b8 <_svfprintf_r+0xb8>
   818c8:	2400      	movs	r4, #0
   818ca:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   818ce:	940f      	str	r4, [sp, #60]	; 0x3c
   818d0:	4621      	mov	r1, r4
   818d2:	f819 8b01 	ldrb.w	r8, [r9], #1
   818d6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   818da:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   818de:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   818e2:	2b09      	cmp	r3, #9
   818e4:	d9f5      	bls.n	818d2 <_svfprintf_r+0x5d2>
   818e6:	910f      	str	r1, [sp, #60]	; 0x3c
   818e8:	e568      	b.n	813bc <_svfprintf_r+0xbc>
   818ea:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   818ee:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   818f2:	f04c 0c10 	orr.w	ip, ip, #16
   818f6:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   818fa:	9c09      	ldr	r4, [sp, #36]	; 0x24
   818fc:	06a5      	lsls	r5, r4, #26
   818fe:	f140 80b2 	bpl.w	81a66 <_svfprintf_r+0x766>
   81902:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81904:	1de9      	adds	r1, r5, #7
   81906:	f021 0107 	bic.w	r1, r1, #7
   8190a:	e9d1 2300 	ldrd	r2, r3, [r1]
   8190e:	3108      	adds	r1, #8
   81910:	9110      	str	r1, [sp, #64]	; 0x40
   81912:	4614      	mov	r4, r2
   81914:	461d      	mov	r5, r3
   81916:	2a00      	cmp	r2, #0
   81918:	f173 0c00 	sbcs.w	ip, r3, #0
   8191c:	f2c0 8394 	blt.w	82048 <_svfprintf_r+0xd48>
   81920:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   81924:	2301      	movs	r3, #1
   81926:	e659      	b.n	815dc <_svfprintf_r+0x2dc>
   81928:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8192a:	4cb6      	ldr	r4, [pc, #728]	; (81c04 <_svfprintf_r+0x904>)
   8192c:	06af      	lsls	r7, r5, #26
   8192e:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81932:	941a      	str	r4, [sp, #104]	; 0x68
   81934:	f53f ae2f 	bmi.w	81596 <_svfprintf_r+0x296>
   81938:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8193a:	06ed      	lsls	r5, r5, #27
   8193c:	f140 8443 	bpl.w	821c6 <_svfprintf_r+0xec6>
   81940:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   81944:	2500      	movs	r5, #0
   81946:	f8dc 4000 	ldr.w	r4, [ip]
   8194a:	f10c 0c04 	add.w	ip, ip, #4
   8194e:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81952:	e62b      	b.n	815ac <_svfprintf_r+0x2ac>
   81954:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81958:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   8195c:	f01c 0f20 	tst.w	ip, #32
   81960:	f000 8440 	beq.w	821e4 <_svfprintf_r+0xee4>
   81964:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81966:	6821      	ldr	r1, [r4, #0]
   81968:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   8196a:	17e5      	asrs	r5, r4, #31
   8196c:	462b      	mov	r3, r5
   8196e:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81970:	4622      	mov	r2, r4
   81972:	3504      	adds	r5, #4
   81974:	9510      	str	r5, [sp, #64]	; 0x40
   81976:	e9c1 2300 	strd	r2, r3, [r1]
   8197a:	e4e7      	b.n	8134c <_svfprintf_r+0x4c>
   8197c:	9c10      	ldr	r4, [sp, #64]	; 0x40
   8197e:	f04f 0a00 	mov.w	sl, #0
   81982:	6827      	ldr	r7, [r4, #0]
   81984:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   81988:	1d25      	adds	r5, r4, #4
   8198a:	2f00      	cmp	r7, #0
   8198c:	f000 85e9 	beq.w	82562 <_svfprintf_r+0x1262>
   81990:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   81992:	4638      	mov	r0, r7
   81994:	2c00      	cmp	r4, #0
   81996:	f2c0 859b 	blt.w	824d0 <_svfprintf_r+0x11d0>
   8199a:	4651      	mov	r1, sl
   8199c:	4622      	mov	r2, r4
   8199e:	f002 fab9 	bl	83f14 <memchr>
   819a2:	2800      	cmp	r0, #0
   819a4:	f000 8613 	beq.w	825ce <_svfprintf_r+0x12ce>
   819a8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   819aa:	1bc0      	subs	r0, r0, r7
   819ac:	42a0      	cmp	r0, r4
   819ae:	bfb8      	it	lt
   819b0:	4604      	movlt	r4, r0
   819b2:	9510      	str	r5, [sp, #64]	; 0x40
   819b4:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
   819b8:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
   819bc:	f8cd a050 	str.w	sl, [sp, #80]	; 0x50
   819c0:	950b      	str	r5, [sp, #44]	; 0x2c
   819c2:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   819c6:	e632      	b.n	8162e <_svfprintf_r+0x32e>
   819c8:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   819cc:	f04c 0c40 	orr.w	ip, ip, #64	; 0x40
   819d0:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   819d4:	f899 8000 	ldrb.w	r8, [r9]
   819d8:	e4ee      	b.n	813b8 <_svfprintf_r+0xb8>
   819da:	f899 8000 	ldrb.w	r8, [r9]
   819de:	464b      	mov	r3, r9
   819e0:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
   819e4:	f000 847f 	beq.w	822e6 <_svfprintf_r+0xfe6>
   819e8:	9d09      	ldr	r5, [sp, #36]	; 0x24
   819ea:	f045 0510 	orr.w	r5, r5, #16
   819ee:	9509      	str	r5, [sp, #36]	; 0x24
   819f0:	e4e2      	b.n	813b8 <_svfprintf_r+0xb8>
   819f2:	9c10      	ldr	r4, [sp, #64]	; 0x40
   819f4:	9d10      	ldr	r5, [sp, #64]	; 0x40
   819f6:	6824      	ldr	r4, [r4, #0]
   819f8:	1d2b      	adds	r3, r5, #4
   819fa:	2c00      	cmp	r4, #0
   819fc:	940f      	str	r4, [sp, #60]	; 0x3c
   819fe:	f6ff ad7d 	blt.w	814fc <_svfprintf_r+0x1fc>
   81a02:	9310      	str	r3, [sp, #64]	; 0x40
   81a04:	f899 8000 	ldrb.w	r8, [r9]
   81a08:	e4d6      	b.n	813b8 <_svfprintf_r+0xb8>
   81a0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81a0c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81a10:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81a12:	487d      	ldr	r0, [pc, #500]	; (81c08 <_svfprintf_r+0x908>)
   81a14:	3504      	adds	r5, #4
   81a16:	681c      	ldr	r4, [r3, #0]
   81a18:	f04f 0878 	mov.w	r8, #120	; 0x78
   81a1c:	2330      	movs	r3, #48	; 0x30
   81a1e:	f04c 0c02 	orr.w	ip, ip, #2
   81a22:	9510      	str	r5, [sp, #64]	; 0x40
   81a24:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
   81a28:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81a2c:	2500      	movs	r5, #0
   81a2e:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
   81a32:	901a      	str	r0, [sp, #104]	; 0x68
   81a34:	2302      	movs	r3, #2
   81a36:	e5cd      	b.n	815d4 <_svfprintf_r+0x2d4>
   81a38:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81a3a:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81a3c:	681a      	ldr	r2, [r3, #0]
   81a3e:	2401      	movs	r4, #1
   81a40:	2300      	movs	r3, #0
   81a42:	3504      	adds	r5, #4
   81a44:	469a      	mov	sl, r3
   81a46:	940b      	str	r4, [sp, #44]	; 0x2c
   81a48:	f88d 20b8 	strb.w	r2, [sp, #184]	; 0xb8
   81a4c:	9510      	str	r5, [sp, #64]	; 0x40
   81a4e:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   81a52:	930a      	str	r3, [sp, #40]	; 0x28
   81a54:	9314      	str	r3, [sp, #80]	; 0x50
   81a56:	af2e      	add	r7, sp, #184	; 0xb8
   81a58:	e5ef      	b.n	8163a <_svfprintf_r+0x33a>
   81a5a:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81a5c:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81a60:	06a5      	lsls	r5, r4, #26
   81a62:	f53f af4e 	bmi.w	81902 <_svfprintf_r+0x602>
   81a66:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81a6a:	f01c 0f10 	tst.w	ip, #16
   81a6e:	f040 82df 	bne.w	82030 <_svfprintf_r+0xd30>
   81a72:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81a76:	f01c 0f40 	tst.w	ip, #64	; 0x40
   81a7a:	f000 82d9 	beq.w	82030 <_svfprintf_r+0xd30>
   81a7e:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   81a82:	f9bc 4000 	ldrsh.w	r4, [ip]
   81a86:	f10c 0c04 	add.w	ip, ip, #4
   81a8a:	17e5      	asrs	r5, r4, #31
   81a8c:	4622      	mov	r2, r4
   81a8e:	462b      	mov	r3, r5
   81a90:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81a94:	e73f      	b.n	81916 <_svfprintf_r+0x616>
   81a96:	f899 8000 	ldrb.w	r8, [r9]
   81a9a:	222b      	movs	r2, #43	; 0x2b
   81a9c:	e48c      	b.n	813b8 <_svfprintf_r+0xb8>
   81a9e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81aa0:	f045 0508 	orr.w	r5, r5, #8
   81aa4:	9509      	str	r5, [sp, #36]	; 0x24
   81aa6:	f899 8000 	ldrb.w	r8, [r9]
   81aaa:	e485      	b.n	813b8 <_svfprintf_r+0xb8>
   81aac:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81aae:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81ab2:	1deb      	adds	r3, r5, #7
   81ab4:	f023 0307 	bic.w	r3, r3, #7
   81ab8:	f103 0c08 	add.w	ip, r3, #8
   81abc:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81ac0:	e9d3 4500 	ldrd	r4, r5, [r3]
   81ac4:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
   81ac8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   81acc:	f003 f836 	bl	84b3c <__fpclassifyd>
   81ad0:	2801      	cmp	r0, #1
   81ad2:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   81ad6:	f040 835c 	bne.w	82192 <_svfprintf_r+0xe92>
   81ada:	2200      	movs	r2, #0
   81adc:	2300      	movs	r3, #0
   81ade:	f003 fd95 	bl	8560c <__aeabi_dcmplt>
   81ae2:	2800      	cmp	r0, #0
   81ae4:	f040 8563 	bne.w	825ae <_svfprintf_r+0x12ae>
   81ae8:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   81aec:	2503      	movs	r5, #3
   81aee:	950b      	str	r5, [sp, #44]	; 0x2c
   81af0:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81af2:	4f46      	ldr	r7, [pc, #280]	; (81c0c <_svfprintf_r+0x90c>)
   81af4:	f025 0580 	bic.w	r5, r5, #128	; 0x80
   81af8:	4b45      	ldr	r3, [pc, #276]	; (81c10 <_svfprintf_r+0x910>)
   81afa:	2400      	movs	r4, #0
   81afc:	9509      	str	r5, [sp, #36]	; 0x24
   81afe:	2500      	movs	r5, #0
   81b00:	940a      	str	r4, [sp, #40]	; 0x28
   81b02:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   81b06:	bfd8      	it	le
   81b08:	461f      	movle	r7, r3
   81b0a:	2403      	movs	r4, #3
   81b0c:	9514      	str	r5, [sp, #80]	; 0x50
   81b0e:	e58e      	b.n	8162e <_svfprintf_r+0x32e>
   81b10:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81b14:	f04c 0c20 	orr.w	ip, ip, #32
   81b18:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81b1c:	f899 8000 	ldrb.w	r8, [r9]
   81b20:	e44a      	b.n	813b8 <_svfprintf_r+0xb8>
   81b22:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81b24:	1de3      	adds	r3, r4, #7
   81b26:	f023 0307 	bic.w	r3, r3, #7
   81b2a:	f103 0508 	add.w	r5, r3, #8
   81b2e:	9510      	str	r5, [sp, #64]	; 0x40
   81b30:	e9d3 4500 	ldrd	r4, r5, [r3]
   81b34:	2300      	movs	r3, #0
   81b36:	e54d      	b.n	815d4 <_svfprintf_r+0x2d4>
   81b38:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81b3a:	1deb      	adds	r3, r5, #7
   81b3c:	f023 0307 	bic.w	r3, r3, #7
   81b40:	f103 0c08 	add.w	ip, r3, #8
   81b44:	e9d3 4500 	ldrd	r4, r5, [r3]
   81b48:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81b4c:	2301      	movs	r3, #1
   81b4e:	e541      	b.n	815d4 <_svfprintf_r+0x2d4>
   81b50:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81b54:	f1b8 0f00 	cmp.w	r8, #0
   81b58:	f43f ace3 	beq.w	81522 <_svfprintf_r+0x222>
   81b5c:	2300      	movs	r3, #0
   81b5e:	f04f 0c01 	mov.w	ip, #1
   81b62:	469a      	mov	sl, r3
   81b64:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   81b68:	f88d 80b8 	strb.w	r8, [sp, #184]	; 0xb8
   81b6c:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   81b70:	930a      	str	r3, [sp, #40]	; 0x28
   81b72:	9314      	str	r3, [sp, #80]	; 0x50
   81b74:	4664      	mov	r4, ip
   81b76:	af2e      	add	r7, sp, #184	; 0xb8
   81b78:	e55f      	b.n	8163a <_svfprintf_r+0x33a>
   81b7a:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81b7e:	e5b7      	b.n	816f0 <_svfprintf_r+0x3f0>
   81b80:	2b01      	cmp	r3, #1
   81b82:	f000 80ec 	beq.w	81d5e <_svfprintf_r+0xa5e>
   81b86:	2b02      	cmp	r3, #2
   81b88:	f10d 03df 	add.w	r3, sp, #223	; 0xdf
   81b8c:	d118      	bne.n	81bc0 <_svfprintf_r+0x8c0>
   81b8e:	f8dd c068 	ldr.w	ip, [sp, #104]	; 0x68
   81b92:	4619      	mov	r1, r3
   81b94:	f004 000f 	and.w	r0, r4, #15
   81b98:	0922      	lsrs	r2, r4, #4
   81b9a:	f81c 0000 	ldrb.w	r0, [ip, r0]
   81b9e:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
   81ba2:	092b      	lsrs	r3, r5, #4
   81ba4:	7008      	strb	r0, [r1, #0]
   81ba6:	ea52 0003 	orrs.w	r0, r2, r3
   81baa:	460f      	mov	r7, r1
   81bac:	4614      	mov	r4, r2
   81bae:	461d      	mov	r5, r3
   81bb0:	f101 31ff 	add.w	r1, r1, #4294967295
   81bb4:	d1ee      	bne.n	81b94 <_svfprintf_r+0x894>
   81bb6:	9d08      	ldr	r5, [sp, #32]
   81bb8:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
   81bbc:	1bec      	subs	r4, r5, r7
   81bbe:	e52d      	b.n	8161c <_svfprintf_r+0x31c>
   81bc0:	08e0      	lsrs	r0, r4, #3
   81bc2:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
   81bc6:	f004 0207 	and.w	r2, r4, #7
   81bca:	08e9      	lsrs	r1, r5, #3
   81bcc:	3230      	adds	r2, #48	; 0x30
   81bce:	ea50 0c01 	orrs.w	ip, r0, r1
   81bd2:	461f      	mov	r7, r3
   81bd4:	701a      	strb	r2, [r3, #0]
   81bd6:	4604      	mov	r4, r0
   81bd8:	460d      	mov	r5, r1
   81bda:	f103 33ff 	add.w	r3, r3, #4294967295
   81bde:	d1ef      	bne.n	81bc0 <_svfprintf_r+0x8c0>
   81be0:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81be2:	e9cd 011c 	strd	r0, r1, [sp, #112]	; 0x70
   81be6:	07e0      	lsls	r0, r4, #31
   81be8:	4639      	mov	r1, r7
   81bea:	f140 80c1 	bpl.w	81d70 <_svfprintf_r+0xa70>
   81bee:	2a30      	cmp	r2, #48	; 0x30
   81bf0:	f000 80be 	beq.w	81d70 <_svfprintf_r+0xa70>
   81bf4:	9d08      	ldr	r5, [sp, #32]
   81bf6:	461f      	mov	r7, r3
   81bf8:	2330      	movs	r3, #48	; 0x30
   81bfa:	1bec      	subs	r4, r5, r7
   81bfc:	f801 3c01 	strb.w	r3, [r1, #-1]
   81c00:	e50c      	b.n	8161c <_svfprintf_r+0x31c>
   81c02:	bf00      	nop
   81c04:	00085ce0 	.word	0x00085ce0
   81c08:	00085cf4 	.word	0x00085cf4
   81c0c:	00085cd4 	.word	0x00085cd4
   81c10:	00085cd0 	.word	0x00085cd0
   81c14:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   81c18:	f340 80ad 	ble.w	81d76 <_svfprintf_r+0xa76>
   81c1c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   81c20:	2200      	movs	r2, #0
   81c22:	2300      	movs	r3, #0
   81c24:	f8cd c01c 	str.w	ip, [sp, #28]
   81c28:	f003 fce6 	bl	855f8 <__aeabi_dcmpeq>
   81c2c:	f8dd c01c 	ldr.w	ip, [sp, #28]
   81c30:	2800      	cmp	r0, #0
   81c32:	f000 8126 	beq.w	81e82 <_svfprintf_r+0xb82>
   81c36:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81c38:	49aa      	ldr	r1, [pc, #680]	; (81ee4 <_svfprintf_r+0xbe4>)
   81c3a:	3301      	adds	r3, #1
   81c3c:	f10c 0c01 	add.w	ip, ip, #1
   81c40:	2201      	movs	r2, #1
   81c42:	2b07      	cmp	r3, #7
   81c44:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81c48:	932c      	str	r3, [sp, #176]	; 0xb0
   81c4a:	e886 0006 	stmia.w	r6, {r1, r2}
   81c4e:	f300 82ed 	bgt.w	8222c <_svfprintf_r+0xf2c>
   81c52:	3608      	adds	r6, #8
   81c54:	9b25      	ldr	r3, [sp, #148]	; 0x94
   81c56:	9c11      	ldr	r4, [sp, #68]	; 0x44
   81c58:	42a3      	cmp	r3, r4
   81c5a:	db03      	blt.n	81c64 <_svfprintf_r+0x964>
   81c5c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81c5e:	07ec      	lsls	r4, r5, #31
   81c60:	f57f adc0 	bpl.w	817e4 <_svfprintf_r+0x4e4>
   81c64:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81c66:	9c18      	ldr	r4, [sp, #96]	; 0x60
   81c68:	3301      	adds	r3, #1
   81c6a:	9d15      	ldr	r5, [sp, #84]	; 0x54
   81c6c:	44a4      	add	ip, r4
   81c6e:	2b07      	cmp	r3, #7
   81c70:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81c74:	6035      	str	r5, [r6, #0]
   81c76:	6074      	str	r4, [r6, #4]
   81c78:	932c      	str	r3, [sp, #176]	; 0xb0
   81c7a:	f300 833e 	bgt.w	822fa <_svfprintf_r+0xffa>
   81c7e:	3608      	adds	r6, #8
   81c80:	9d11      	ldr	r5, [sp, #68]	; 0x44
   81c82:	1e6c      	subs	r4, r5, #1
   81c84:	2c00      	cmp	r4, #0
   81c86:	f77f adad 	ble.w	817e4 <_svfprintf_r+0x4e4>
   81c8a:	2c10      	cmp	r4, #16
   81c8c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81c8e:	4d96      	ldr	r5, [pc, #600]	; (81ee8 <_svfprintf_r+0xbe8>)
   81c90:	f340 8197 	ble.w	81fc2 <_svfprintf_r+0xcc2>
   81c94:	2710      	movs	r7, #16
   81c96:	4662      	mov	r2, ip
   81c98:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   81c9c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   81ca0:	e004      	b.n	81cac <_svfprintf_r+0x9ac>
   81ca2:	3608      	adds	r6, #8
   81ca4:	3c10      	subs	r4, #16
   81ca6:	2c10      	cmp	r4, #16
   81ca8:	f340 818a 	ble.w	81fc0 <_svfprintf_r+0xcc0>
   81cac:	3301      	adds	r3, #1
   81cae:	3210      	adds	r2, #16
   81cb0:	2b07      	cmp	r3, #7
   81cb2:	922d      	str	r2, [sp, #180]	; 0xb4
   81cb4:	932c      	str	r3, [sp, #176]	; 0xb0
   81cb6:	e886 00a0 	stmia.w	r6, {r5, r7}
   81cba:	ddf2      	ble.n	81ca2 <_svfprintf_r+0x9a2>
   81cbc:	4640      	mov	r0, r8
   81cbe:	4651      	mov	r1, sl
   81cc0:	aa2b      	add	r2, sp, #172	; 0xac
   81cc2:	f002 ff75 	bl	84bb0 <__ssprint_r>
   81cc6:	2800      	cmp	r0, #0
   81cc8:	f47f ac32 	bne.w	81530 <_svfprintf_r+0x230>
   81ccc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   81cce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81cd0:	ae38      	add	r6, sp, #224	; 0xe0
   81cd2:	e7e7      	b.n	81ca4 <_svfprintf_r+0x9a4>
   81cd4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81cd6:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81cd8:	ebc0 0a05 	rsb	sl, r0, r5
   81cdc:	f1ba 0f00 	cmp.w	sl, #0
   81ce0:	f77f ad2e 	ble.w	81740 <_svfprintf_r+0x440>
   81ce4:	f1ba 0f10 	cmp.w	sl, #16
   81ce8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81cea:	4d7f      	ldr	r5, [pc, #508]	; (81ee8 <_svfprintf_r+0xbe8>)
   81cec:	dd2b      	ble.n	81d46 <_svfprintf_r+0xa46>
   81cee:	9412      	str	r4, [sp, #72]	; 0x48
   81cf0:	4632      	mov	r2, r6
   81cf2:	f04f 0b10 	mov.w	fp, #16
   81cf6:	462e      	mov	r6, r5
   81cf8:	4661      	mov	r1, ip
   81cfa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   81cfc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   81cfe:	e006      	b.n	81d0e <_svfprintf_r+0xa0e>
   81d00:	f1aa 0a10 	sub.w	sl, sl, #16
   81d04:	f1ba 0f10 	cmp.w	sl, #16
   81d08:	f102 0208 	add.w	r2, r2, #8
   81d0c:	dd17      	ble.n	81d3e <_svfprintf_r+0xa3e>
   81d0e:	3301      	adds	r3, #1
   81d10:	3110      	adds	r1, #16
   81d12:	2b07      	cmp	r3, #7
   81d14:	912d      	str	r1, [sp, #180]	; 0xb4
   81d16:	932c      	str	r3, [sp, #176]	; 0xb0
   81d18:	e882 0840 	stmia.w	r2, {r6, fp}
   81d1c:	ddf0      	ble.n	81d00 <_svfprintf_r+0xa00>
   81d1e:	4620      	mov	r0, r4
   81d20:	4629      	mov	r1, r5
   81d22:	aa2b      	add	r2, sp, #172	; 0xac
   81d24:	f002 ff44 	bl	84bb0 <__ssprint_r>
   81d28:	2800      	cmp	r0, #0
   81d2a:	f47f ac01 	bne.w	81530 <_svfprintf_r+0x230>
   81d2e:	f1aa 0a10 	sub.w	sl, sl, #16
   81d32:	f1ba 0f10 	cmp.w	sl, #16
   81d36:	992d      	ldr	r1, [sp, #180]	; 0xb4
   81d38:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81d3a:	aa38      	add	r2, sp, #224	; 0xe0
   81d3c:	dce7      	bgt.n	81d0e <_svfprintf_r+0xa0e>
   81d3e:	9c12      	ldr	r4, [sp, #72]	; 0x48
   81d40:	4635      	mov	r5, r6
   81d42:	468c      	mov	ip, r1
   81d44:	4616      	mov	r6, r2
   81d46:	3301      	adds	r3, #1
   81d48:	44d4      	add	ip, sl
   81d4a:	2b07      	cmp	r3, #7
   81d4c:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81d50:	932c      	str	r3, [sp, #176]	; 0xb0
   81d52:	e886 0420 	stmia.w	r6, {r5, sl}
   81d56:	f300 820f 	bgt.w	82178 <_svfprintf_r+0xe78>
   81d5a:	3608      	adds	r6, #8
   81d5c:	e4f0      	b.n	81740 <_svfprintf_r+0x440>
   81d5e:	2d00      	cmp	r5, #0
   81d60:	bf08      	it	eq
   81d62:	2c0a      	cmpeq	r4, #10
   81d64:	f080 8138 	bcs.w	81fd8 <_svfprintf_r+0xcd8>
   81d68:	3430      	adds	r4, #48	; 0x30
   81d6a:	af48      	add	r7, sp, #288	; 0x120
   81d6c:	f807 4d41 	strb.w	r4, [r7, #-65]!
   81d70:	9d08      	ldr	r5, [sp, #32]
   81d72:	1bec      	subs	r4, r5, r7
   81d74:	e452      	b.n	8161c <_svfprintf_r+0x31c>
   81d76:	9c11      	ldr	r4, [sp, #68]	; 0x44
   81d78:	2c01      	cmp	r4, #1
   81d7a:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   81d7c:	f340 81d2 	ble.w	82124 <_svfprintf_r+0xe24>
   81d80:	3401      	adds	r4, #1
   81d82:	f10c 0301 	add.w	r3, ip, #1
   81d86:	2201      	movs	r2, #1
   81d88:	2c07      	cmp	r4, #7
   81d8a:	932d      	str	r3, [sp, #180]	; 0xb4
   81d8c:	6037      	str	r7, [r6, #0]
   81d8e:	942c      	str	r4, [sp, #176]	; 0xb0
   81d90:	6072      	str	r2, [r6, #4]
   81d92:	f300 81d8 	bgt.w	82146 <_svfprintf_r+0xe46>
   81d96:	3608      	adds	r6, #8
   81d98:	9d15      	ldr	r5, [sp, #84]	; 0x54
   81d9a:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
   81d9e:	3401      	adds	r4, #1
   81da0:	6035      	str	r5, [r6, #0]
   81da2:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81da4:	4498      	add	r8, r3
   81da6:	2c07      	cmp	r4, #7
   81da8:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   81dac:	942c      	str	r4, [sp, #176]	; 0xb0
   81dae:	6075      	str	r5, [r6, #4]
   81db0:	f300 81d5 	bgt.w	8215e <_svfprintf_r+0xe5e>
   81db4:	3608      	adds	r6, #8
   81db6:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   81dba:	2200      	movs	r2, #0
   81dbc:	2300      	movs	r3, #0
   81dbe:	f003 fc1b 	bl	855f8 <__aeabi_dcmpeq>
   81dc2:	9d11      	ldr	r5, [sp, #68]	; 0x44
   81dc4:	2800      	cmp	r0, #0
   81dc6:	f040 80b9 	bne.w	81f3c <_svfprintf_r+0xc3c>
   81dca:	1e6b      	subs	r3, r5, #1
   81dcc:	3401      	adds	r4, #1
   81dce:	3701      	adds	r7, #1
   81dd0:	4498      	add	r8, r3
   81dd2:	2c07      	cmp	r4, #7
   81dd4:	942c      	str	r4, [sp, #176]	; 0xb0
   81dd6:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   81dda:	6037      	str	r7, [r6, #0]
   81ddc:	6073      	str	r3, [r6, #4]
   81dde:	f300 80e2 	bgt.w	81fa6 <_svfprintf_r+0xca6>
   81de2:	3608      	adds	r6, #8
   81de4:	f8dd c064 	ldr.w	ip, [sp, #100]	; 0x64
   81de8:	3401      	adds	r4, #1
   81dea:	9d19      	ldr	r5, [sp, #100]	; 0x64
   81dec:	44c4      	add	ip, r8
   81dee:	ab27      	add	r3, sp, #156	; 0x9c
   81df0:	2c07      	cmp	r4, #7
   81df2:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81df6:	942c      	str	r4, [sp, #176]	; 0xb0
   81df8:	e886 0028 	stmia.w	r6, {r3, r5}
   81dfc:	f77f acf1 	ble.w	817e2 <_svfprintf_r+0x4e2>
   81e00:	980d      	ldr	r0, [sp, #52]	; 0x34
   81e02:	990c      	ldr	r1, [sp, #48]	; 0x30
   81e04:	aa2b      	add	r2, sp, #172	; 0xac
   81e06:	f002 fed3 	bl	84bb0 <__ssprint_r>
   81e0a:	2800      	cmp	r0, #0
   81e0c:	f47f ab90 	bne.w	81530 <_svfprintf_r+0x230>
   81e10:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81e14:	ae38      	add	r6, sp, #224	; 0xe0
   81e16:	e4e5      	b.n	817e4 <_svfprintf_r+0x4e4>
   81e18:	980d      	ldr	r0, [sp, #52]	; 0x34
   81e1a:	990c      	ldr	r1, [sp, #48]	; 0x30
   81e1c:	aa2b      	add	r2, sp, #172	; 0xac
   81e1e:	f002 fec7 	bl	84bb0 <__ssprint_r>
   81e22:	2800      	cmp	r0, #0
   81e24:	f43f ad37 	beq.w	81896 <_svfprintf_r+0x596>
   81e28:	f7ff bb82 	b.w	81530 <_svfprintf_r+0x230>
   81e2c:	980d      	ldr	r0, [sp, #52]	; 0x34
   81e2e:	990c      	ldr	r1, [sp, #48]	; 0x30
   81e30:	aa2b      	add	r2, sp, #172	; 0xac
   81e32:	f002 febd 	bl	84bb0 <__ssprint_r>
   81e36:	2800      	cmp	r0, #0
   81e38:	f47f ab7a 	bne.w	81530 <_svfprintf_r+0x230>
   81e3c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81e40:	ae38      	add	r6, sp, #224	; 0xe0
   81e42:	e4bf      	b.n	817c4 <_svfprintf_r+0x4c4>
   81e44:	980d      	ldr	r0, [sp, #52]	; 0x34
   81e46:	990c      	ldr	r1, [sp, #48]	; 0x30
   81e48:	aa2b      	add	r2, sp, #172	; 0xac
   81e4a:	f002 feb1 	bl	84bb0 <__ssprint_r>
   81e4e:	2800      	cmp	r0, #0
   81e50:	f47f ab6e 	bne.w	81530 <_svfprintf_r+0x230>
   81e54:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81e58:	ae38      	add	r6, sp, #224	; 0xe0
   81e5a:	e46d      	b.n	81738 <_svfprintf_r+0x438>
   81e5c:	980d      	ldr	r0, [sp, #52]	; 0x34
   81e5e:	990c      	ldr	r1, [sp, #48]	; 0x30
   81e60:	aa2b      	add	r2, sp, #172	; 0xac
   81e62:	f002 fea5 	bl	84bb0 <__ssprint_r>
   81e66:	2800      	cmp	r0, #0
   81e68:	f47f ab62 	bne.w	81530 <_svfprintf_r+0x230>
   81e6c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81e70:	ae38      	add	r6, sp, #224	; 0xe0
   81e72:	e450      	b.n	81716 <_svfprintf_r+0x416>
   81e74:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   81e76:	af38      	add	r7, sp, #224	; 0xe0
   81e78:	f7ff bbd0 	b.w	8161c <_svfprintf_r+0x31c>
   81e7c:	2302      	movs	r3, #2
   81e7e:	f7ff bba9 	b.w	815d4 <_svfprintf_r+0x2d4>
   81e82:	9b25      	ldr	r3, [sp, #148]	; 0x94
   81e84:	2b00      	cmp	r3, #0
   81e86:	f340 81dd 	ble.w	82244 <_svfprintf_r+0xf44>
   81e8a:	9c11      	ldr	r4, [sp, #68]	; 0x44
   81e8c:	9d14      	ldr	r5, [sp, #80]	; 0x50
   81e8e:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
   81e92:	42ac      	cmp	r4, r5
   81e94:	bfa8      	it	ge
   81e96:	462c      	movge	r4, r5
   81e98:	2c00      	cmp	r4, #0
   81e9a:	44ba      	add	sl, r7
   81e9c:	dd0b      	ble.n	81eb6 <_svfprintf_r+0xbb6>
   81e9e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81ea0:	44a4      	add	ip, r4
   81ea2:	3301      	adds	r3, #1
   81ea4:	2b07      	cmp	r3, #7
   81ea6:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81eaa:	6037      	str	r7, [r6, #0]
   81eac:	6074      	str	r4, [r6, #4]
   81eae:	932c      	str	r3, [sp, #176]	; 0xb0
   81eb0:	f300 831e 	bgt.w	824f0 <_svfprintf_r+0x11f0>
   81eb4:	3608      	adds	r6, #8
   81eb6:	9d14      	ldr	r5, [sp, #80]	; 0x50
   81eb8:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
   81ebc:	1b2c      	subs	r4, r5, r4
   81ebe:	2c00      	cmp	r4, #0
   81ec0:	f340 80d7 	ble.w	82072 <_svfprintf_r+0xd72>
   81ec4:	2c10      	cmp	r4, #16
   81ec6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81ec8:	4d07      	ldr	r5, [pc, #28]	; (81ee8 <_svfprintf_r+0xbe8>)
   81eca:	f340 81a3 	ble.w	82214 <_svfprintf_r+0xf14>
   81ece:	970a      	str	r7, [sp, #40]	; 0x28
   81ed0:	f04f 0810 	mov.w	r8, #16
   81ed4:	462f      	mov	r7, r5
   81ed6:	4662      	mov	r2, ip
   81ed8:	4625      	mov	r5, r4
   81eda:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
   81ede:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81ee0:	e009      	b.n	81ef6 <_svfprintf_r+0xbf6>
   81ee2:	bf00      	nop
   81ee4:	00085d10 	.word	0x00085d10
   81ee8:	00085cc0 	.word	0x00085cc0
   81eec:	3608      	adds	r6, #8
   81eee:	3d10      	subs	r5, #16
   81ef0:	2d10      	cmp	r5, #16
   81ef2:	f340 818b 	ble.w	8220c <_svfprintf_r+0xf0c>
   81ef6:	3301      	adds	r3, #1
   81ef8:	3210      	adds	r2, #16
   81efa:	2b07      	cmp	r3, #7
   81efc:	922d      	str	r2, [sp, #180]	; 0xb4
   81efe:	932c      	str	r3, [sp, #176]	; 0xb0
   81f00:	e886 0180 	stmia.w	r6, {r7, r8}
   81f04:	ddf2      	ble.n	81eec <_svfprintf_r+0xbec>
   81f06:	4658      	mov	r0, fp
   81f08:	4621      	mov	r1, r4
   81f0a:	aa2b      	add	r2, sp, #172	; 0xac
   81f0c:	f002 fe50 	bl	84bb0 <__ssprint_r>
   81f10:	2800      	cmp	r0, #0
   81f12:	f47f ab0d 	bne.w	81530 <_svfprintf_r+0x230>
   81f16:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   81f18:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81f1a:	ae38      	add	r6, sp, #224	; 0xe0
   81f1c:	e7e7      	b.n	81eee <_svfprintf_r+0xbee>
   81f1e:	980d      	ldr	r0, [sp, #52]	; 0x34
   81f20:	990c      	ldr	r1, [sp, #48]	; 0x30
   81f22:	aa2b      	add	r2, sp, #172	; 0xac
   81f24:	f002 fe44 	bl	84bb0 <__ssprint_r>
   81f28:	2800      	cmp	r0, #0
   81f2a:	f47f ab01 	bne.w	81530 <_svfprintf_r+0x230>
   81f2e:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   81f32:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81f36:	ae38      	add	r6, sp, #224	; 0xe0
   81f38:	f7ff bbda 	b.w	816f0 <_svfprintf_r+0x3f0>
   81f3c:	1e6f      	subs	r7, r5, #1
   81f3e:	2f00      	cmp	r7, #0
   81f40:	f77f af50 	ble.w	81de4 <_svfprintf_r+0xae4>
   81f44:	2f10      	cmp	r7, #16
   81f46:	4dae      	ldr	r5, [pc, #696]	; (82200 <_svfprintf_r+0xf00>)
   81f48:	dd23      	ble.n	81f92 <_svfprintf_r+0xc92>
   81f4a:	4643      	mov	r3, r8
   81f4c:	f04f 0a10 	mov.w	sl, #16
   81f50:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   81f54:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   81f58:	e004      	b.n	81f64 <_svfprintf_r+0xc64>
   81f5a:	3f10      	subs	r7, #16
   81f5c:	2f10      	cmp	r7, #16
   81f5e:	f106 0608 	add.w	r6, r6, #8
   81f62:	dd15      	ble.n	81f90 <_svfprintf_r+0xc90>
   81f64:	3401      	adds	r4, #1
   81f66:	3310      	adds	r3, #16
   81f68:	2c07      	cmp	r4, #7
   81f6a:	932d      	str	r3, [sp, #180]	; 0xb4
   81f6c:	942c      	str	r4, [sp, #176]	; 0xb0
   81f6e:	e886 0420 	stmia.w	r6, {r5, sl}
   81f72:	ddf2      	ble.n	81f5a <_svfprintf_r+0xc5a>
   81f74:	4640      	mov	r0, r8
   81f76:	4659      	mov	r1, fp
   81f78:	aa2b      	add	r2, sp, #172	; 0xac
   81f7a:	f002 fe19 	bl	84bb0 <__ssprint_r>
   81f7e:	2800      	cmp	r0, #0
   81f80:	f47f aad6 	bne.w	81530 <_svfprintf_r+0x230>
   81f84:	3f10      	subs	r7, #16
   81f86:	2f10      	cmp	r7, #16
   81f88:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   81f8a:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   81f8c:	ae38      	add	r6, sp, #224	; 0xe0
   81f8e:	dce9      	bgt.n	81f64 <_svfprintf_r+0xc64>
   81f90:	4698      	mov	r8, r3
   81f92:	3401      	adds	r4, #1
   81f94:	44b8      	add	r8, r7
   81f96:	2c07      	cmp	r4, #7
   81f98:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   81f9c:	942c      	str	r4, [sp, #176]	; 0xb0
   81f9e:	e886 00a0 	stmia.w	r6, {r5, r7}
   81fa2:	f77f af1e 	ble.w	81de2 <_svfprintf_r+0xae2>
   81fa6:	980d      	ldr	r0, [sp, #52]	; 0x34
   81fa8:	990c      	ldr	r1, [sp, #48]	; 0x30
   81faa:	aa2b      	add	r2, sp, #172	; 0xac
   81fac:	f002 fe00 	bl	84bb0 <__ssprint_r>
   81fb0:	2800      	cmp	r0, #0
   81fb2:	f47f aabd 	bne.w	81530 <_svfprintf_r+0x230>
   81fb6:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
   81fba:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   81fbc:	ae38      	add	r6, sp, #224	; 0xe0
   81fbe:	e711      	b.n	81de4 <_svfprintf_r+0xae4>
   81fc0:	4694      	mov	ip, r2
   81fc2:	3301      	adds	r3, #1
   81fc4:	44a4      	add	ip, r4
   81fc6:	2b07      	cmp	r3, #7
   81fc8:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81fcc:	932c      	str	r3, [sp, #176]	; 0xb0
   81fce:	6035      	str	r5, [r6, #0]
   81fd0:	6074      	str	r4, [r6, #4]
   81fd2:	f77f ac06 	ble.w	817e2 <_svfprintf_r+0x4e2>
   81fd6:	e713      	b.n	81e00 <_svfprintf_r+0xb00>
   81fd8:	f10d 0bdf 	add.w	fp, sp, #223	; 0xdf
   81fdc:	4620      	mov	r0, r4
   81fde:	4629      	mov	r1, r5
   81fe0:	220a      	movs	r2, #10
   81fe2:	2300      	movs	r3, #0
   81fe4:	f003 fb62 	bl	856ac <__aeabi_uldivmod>
   81fe8:	3230      	adds	r2, #48	; 0x30
   81fea:	f88b 2000 	strb.w	r2, [fp]
   81fee:	4620      	mov	r0, r4
   81ff0:	4629      	mov	r1, r5
   81ff2:	220a      	movs	r2, #10
   81ff4:	2300      	movs	r3, #0
   81ff6:	f003 fb59 	bl	856ac <__aeabi_uldivmod>
   81ffa:	4604      	mov	r4, r0
   81ffc:	460d      	mov	r5, r1
   81ffe:	ea54 0c05 	orrs.w	ip, r4, r5
   82002:	465f      	mov	r7, fp
   82004:	f10b 3bff 	add.w	fp, fp, #4294967295
   82008:	d1e8      	bne.n	81fdc <_svfprintf_r+0xcdc>
   8200a:	9d08      	ldr	r5, [sp, #32]
   8200c:	1bec      	subs	r4, r5, r7
   8200e:	f7ff bb05 	b.w	8161c <_svfprintf_r+0x31c>
   82012:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82014:	2301      	movs	r3, #1
   82016:	682c      	ldr	r4, [r5, #0]
   82018:	3504      	adds	r5, #4
   8201a:	9510      	str	r5, [sp, #64]	; 0x40
   8201c:	2500      	movs	r5, #0
   8201e:	f7ff bad9 	b.w	815d4 <_svfprintf_r+0x2d4>
   82022:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82024:	682c      	ldr	r4, [r5, #0]
   82026:	3504      	adds	r5, #4
   82028:	9510      	str	r5, [sp, #64]	; 0x40
   8202a:	2500      	movs	r5, #0
   8202c:	f7ff bad2 	b.w	815d4 <_svfprintf_r+0x2d4>
   82030:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82032:	682c      	ldr	r4, [r5, #0]
   82034:	3504      	adds	r5, #4
   82036:	9510      	str	r5, [sp, #64]	; 0x40
   82038:	17e5      	asrs	r5, r4, #31
   8203a:	4622      	mov	r2, r4
   8203c:	462b      	mov	r3, r5
   8203e:	2a00      	cmp	r2, #0
   82040:	f173 0c00 	sbcs.w	ip, r3, #0
   82044:	f6bf ac6c 	bge.w	81920 <_svfprintf_r+0x620>
   82048:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   8204c:	4264      	negs	r4, r4
   8204e:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   82052:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   82056:	2301      	movs	r3, #1
   82058:	f7ff bac0 	b.w	815dc <_svfprintf_r+0x2dc>
   8205c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8205e:	990c      	ldr	r1, [sp, #48]	; 0x30
   82060:	aa2b      	add	r2, sp, #172	; 0xac
   82062:	f002 fda5 	bl	84bb0 <__ssprint_r>
   82066:	2800      	cmp	r0, #0
   82068:	f47f aa62 	bne.w	81530 <_svfprintf_r+0x230>
   8206c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82070:	ae38      	add	r6, sp, #224	; 0xe0
   82072:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82074:	9c25      	ldr	r4, [sp, #148]	; 0x94
   82076:	442f      	add	r7, r5
   82078:	9d11      	ldr	r5, [sp, #68]	; 0x44
   8207a:	42ac      	cmp	r4, r5
   8207c:	db42      	blt.n	82104 <_svfprintf_r+0xe04>
   8207e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82080:	07e9      	lsls	r1, r5, #31
   82082:	d43f      	bmi.n	82104 <_svfprintf_r+0xe04>
   82084:	9811      	ldr	r0, [sp, #68]	; 0x44
   82086:	ebc7 050a 	rsb	r5, r7, sl
   8208a:	1b04      	subs	r4, r0, r4
   8208c:	42ac      	cmp	r4, r5
   8208e:	bfb8      	it	lt
   82090:	4625      	movlt	r5, r4
   82092:	2d00      	cmp	r5, #0
   82094:	dd0b      	ble.n	820ae <_svfprintf_r+0xdae>
   82096:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82098:	44ac      	add	ip, r5
   8209a:	3301      	adds	r3, #1
   8209c:	2b07      	cmp	r3, #7
   8209e:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   820a2:	6037      	str	r7, [r6, #0]
   820a4:	6075      	str	r5, [r6, #4]
   820a6:	932c      	str	r3, [sp, #176]	; 0xb0
   820a8:	f300 824c 	bgt.w	82544 <_svfprintf_r+0x1244>
   820ac:	3608      	adds	r6, #8
   820ae:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
   820b2:	1b64      	subs	r4, r4, r5
   820b4:	2c00      	cmp	r4, #0
   820b6:	f77f ab95 	ble.w	817e4 <_svfprintf_r+0x4e4>
   820ba:	2c10      	cmp	r4, #16
   820bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   820be:	4d50      	ldr	r5, [pc, #320]	; (82200 <_svfprintf_r+0xf00>)
   820c0:	f77f af7f 	ble.w	81fc2 <_svfprintf_r+0xcc2>
   820c4:	2710      	movs	r7, #16
   820c6:	4662      	mov	r2, ip
   820c8:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   820cc:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   820d0:	e004      	b.n	820dc <_svfprintf_r+0xddc>
   820d2:	3608      	adds	r6, #8
   820d4:	3c10      	subs	r4, #16
   820d6:	2c10      	cmp	r4, #16
   820d8:	f77f af72 	ble.w	81fc0 <_svfprintf_r+0xcc0>
   820dc:	3301      	adds	r3, #1
   820de:	3210      	adds	r2, #16
   820e0:	2b07      	cmp	r3, #7
   820e2:	922d      	str	r2, [sp, #180]	; 0xb4
   820e4:	932c      	str	r3, [sp, #176]	; 0xb0
   820e6:	e886 00a0 	stmia.w	r6, {r5, r7}
   820ea:	ddf2      	ble.n	820d2 <_svfprintf_r+0xdd2>
   820ec:	4640      	mov	r0, r8
   820ee:	4651      	mov	r1, sl
   820f0:	aa2b      	add	r2, sp, #172	; 0xac
   820f2:	f002 fd5d 	bl	84bb0 <__ssprint_r>
   820f6:	2800      	cmp	r0, #0
   820f8:	f47f aa1a 	bne.w	81530 <_svfprintf_r+0x230>
   820fc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   820fe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82100:	ae38      	add	r6, sp, #224	; 0xe0
   82102:	e7e7      	b.n	820d4 <_svfprintf_r+0xdd4>
   82104:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82106:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82108:	44ac      	add	ip, r5
   8210a:	9d15      	ldr	r5, [sp, #84]	; 0x54
   8210c:	3301      	adds	r3, #1
   8210e:	6035      	str	r5, [r6, #0]
   82110:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82112:	2b07      	cmp	r3, #7
   82114:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82118:	6075      	str	r5, [r6, #4]
   8211a:	932c      	str	r3, [sp, #176]	; 0xb0
   8211c:	f300 81f4 	bgt.w	82508 <_svfprintf_r+0x1208>
   82120:	3608      	adds	r6, #8
   82122:	e7af      	b.n	82084 <_svfprintf_r+0xd84>
   82124:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82126:	07ea      	lsls	r2, r5, #31
   82128:	f53f ae2a 	bmi.w	81d80 <_svfprintf_r+0xa80>
   8212c:	3401      	adds	r4, #1
   8212e:	f10c 0801 	add.w	r8, ip, #1
   82132:	2301      	movs	r3, #1
   82134:	2c07      	cmp	r4, #7
   82136:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   8213a:	942c      	str	r4, [sp, #176]	; 0xb0
   8213c:	6037      	str	r7, [r6, #0]
   8213e:	6073      	str	r3, [r6, #4]
   82140:	f77f ae4f 	ble.w	81de2 <_svfprintf_r+0xae2>
   82144:	e72f      	b.n	81fa6 <_svfprintf_r+0xca6>
   82146:	980d      	ldr	r0, [sp, #52]	; 0x34
   82148:	990c      	ldr	r1, [sp, #48]	; 0x30
   8214a:	aa2b      	add	r2, sp, #172	; 0xac
   8214c:	f002 fd30 	bl	84bb0 <__ssprint_r>
   82150:	2800      	cmp	r0, #0
   82152:	f47f a9ed 	bne.w	81530 <_svfprintf_r+0x230>
   82156:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   82158:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   8215a:	ae38      	add	r6, sp, #224	; 0xe0
   8215c:	e61c      	b.n	81d98 <_svfprintf_r+0xa98>
   8215e:	980d      	ldr	r0, [sp, #52]	; 0x34
   82160:	990c      	ldr	r1, [sp, #48]	; 0x30
   82162:	aa2b      	add	r2, sp, #172	; 0xac
   82164:	f002 fd24 	bl	84bb0 <__ssprint_r>
   82168:	2800      	cmp	r0, #0
   8216a:	f47f a9e1 	bne.w	81530 <_svfprintf_r+0x230>
   8216e:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
   82172:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82174:	ae38      	add	r6, sp, #224	; 0xe0
   82176:	e61e      	b.n	81db6 <_svfprintf_r+0xab6>
   82178:	980d      	ldr	r0, [sp, #52]	; 0x34
   8217a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8217c:	aa2b      	add	r2, sp, #172	; 0xac
   8217e:	f002 fd17 	bl	84bb0 <__ssprint_r>
   82182:	2800      	cmp	r0, #0
   82184:	f47f a9d4 	bne.w	81530 <_svfprintf_r+0x230>
   82188:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   8218c:	ae38      	add	r6, sp, #224	; 0xe0
   8218e:	f7ff bad7 	b.w	81740 <_svfprintf_r+0x440>
   82192:	f002 fcd3 	bl	84b3c <__fpclassifyd>
   82196:	2800      	cmp	r0, #0
   82198:	f040 80bb 	bne.w	82312 <_svfprintf_r+0x1012>
   8219c:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8219e:	4f19      	ldr	r7, [pc, #100]	; (82204 <_svfprintf_r+0xf04>)
   821a0:	4b19      	ldr	r3, [pc, #100]	; (82208 <_svfprintf_r+0xf08>)
   821a2:	f04f 0c03 	mov.w	ip, #3
   821a6:	f024 0480 	bic.w	r4, r4, #128	; 0x80
   821aa:	9409      	str	r4, [sp, #36]	; 0x24
   821ac:	900a      	str	r0, [sp, #40]	; 0x28
   821ae:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   821b2:	9014      	str	r0, [sp, #80]	; 0x50
   821b4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   821b8:	bfd8      	it	le
   821ba:	461f      	movle	r7, r3
   821bc:	4664      	mov	r4, ip
   821be:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   821c2:	f7ff ba34 	b.w	8162e <_svfprintf_r+0x32e>
   821c6:	9c09      	ldr	r4, [sp, #36]	; 0x24
   821c8:	0664      	lsls	r4, r4, #25
   821ca:	f140 8150 	bpl.w	8246e <_svfprintf_r+0x116e>
   821ce:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   821d2:	2500      	movs	r5, #0
   821d4:	f8bc 4000 	ldrh.w	r4, [ip]
   821d8:	f10c 0c04 	add.w	ip, ip, #4
   821dc:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   821e0:	f7ff b9e4 	b.w	815ac <_svfprintf_r+0x2ac>
   821e4:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   821e8:	f01c 0f10 	tst.w	ip, #16
   821ec:	f000 8146 	beq.w	8247c <_svfprintf_r+0x117c>
   821f0:	9c10      	ldr	r4, [sp, #64]	; 0x40
   821f2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   821f4:	6823      	ldr	r3, [r4, #0]
   821f6:	3404      	adds	r4, #4
   821f8:	9410      	str	r4, [sp, #64]	; 0x40
   821fa:	601d      	str	r5, [r3, #0]
   821fc:	f7ff b8a6 	b.w	8134c <_svfprintf_r+0x4c>
   82200:	00085cc0 	.word	0x00085cc0
   82204:	00085cdc 	.word	0x00085cdc
   82208:	00085cd8 	.word	0x00085cd8
   8220c:	462c      	mov	r4, r5
   8220e:	463d      	mov	r5, r7
   82210:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   82212:	4694      	mov	ip, r2
   82214:	3301      	adds	r3, #1
   82216:	44a4      	add	ip, r4
   82218:	2b07      	cmp	r3, #7
   8221a:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8221e:	932c      	str	r3, [sp, #176]	; 0xb0
   82220:	6035      	str	r5, [r6, #0]
   82222:	6074      	str	r4, [r6, #4]
   82224:	f73f af1a 	bgt.w	8205c <_svfprintf_r+0xd5c>
   82228:	3608      	adds	r6, #8
   8222a:	e722      	b.n	82072 <_svfprintf_r+0xd72>
   8222c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8222e:	990c      	ldr	r1, [sp, #48]	; 0x30
   82230:	aa2b      	add	r2, sp, #172	; 0xac
   82232:	f002 fcbd 	bl	84bb0 <__ssprint_r>
   82236:	2800      	cmp	r0, #0
   82238:	f47f a97a 	bne.w	81530 <_svfprintf_r+0x230>
   8223c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82240:	ae38      	add	r6, sp, #224	; 0xe0
   82242:	e507      	b.n	81c54 <_svfprintf_r+0x954>
   82244:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   82246:	49b7      	ldr	r1, [pc, #732]	; (82524 <_svfprintf_r+0x1224>)
   82248:	3201      	adds	r2, #1
   8224a:	f10c 0c01 	add.w	ip, ip, #1
   8224e:	2001      	movs	r0, #1
   82250:	2a07      	cmp	r2, #7
   82252:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82256:	922c      	str	r2, [sp, #176]	; 0xb0
   82258:	6031      	str	r1, [r6, #0]
   8225a:	6070      	str	r0, [r6, #4]
   8225c:	f300 80f7 	bgt.w	8244e <_svfprintf_r+0x114e>
   82260:	3608      	adds	r6, #8
   82262:	461c      	mov	r4, r3
   82264:	b92c      	cbnz	r4, 82272 <_svfprintf_r+0xf72>
   82266:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82268:	b91d      	cbnz	r5, 82272 <_svfprintf_r+0xf72>
   8226a:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8226c:	07e8      	lsls	r0, r5, #31
   8226e:	f57f aab9 	bpl.w	817e4 <_svfprintf_r+0x4e4>
   82272:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82274:	9d15      	ldr	r5, [sp, #84]	; 0x54
   82276:	9918      	ldr	r1, [sp, #96]	; 0x60
   82278:	3301      	adds	r3, #1
   8227a:	6035      	str	r5, [r6, #0]
   8227c:	9d18      	ldr	r5, [sp, #96]	; 0x60
   8227e:	4461      	add	r1, ip
   82280:	2b07      	cmp	r3, #7
   82282:	912d      	str	r1, [sp, #180]	; 0xb4
   82284:	6075      	str	r5, [r6, #4]
   82286:	932c      	str	r3, [sp, #176]	; 0xb0
   82288:	f300 81de 	bgt.w	82648 <_svfprintf_r+0x1348>
   8228c:	f106 0208 	add.w	r2, r6, #8
   82290:	4264      	negs	r4, r4
   82292:	2c00      	cmp	r4, #0
   82294:	f340 810b 	ble.w	824ae <_svfprintf_r+0x11ae>
   82298:	2c10      	cmp	r4, #16
   8229a:	4da3      	ldr	r5, [pc, #652]	; (82528 <_svfprintf_r+0x1228>)
   8229c:	f340 8148 	ble.w	82530 <_svfprintf_r+0x1230>
   822a0:	46a3      	mov	fp, r4
   822a2:	2610      	movs	r6, #16
   822a4:	460c      	mov	r4, r1
   822a6:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   822aa:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   822ae:	e006      	b.n	822be <_svfprintf_r+0xfbe>
   822b0:	3208      	adds	r2, #8
   822b2:	f1ab 0b10 	sub.w	fp, fp, #16
   822b6:	f1bb 0f10 	cmp.w	fp, #16
   822ba:	f340 8137 	ble.w	8252c <_svfprintf_r+0x122c>
   822be:	3301      	adds	r3, #1
   822c0:	3410      	adds	r4, #16
   822c2:	2b07      	cmp	r3, #7
   822c4:	942d      	str	r4, [sp, #180]	; 0xb4
   822c6:	932c      	str	r3, [sp, #176]	; 0xb0
   822c8:	e882 0060 	stmia.w	r2, {r5, r6}
   822cc:	ddf0      	ble.n	822b0 <_svfprintf_r+0xfb0>
   822ce:	4640      	mov	r0, r8
   822d0:	4651      	mov	r1, sl
   822d2:	aa2b      	add	r2, sp, #172	; 0xac
   822d4:	f002 fc6c 	bl	84bb0 <__ssprint_r>
   822d8:	2800      	cmp	r0, #0
   822da:	f47f a929 	bne.w	81530 <_svfprintf_r+0x230>
   822de:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
   822e0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   822e2:	aa38      	add	r2, sp, #224	; 0xe0
   822e4:	e7e5      	b.n	822b2 <_svfprintf_r+0xfb2>
   822e6:	9c09      	ldr	r4, [sp, #36]	; 0x24
   822e8:	f109 0901 	add.w	r9, r9, #1
   822ec:	f044 0420 	orr.w	r4, r4, #32
   822f0:	9409      	str	r4, [sp, #36]	; 0x24
   822f2:	f893 8001 	ldrb.w	r8, [r3, #1]
   822f6:	f7ff b85f 	b.w	813b8 <_svfprintf_r+0xb8>
   822fa:	980d      	ldr	r0, [sp, #52]	; 0x34
   822fc:	990c      	ldr	r1, [sp, #48]	; 0x30
   822fe:	aa2b      	add	r2, sp, #172	; 0xac
   82300:	f002 fc56 	bl	84bb0 <__ssprint_r>
   82304:	2800      	cmp	r0, #0
   82306:	f47f a913 	bne.w	81530 <_svfprintf_r+0x230>
   8230a:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   8230e:	ae38      	add	r6, sp, #224	; 0xe0
   82310:	e4b6      	b.n	81c80 <_svfprintf_r+0x980>
   82312:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82314:	f028 0a20 	bic.w	sl, r8, #32
   82318:	3501      	adds	r5, #1
   8231a:	f000 80a5 	beq.w	82468 <_svfprintf_r+0x1168>
   8231e:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   82322:	d104      	bne.n	8232e <_svfprintf_r+0x102e>
   82324:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82326:	2d00      	cmp	r5, #0
   82328:	bf08      	it	eq
   8232a:	2501      	moveq	r5, #1
   8232c:	950a      	str	r5, [sp, #40]	; 0x28
   8232e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82332:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   82336:	f44c 7c80 	orr.w	ip, ip, #256	; 0x100
   8233a:	2b00      	cmp	r3, #0
   8233c:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
   82340:	f2c0 819c 	blt.w	8267c <_svfprintf_r+0x137c>
   82344:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
   82348:	e9cd 4520 	strd	r4, r5, [sp, #128]	; 0x80
   8234c:	f04f 0b00 	mov.w	fp, #0
   82350:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   82354:	f000 819b 	beq.w	8268e <_svfprintf_r+0x138e>
   82358:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
   8235c:	f000 81a9 	beq.w	826b2 <_svfprintf_r+0x13b2>
   82360:	f1ba 0f45 	cmp.w	sl, #69	; 0x45
   82364:	bf0a      	itet	eq
   82366:	9c0a      	ldreq	r4, [sp, #40]	; 0x28
   82368:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   8236a:	1c65      	addeq	r5, r4, #1
   8236c:	2002      	movs	r0, #2
   8236e:	a925      	add	r1, sp, #148	; 0x94
   82370:	aa26      	add	r2, sp, #152	; 0x98
   82372:	ab29      	add	r3, sp, #164	; 0xa4
   82374:	e88d 0021 	stmia.w	sp, {r0, r5}
   82378:	9203      	str	r2, [sp, #12]
   8237a:	9304      	str	r3, [sp, #16]
   8237c:	9102      	str	r1, [sp, #8]
   8237e:	980d      	ldr	r0, [sp, #52]	; 0x34
   82380:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
   82384:	f000 fad8 	bl	82938 <_dtoa_r>
   82388:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   8238c:	4607      	mov	r7, r0
   8238e:	d002      	beq.n	82396 <_svfprintf_r+0x1096>
   82390:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   82394:	d105      	bne.n	823a2 <_svfprintf_r+0x10a2>
   82396:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8239a:	f01c 0f01 	tst.w	ip, #1
   8239e:	f000 819c 	beq.w	826da <_svfprintf_r+0x13da>
   823a2:	f1ba 0f46 	cmp.w	sl, #70	; 0x46
   823a6:	eb07 0405 	add.w	r4, r7, r5
   823aa:	f000 811c 	beq.w	825e6 <_svfprintf_r+0x12e6>
   823ae:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
   823b2:	2200      	movs	r2, #0
   823b4:	2300      	movs	r3, #0
   823b6:	f003 f91f 	bl	855f8 <__aeabi_dcmpeq>
   823ba:	2800      	cmp	r0, #0
   823bc:	f040 8105 	bne.w	825ca <_svfprintf_r+0x12ca>
   823c0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   823c2:	429c      	cmp	r4, r3
   823c4:	d906      	bls.n	823d4 <_svfprintf_r+0x10d4>
   823c6:	2130      	movs	r1, #48	; 0x30
   823c8:	1c5a      	adds	r2, r3, #1
   823ca:	9229      	str	r2, [sp, #164]	; 0xa4
   823cc:	7019      	strb	r1, [r3, #0]
   823ce:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   823d0:	429c      	cmp	r4, r3
   823d2:	d8f9      	bhi.n	823c8 <_svfprintf_r+0x10c8>
   823d4:	1bdb      	subs	r3, r3, r7
   823d6:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   823da:	9311      	str	r3, [sp, #68]	; 0x44
   823dc:	f000 80ed 	beq.w	825ba <_svfprintf_r+0x12ba>
   823e0:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   823e4:	f340 81f2 	ble.w	827cc <_svfprintf_r+0x14cc>
   823e8:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   823ec:	f000 8168 	beq.w	826c0 <_svfprintf_r+0x13c0>
   823f0:	9c25      	ldr	r4, [sp, #148]	; 0x94
   823f2:	9414      	str	r4, [sp, #80]	; 0x50
   823f4:	9c11      	ldr	r4, [sp, #68]	; 0x44
   823f6:	9d14      	ldr	r5, [sp, #80]	; 0x50
   823f8:	42ac      	cmp	r4, r5
   823fa:	f300 8132 	bgt.w	82662 <_svfprintf_r+0x1362>
   823fe:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82402:	f01c 0f01 	tst.w	ip, #1
   82406:	f040 81ad 	bne.w	82764 <_svfprintf_r+0x1464>
   8240a:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
   8240e:	462c      	mov	r4, r5
   82410:	f04f 0867 	mov.w	r8, #103	; 0x67
   82414:	f1bb 0f00 	cmp.w	fp, #0
   82418:	f040 80b2 	bne.w	82580 <_svfprintf_r+0x1280>
   8241c:	9d12      	ldr	r5, [sp, #72]	; 0x48
   8241e:	930b      	str	r3, [sp, #44]	; 0x2c
   82420:	9509      	str	r5, [sp, #36]	; 0x24
   82422:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
   82426:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   8242a:	f7ff b900 	b.w	8162e <_svfprintf_r+0x32e>
   8242e:	980d      	ldr	r0, [sp, #52]	; 0x34
   82430:	2140      	movs	r1, #64	; 0x40
   82432:	f001 fad3 	bl	839dc <_malloc_r>
   82436:	6020      	str	r0, [r4, #0]
   82438:	6120      	str	r0, [r4, #16]
   8243a:	2800      	cmp	r0, #0
   8243c:	f000 81bf 	beq.w	827be <_svfprintf_r+0x14be>
   82440:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
   82444:	2340      	movs	r3, #64	; 0x40
   82446:	f8cc 3014 	str.w	r3, [ip, #20]
   8244a:	f7fe bf6f 	b.w	8132c <_svfprintf_r+0x2c>
   8244e:	980d      	ldr	r0, [sp, #52]	; 0x34
   82450:	990c      	ldr	r1, [sp, #48]	; 0x30
   82452:	aa2b      	add	r2, sp, #172	; 0xac
   82454:	f002 fbac 	bl	84bb0 <__ssprint_r>
   82458:	2800      	cmp	r0, #0
   8245a:	f47f a869 	bne.w	81530 <_svfprintf_r+0x230>
   8245e:	9c25      	ldr	r4, [sp, #148]	; 0x94
   82460:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82464:	ae38      	add	r6, sp, #224	; 0xe0
   82466:	e6fd      	b.n	82264 <_svfprintf_r+0xf64>
   82468:	2406      	movs	r4, #6
   8246a:	940a      	str	r4, [sp, #40]	; 0x28
   8246c:	e75f      	b.n	8232e <_svfprintf_r+0x102e>
   8246e:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82470:	682c      	ldr	r4, [r5, #0]
   82472:	3504      	adds	r5, #4
   82474:	9510      	str	r5, [sp, #64]	; 0x40
   82476:	2500      	movs	r5, #0
   82478:	f7ff b898 	b.w	815ac <_svfprintf_r+0x2ac>
   8247c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82480:	f01c 0f40 	tst.w	ip, #64	; 0x40
   82484:	f000 8087 	beq.w	82596 <_svfprintf_r+0x1296>
   82488:	9c10      	ldr	r4, [sp, #64]	; 0x40
   8248a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   8248c:	6823      	ldr	r3, [r4, #0]
   8248e:	3404      	adds	r4, #4
   82490:	9410      	str	r4, [sp, #64]	; 0x40
   82492:	801d      	strh	r5, [r3, #0]
   82494:	f7fe bf5a 	b.w	8134c <_svfprintf_r+0x4c>
   82498:	980d      	ldr	r0, [sp, #52]	; 0x34
   8249a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8249c:	aa2b      	add	r2, sp, #172	; 0xac
   8249e:	f002 fb87 	bl	84bb0 <__ssprint_r>
   824a2:	2800      	cmp	r0, #0
   824a4:	f47f a844 	bne.w	81530 <_svfprintf_r+0x230>
   824a8:	992d      	ldr	r1, [sp, #180]	; 0xb4
   824aa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   824ac:	aa38      	add	r2, sp, #224	; 0xe0
   824ae:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
   824b2:	3301      	adds	r3, #1
   824b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
   824b6:	448c      	add	ip, r1
   824b8:	2b07      	cmp	r3, #7
   824ba:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   824be:	932c      	str	r3, [sp, #176]	; 0xb0
   824c0:	6017      	str	r7, [r2, #0]
   824c2:	6054      	str	r4, [r2, #4]
   824c4:	f73f ac9c 	bgt.w	81e00 <_svfprintf_r+0xb00>
   824c8:	f102 0608 	add.w	r6, r2, #8
   824cc:	f7ff b98a 	b.w	817e4 <_svfprintf_r+0x4e4>
   824d0:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
   824d4:	f7fe fee4 	bl	812a0 <strlen>
   824d8:	9510      	str	r5, [sp, #64]	; 0x40
   824da:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   824dc:	ea20 7ce0 	bic.w	ip, r0, r0, asr #31
   824e0:	4604      	mov	r4, r0
   824e2:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   824e6:	9514      	str	r5, [sp, #80]	; 0x50
   824e8:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   824ec:	f7ff b89f 	b.w	8162e <_svfprintf_r+0x32e>
   824f0:	980d      	ldr	r0, [sp, #52]	; 0x34
   824f2:	990c      	ldr	r1, [sp, #48]	; 0x30
   824f4:	aa2b      	add	r2, sp, #172	; 0xac
   824f6:	f002 fb5b 	bl	84bb0 <__ssprint_r>
   824fa:	2800      	cmp	r0, #0
   824fc:	f47f a818 	bne.w	81530 <_svfprintf_r+0x230>
   82500:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82504:	ae38      	add	r6, sp, #224	; 0xe0
   82506:	e4d6      	b.n	81eb6 <_svfprintf_r+0xbb6>
   82508:	980d      	ldr	r0, [sp, #52]	; 0x34
   8250a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8250c:	aa2b      	add	r2, sp, #172	; 0xac
   8250e:	f002 fb4f 	bl	84bb0 <__ssprint_r>
   82512:	2800      	cmp	r0, #0
   82514:	f47f a80c 	bne.w	81530 <_svfprintf_r+0x230>
   82518:	9c25      	ldr	r4, [sp, #148]	; 0x94
   8251a:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   8251e:	ae38      	add	r6, sp, #224	; 0xe0
   82520:	e5b0      	b.n	82084 <_svfprintf_r+0xd84>
   82522:	bf00      	nop
   82524:	00085d10 	.word	0x00085d10
   82528:	00085cc0 	.word	0x00085cc0
   8252c:	4621      	mov	r1, r4
   8252e:	465c      	mov	r4, fp
   82530:	3301      	adds	r3, #1
   82532:	4421      	add	r1, r4
   82534:	2b07      	cmp	r3, #7
   82536:	912d      	str	r1, [sp, #180]	; 0xb4
   82538:	932c      	str	r3, [sp, #176]	; 0xb0
   8253a:	6015      	str	r5, [r2, #0]
   8253c:	6054      	str	r4, [r2, #4]
   8253e:	dcab      	bgt.n	82498 <_svfprintf_r+0x1198>
   82540:	3208      	adds	r2, #8
   82542:	e7b4      	b.n	824ae <_svfprintf_r+0x11ae>
   82544:	980d      	ldr	r0, [sp, #52]	; 0x34
   82546:	990c      	ldr	r1, [sp, #48]	; 0x30
   82548:	aa2b      	add	r2, sp, #172	; 0xac
   8254a:	f002 fb31 	bl	84bb0 <__ssprint_r>
   8254e:	2800      	cmp	r0, #0
   82550:	f47e afee 	bne.w	81530 <_svfprintf_r+0x230>
   82554:	9c25      	ldr	r4, [sp, #148]	; 0x94
   82556:	9911      	ldr	r1, [sp, #68]	; 0x44
   82558:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   8255c:	1b0c      	subs	r4, r1, r4
   8255e:	ae38      	add	r6, sp, #224	; 0xe0
   82560:	e5a5      	b.n	820ae <_svfprintf_r+0xdae>
   82562:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82564:	46ba      	mov	sl, r7
   82566:	2c06      	cmp	r4, #6
   82568:	bf28      	it	cs
   8256a:	2406      	movcs	r4, #6
   8256c:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
   82570:	970a      	str	r7, [sp, #40]	; 0x28
   82572:	9714      	str	r7, [sp, #80]	; 0x50
   82574:	9510      	str	r5, [sp, #64]	; 0x40
   82576:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   8257a:	4f97      	ldr	r7, [pc, #604]	; (827d8 <_svfprintf_r+0x14d8>)
   8257c:	f7ff b857 	b.w	8162e <_svfprintf_r+0x32e>
   82580:	9d12      	ldr	r5, [sp, #72]	; 0x48
   82582:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   82586:	9509      	str	r5, [sp, #36]	; 0x24
   82588:	2500      	movs	r5, #0
   8258a:	930b      	str	r3, [sp, #44]	; 0x2c
   8258c:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   82590:	950a      	str	r5, [sp, #40]	; 0x28
   82592:	f7ff b84f 	b.w	81634 <_svfprintf_r+0x334>
   82596:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8259a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   8259c:	f8dc 3000 	ldr.w	r3, [ip]
   825a0:	f10c 0c04 	add.w	ip, ip, #4
   825a4:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   825a8:	601c      	str	r4, [r3, #0]
   825aa:	f7fe becf 	b.w	8134c <_svfprintf_r+0x4c>
   825ae:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   825b2:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   825b6:	f7ff ba99 	b.w	81aec <_svfprintf_r+0x7ec>
   825ba:	9b25      	ldr	r3, [sp, #148]	; 0x94
   825bc:	1cdc      	adds	r4, r3, #3
   825be:	db19      	blt.n	825f4 <_svfprintf_r+0x12f4>
   825c0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   825c2:	429c      	cmp	r4, r3
   825c4:	db16      	blt.n	825f4 <_svfprintf_r+0x12f4>
   825c6:	9314      	str	r3, [sp, #80]	; 0x50
   825c8:	e714      	b.n	823f4 <_svfprintf_r+0x10f4>
   825ca:	4623      	mov	r3, r4
   825cc:	e702      	b.n	823d4 <_svfprintf_r+0x10d4>
   825ce:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
   825d2:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   825d6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   825d8:	9510      	str	r5, [sp, #64]	; 0x40
   825da:	900a      	str	r0, [sp, #40]	; 0x28
   825dc:	9014      	str	r0, [sp, #80]	; 0x50
   825de:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   825e2:	f7ff b824 	b.w	8162e <_svfprintf_r+0x32e>
   825e6:	783b      	ldrb	r3, [r7, #0]
   825e8:	2b30      	cmp	r3, #48	; 0x30
   825ea:	f000 80ad 	beq.w	82748 <_svfprintf_r+0x1448>
   825ee:	9d25      	ldr	r5, [sp, #148]	; 0x94
   825f0:	442c      	add	r4, r5
   825f2:	e6dc      	b.n	823ae <_svfprintf_r+0x10ae>
   825f4:	f1a8 0802 	sub.w	r8, r8, #2
   825f8:	1e59      	subs	r1, r3, #1
   825fa:	2900      	cmp	r1, #0
   825fc:	9125      	str	r1, [sp, #148]	; 0x94
   825fe:	bfba      	itte	lt
   82600:	4249      	neglt	r1, r1
   82602:	232d      	movlt	r3, #45	; 0x2d
   82604:	232b      	movge	r3, #43	; 0x2b
   82606:	2909      	cmp	r1, #9
   82608:	f88d 809c 	strb.w	r8, [sp, #156]	; 0x9c
   8260c:	f88d 309d 	strb.w	r3, [sp, #157]	; 0x9d
   82610:	dc65      	bgt.n	826de <_svfprintf_r+0x13de>
   82612:	2330      	movs	r3, #48	; 0x30
   82614:	3130      	adds	r1, #48	; 0x30
   82616:	f88d 309e 	strb.w	r3, [sp, #158]	; 0x9e
   8261a:	f88d 109f 	strb.w	r1, [sp, #159]	; 0x9f
   8261e:	ab28      	add	r3, sp, #160	; 0xa0
   82620:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82622:	aa27      	add	r2, sp, #156	; 0x9c
   82624:	9c11      	ldr	r4, [sp, #68]	; 0x44
   82626:	1a9a      	subs	r2, r3, r2
   82628:	2d01      	cmp	r5, #1
   8262a:	9219      	str	r2, [sp, #100]	; 0x64
   8262c:	4414      	add	r4, r2
   8262e:	f340 80b7 	ble.w	827a0 <_svfprintf_r+0x14a0>
   82632:	3401      	adds	r4, #1
   82634:	2500      	movs	r5, #0
   82636:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   8263a:	9514      	str	r5, [sp, #80]	; 0x50
   8263c:	e6ea      	b.n	82414 <_svfprintf_r+0x1114>
   8263e:	2400      	movs	r4, #0
   82640:	4681      	mov	r9, r0
   82642:	940a      	str	r4, [sp, #40]	; 0x28
   82644:	f7fe beba 	b.w	813bc <_svfprintf_r+0xbc>
   82648:	980d      	ldr	r0, [sp, #52]	; 0x34
   8264a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8264c:	aa2b      	add	r2, sp, #172	; 0xac
   8264e:	f002 faaf 	bl	84bb0 <__ssprint_r>
   82652:	2800      	cmp	r0, #0
   82654:	f47e af6c 	bne.w	81530 <_svfprintf_r+0x230>
   82658:	9c25      	ldr	r4, [sp, #148]	; 0x94
   8265a:	992d      	ldr	r1, [sp, #180]	; 0xb4
   8265c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8265e:	aa38      	add	r2, sp, #224	; 0xe0
   82660:	e616      	b.n	82290 <_svfprintf_r+0xf90>
   82662:	9c14      	ldr	r4, [sp, #80]	; 0x50
   82664:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82666:	2c00      	cmp	r4, #0
   82668:	bfd4      	ite	le
   8266a:	f1c4 0402 	rsble	r4, r4, #2
   8266e:	2401      	movgt	r4, #1
   82670:	442c      	add	r4, r5
   82672:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82676:	f04f 0867 	mov.w	r8, #103	; 0x67
   8267a:	e6cb      	b.n	82414 <_svfprintf_r+0x1114>
   8267c:	9917      	ldr	r1, [sp, #92]	; 0x5c
   8267e:	9816      	ldr	r0, [sp, #88]	; 0x58
   82680:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
   82684:	9020      	str	r0, [sp, #128]	; 0x80
   82686:	9121      	str	r1, [sp, #132]	; 0x84
   82688:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
   8268c:	e660      	b.n	82350 <_svfprintf_r+0x1050>
   8268e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82690:	2003      	movs	r0, #3
   82692:	a925      	add	r1, sp, #148	; 0x94
   82694:	aa26      	add	r2, sp, #152	; 0x98
   82696:	ab29      	add	r3, sp, #164	; 0xa4
   82698:	9501      	str	r5, [sp, #4]
   8269a:	9000      	str	r0, [sp, #0]
   8269c:	9203      	str	r2, [sp, #12]
   8269e:	9304      	str	r3, [sp, #16]
   826a0:	9102      	str	r1, [sp, #8]
   826a2:	980d      	ldr	r0, [sp, #52]	; 0x34
   826a4:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
   826a8:	f000 f946 	bl	82938 <_dtoa_r>
   826ac:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   826ae:	4607      	mov	r7, r0
   826b0:	e677      	b.n	823a2 <_svfprintf_r+0x10a2>
   826b2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   826b4:	2003      	movs	r0, #3
   826b6:	a925      	add	r1, sp, #148	; 0x94
   826b8:	aa26      	add	r2, sp, #152	; 0x98
   826ba:	ab29      	add	r3, sp, #164	; 0xa4
   826bc:	9401      	str	r4, [sp, #4]
   826be:	e7ec      	b.n	8269a <_svfprintf_r+0x139a>
   826c0:	9d25      	ldr	r5, [sp, #148]	; 0x94
   826c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   826c4:	2d00      	cmp	r5, #0
   826c6:	9514      	str	r5, [sp, #80]	; 0x50
   826c8:	dd63      	ble.n	82792 <_svfprintf_r+0x1492>
   826ca:	bbb4      	cbnz	r4, 8273a <_svfprintf_r+0x143a>
   826cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
   826ce:	07e8      	lsls	r0, r5, #31
   826d0:	d433      	bmi.n	8273a <_svfprintf_r+0x143a>
   826d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
   826d4:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   826d8:	e69c      	b.n	82414 <_svfprintf_r+0x1114>
   826da:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   826dc:	e67a      	b.n	823d4 <_svfprintf_r+0x10d4>
   826de:	f10d 02aa 	add.w	r2, sp, #170	; 0xaa
   826e2:	4d3e      	ldr	r5, [pc, #248]	; (827dc <_svfprintf_r+0x14dc>)
   826e4:	17cb      	asrs	r3, r1, #31
   826e6:	fb85 5001 	smull	r5, r0, r5, r1
   826ea:	ebc3 00a0 	rsb	r0, r3, r0, asr #2
   826ee:	eb00 0380 	add.w	r3, r0, r0, lsl #2
   826f2:	eba1 0143 	sub.w	r1, r1, r3, lsl #1
   826f6:	2809      	cmp	r0, #9
   826f8:	4613      	mov	r3, r2
   826fa:	f101 0230 	add.w	r2, r1, #48	; 0x30
   826fe:	701a      	strb	r2, [r3, #0]
   82700:	4601      	mov	r1, r0
   82702:	f103 32ff 	add.w	r2, r3, #4294967295
   82706:	dcec      	bgt.n	826e2 <_svfprintf_r+0x13e2>
   82708:	f100 0130 	add.w	r1, r0, #48	; 0x30
   8270c:	f10d 04ab 	add.w	r4, sp, #171	; 0xab
   82710:	b2c9      	uxtb	r1, r1
   82712:	4294      	cmp	r4, r2
   82714:	f803 1c01 	strb.w	r1, [r3, #-1]
   82718:	d95a      	bls.n	827d0 <_svfprintf_r+0x14d0>
   8271a:	f10d 009d 	add.w	r0, sp, #157	; 0x9d
   8271e:	461a      	mov	r2, r3
   82720:	e001      	b.n	82726 <_svfprintf_r+0x1426>
   82722:	f812 1b01 	ldrb.w	r1, [r2], #1
   82726:	42a2      	cmp	r2, r4
   82728:	f800 1f01 	strb.w	r1, [r0, #1]!
   8272c:	d1f9      	bne.n	82722 <_svfprintf_r+0x1422>
   8272e:	f50d 7c90 	add.w	ip, sp, #288	; 0x120
   82732:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
   82736:	3bf6      	subs	r3, #246	; 0xf6
   82738:	e772      	b.n	82620 <_svfprintf_r+0x1320>
   8273a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   8273c:	1c6c      	adds	r4, r5, #1
   8273e:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82740:	442c      	add	r4, r5
   82742:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82746:	e665      	b.n	82414 <_svfprintf_r+0x1114>
   82748:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
   8274c:	2200      	movs	r2, #0
   8274e:	2300      	movs	r3, #0
   82750:	f002 ff52 	bl	855f8 <__aeabi_dcmpeq>
   82754:	2800      	cmp	r0, #0
   82756:	f47f af4a 	bne.w	825ee <_svfprintf_r+0x12ee>
   8275a:	f1c5 0501 	rsb	r5, r5, #1
   8275e:	9525      	str	r5, [sp, #148]	; 0x94
   82760:	442c      	add	r4, r5
   82762:	e624      	b.n	823ae <_svfprintf_r+0x10ae>
   82764:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82766:	f04f 0867 	mov.w	r8, #103	; 0x67
   8276a:	1c6c      	adds	r4, r5, #1
   8276c:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82770:	e650      	b.n	82414 <_svfprintf_r+0x1114>
   82772:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82774:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   82778:	682d      	ldr	r5, [r5, #0]
   8277a:	f10c 0304 	add.w	r3, ip, #4
   8277e:	2d00      	cmp	r5, #0
   82780:	f899 8001 	ldrb.w	r8, [r9, #1]
   82784:	950a      	str	r5, [sp, #40]	; 0x28
   82786:	9310      	str	r3, [sp, #64]	; 0x40
   82788:	4681      	mov	r9, r0
   8278a:	f6be ae15 	bge.w	813b8 <_svfprintf_r+0xb8>
   8278e:	f7fe be10 	b.w	813b2 <_svfprintf_r+0xb2>
   82792:	b97c      	cbnz	r4, 827b4 <_svfprintf_r+0x14b4>
   82794:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82796:	07e9      	lsls	r1, r5, #31
   82798:	d40c      	bmi.n	827b4 <_svfprintf_r+0x14b4>
   8279a:	2301      	movs	r3, #1
   8279c:	461c      	mov	r4, r3
   8279e:	e639      	b.n	82414 <_svfprintf_r+0x1114>
   827a0:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   827a4:	f01c 0301 	ands.w	r3, ip, #1
   827a8:	f47f af43 	bne.w	82632 <_svfprintf_r+0x1332>
   827ac:	9314      	str	r3, [sp, #80]	; 0x50
   827ae:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   827b2:	e62f      	b.n	82414 <_svfprintf_r+0x1114>
   827b4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   827b6:	1cac      	adds	r4, r5, #2
   827b8:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   827bc:	e62a      	b.n	82414 <_svfprintf_r+0x1114>
   827be:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   827c0:	230c      	movs	r3, #12
   827c2:	602b      	str	r3, [r5, #0]
   827c4:	f04f 30ff 	mov.w	r0, #4294967295
   827c8:	f7fe beba 	b.w	81540 <_svfprintf_r+0x240>
   827cc:	9b25      	ldr	r3, [sp, #148]	; 0x94
   827ce:	e713      	b.n	825f8 <_svfprintf_r+0x12f8>
   827d0:	f10d 039e 	add.w	r3, sp, #158	; 0x9e
   827d4:	e724      	b.n	82620 <_svfprintf_r+0x1320>
   827d6:	bf00      	nop
   827d8:	00085d08 	.word	0x00085d08
   827dc:	66666667 	.word	0x66666667

000827e0 <register_fini>:
   827e0:	4b02      	ldr	r3, [pc, #8]	; (827ec <register_fini+0xc>)
   827e2:	b113      	cbz	r3, 827ea <register_fini+0xa>
   827e4:	4802      	ldr	r0, [pc, #8]	; (827f0 <register_fini+0x10>)
   827e6:	f000 b805 	b.w	827f4 <atexit>
   827ea:	4770      	bx	lr
   827ec:	00000000 	.word	0x00000000
   827f0:	00083771 	.word	0x00083771

000827f4 <atexit>:
   827f4:	4601      	mov	r1, r0
   827f6:	2000      	movs	r0, #0
   827f8:	4602      	mov	r2, r0
   827fa:	4603      	mov	r3, r0
   827fc:	f002 ba58 	b.w	84cb0 <__register_exitproc>

00082800 <quorem>:
   82800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82804:	6903      	ldr	r3, [r0, #16]
   82806:	690d      	ldr	r5, [r1, #16]
   82808:	b083      	sub	sp, #12
   8280a:	429d      	cmp	r5, r3
   8280c:	4683      	mov	fp, r0
   8280e:	f300 808c 	bgt.w	8292a <quorem+0x12a>
   82812:	3d01      	subs	r5, #1
   82814:	f101 0414 	add.w	r4, r1, #20
   82818:	f100 0a14 	add.w	sl, r0, #20
   8281c:	f854 2025 	ldr.w	r2, [r4, r5, lsl #2]
   82820:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
   82824:	3201      	adds	r2, #1
   82826:	fbb3 f8f2 	udiv	r8, r3, r2
   8282a:	00aa      	lsls	r2, r5, #2
   8282c:	4691      	mov	r9, r2
   8282e:	9200      	str	r2, [sp, #0]
   82830:	4452      	add	r2, sl
   82832:	44a1      	add	r9, r4
   82834:	9201      	str	r2, [sp, #4]
   82836:	f1b8 0f00 	cmp.w	r8, #0
   8283a:	d03e      	beq.n	828ba <quorem+0xba>
   8283c:	2600      	movs	r6, #0
   8283e:	4630      	mov	r0, r6
   82840:	4622      	mov	r2, r4
   82842:	4653      	mov	r3, sl
   82844:	468c      	mov	ip, r1
   82846:	f852 7b04 	ldr.w	r7, [r2], #4
   8284a:	6819      	ldr	r1, [r3, #0]
   8284c:	fa1f fe87 	uxth.w	lr, r7
   82850:	0c3f      	lsrs	r7, r7, #16
   82852:	fb0e 6e08 	mla	lr, lr, r8, r6
   82856:	fb07 f608 	mul.w	r6, r7, r8
   8285a:	eb06 461e 	add.w	r6, r6, lr, lsr #16
   8285e:	fa1f fe8e 	uxth.w	lr, lr
   82862:	ebce 0e00 	rsb	lr, lr, r0
   82866:	b28f      	uxth	r7, r1
   82868:	b2b0      	uxth	r0, r6
   8286a:	4477      	add	r7, lr
   8286c:	ebc0 4011 	rsb	r0, r0, r1, lsr #16
   82870:	eb00 4027 	add.w	r0, r0, r7, asr #16
   82874:	b2bf      	uxth	r7, r7
   82876:	ea47 4700 	orr.w	r7, r7, r0, lsl #16
   8287a:	4591      	cmp	r9, r2
   8287c:	f843 7b04 	str.w	r7, [r3], #4
   82880:	ea4f 4020 	mov.w	r0, r0, asr #16
   82884:	ea4f 4616 	mov.w	r6, r6, lsr #16
   82888:	d2dd      	bcs.n	82846 <quorem+0x46>
   8288a:	9a00      	ldr	r2, [sp, #0]
   8288c:	4661      	mov	r1, ip
   8288e:	f85a 3002 	ldr.w	r3, [sl, r2]
   82892:	b993      	cbnz	r3, 828ba <quorem+0xba>
   82894:	9a01      	ldr	r2, [sp, #4]
   82896:	1f13      	subs	r3, r2, #4
   82898:	459a      	cmp	sl, r3
   8289a:	d20c      	bcs.n	828b6 <quorem+0xb6>
   8289c:	f852 3c04 	ldr.w	r3, [r2, #-4]
   828a0:	b94b      	cbnz	r3, 828b6 <quorem+0xb6>
   828a2:	f1a2 0308 	sub.w	r3, r2, #8
   828a6:	e002      	b.n	828ae <quorem+0xae>
   828a8:	681a      	ldr	r2, [r3, #0]
   828aa:	3b04      	subs	r3, #4
   828ac:	b91a      	cbnz	r2, 828b6 <quorem+0xb6>
   828ae:	459a      	cmp	sl, r3
   828b0:	f105 35ff 	add.w	r5, r5, #4294967295
   828b4:	d3f8      	bcc.n	828a8 <quorem+0xa8>
   828b6:	f8cb 5010 	str.w	r5, [fp, #16]
   828ba:	4658      	mov	r0, fp
   828bc:	f001 fe70 	bl	845a0 <__mcmp>
   828c0:	2800      	cmp	r0, #0
   828c2:	db2e      	blt.n	82922 <quorem+0x122>
   828c4:	f108 0801 	add.w	r8, r8, #1
   828c8:	4653      	mov	r3, sl
   828ca:	2200      	movs	r2, #0
   828cc:	f854 6b04 	ldr.w	r6, [r4], #4
   828d0:	6818      	ldr	r0, [r3, #0]
   828d2:	b2b1      	uxth	r1, r6
   828d4:	1a51      	subs	r1, r2, r1
   828d6:	b287      	uxth	r7, r0
   828d8:	0c36      	lsrs	r6, r6, #16
   828da:	4439      	add	r1, r7
   828dc:	ebc6 4010 	rsb	r0, r6, r0, lsr #16
   828e0:	eb00 4221 	add.w	r2, r0, r1, asr #16
   828e4:	b289      	uxth	r1, r1
   828e6:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
   828ea:	45a1      	cmp	r9, r4
   828ec:	f843 1b04 	str.w	r1, [r3], #4
   828f0:	ea4f 4222 	mov.w	r2, r2, asr #16
   828f4:	d2ea      	bcs.n	828cc <quorem+0xcc>
   828f6:	f85a 2025 	ldr.w	r2, [sl, r5, lsl #2]
   828fa:	eb0a 0385 	add.w	r3, sl, r5, lsl #2
   828fe:	b982      	cbnz	r2, 82922 <quorem+0x122>
   82900:	1f1a      	subs	r2, r3, #4
   82902:	4592      	cmp	sl, r2
   82904:	d20b      	bcs.n	8291e <quorem+0x11e>
   82906:	f853 2c04 	ldr.w	r2, [r3, #-4]
   8290a:	b942      	cbnz	r2, 8291e <quorem+0x11e>
   8290c:	3b08      	subs	r3, #8
   8290e:	e002      	b.n	82916 <quorem+0x116>
   82910:	681a      	ldr	r2, [r3, #0]
   82912:	3b04      	subs	r3, #4
   82914:	b91a      	cbnz	r2, 8291e <quorem+0x11e>
   82916:	459a      	cmp	sl, r3
   82918:	f105 35ff 	add.w	r5, r5, #4294967295
   8291c:	d3f8      	bcc.n	82910 <quorem+0x110>
   8291e:	f8cb 5010 	str.w	r5, [fp, #16]
   82922:	4640      	mov	r0, r8
   82924:	b003      	add	sp, #12
   82926:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8292a:	2000      	movs	r0, #0
   8292c:	b003      	add	sp, #12
   8292e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82932:	bf00      	nop
   82934:	0000      	movs	r0, r0
	...

00082938 <_dtoa_r>:
   82938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8293c:	6c01      	ldr	r1, [r0, #64]	; 0x40
   8293e:	b09b      	sub	sp, #108	; 0x6c
   82940:	4604      	mov	r4, r0
   82942:	4692      	mov	sl, r2
   82944:	469b      	mov	fp, r3
   82946:	9d27      	ldr	r5, [sp, #156]	; 0x9c
   82948:	b141      	cbz	r1, 8295c <_dtoa_r+0x24>
   8294a:	6c43      	ldr	r3, [r0, #68]	; 0x44
   8294c:	2201      	movs	r2, #1
   8294e:	409a      	lsls	r2, r3
   82950:	604b      	str	r3, [r1, #4]
   82952:	608a      	str	r2, [r1, #8]
   82954:	f001 fc2e 	bl	841b4 <_Bfree>
   82958:	2300      	movs	r3, #0
   8295a:	6423      	str	r3, [r4, #64]	; 0x40
   8295c:	f1bb 0f00 	cmp.w	fp, #0
   82960:	46d9      	mov	r9, fp
   82962:	db33      	blt.n	829cc <_dtoa_r+0x94>
   82964:	2300      	movs	r3, #0
   82966:	602b      	str	r3, [r5, #0]
   82968:	4ba5      	ldr	r3, [pc, #660]	; (82c00 <_dtoa_r+0x2c8>)
   8296a:	461a      	mov	r2, r3
   8296c:	ea09 0303 	and.w	r3, r9, r3
   82970:	4293      	cmp	r3, r2
   82972:	d014      	beq.n	8299e <_dtoa_r+0x66>
   82974:	4650      	mov	r0, sl
   82976:	4659      	mov	r1, fp
   82978:	2200      	movs	r2, #0
   8297a:	2300      	movs	r3, #0
   8297c:	f002 fe3c 	bl	855f8 <__aeabi_dcmpeq>
   82980:	4680      	mov	r8, r0
   82982:	b348      	cbz	r0, 829d8 <_dtoa_r+0xa0>
   82984:	9e26      	ldr	r6, [sp, #152]	; 0x98
   82986:	9d28      	ldr	r5, [sp, #160]	; 0xa0
   82988:	2301      	movs	r3, #1
   8298a:	6033      	str	r3, [r6, #0]
   8298c:	2d00      	cmp	r5, #0
   8298e:	f000 80ca 	beq.w	82b26 <_dtoa_r+0x1ee>
   82992:	489c      	ldr	r0, [pc, #624]	; (82c04 <_dtoa_r+0x2cc>)
   82994:	6028      	str	r0, [r5, #0]
   82996:	3801      	subs	r0, #1
   82998:	b01b      	add	sp, #108	; 0x6c
   8299a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8299e:	9d26      	ldr	r5, [sp, #152]	; 0x98
   829a0:	f242 730f 	movw	r3, #9999	; 0x270f
   829a4:	602b      	str	r3, [r5, #0]
   829a6:	f1ba 0f00 	cmp.w	sl, #0
   829aa:	f000 80a5 	beq.w	82af8 <_dtoa_r+0x1c0>
   829ae:	4896      	ldr	r0, [pc, #600]	; (82c08 <_dtoa_r+0x2d0>)
   829b0:	9e28      	ldr	r6, [sp, #160]	; 0xa0
   829b2:	2e00      	cmp	r6, #0
   829b4:	d0f0      	beq.n	82998 <_dtoa_r+0x60>
   829b6:	78c3      	ldrb	r3, [r0, #3]
   829b8:	2b00      	cmp	r3, #0
   829ba:	f000 80b6 	beq.w	82b2a <_dtoa_r+0x1f2>
   829be:	f100 0308 	add.w	r3, r0, #8
   829c2:	9d28      	ldr	r5, [sp, #160]	; 0xa0
   829c4:	602b      	str	r3, [r5, #0]
   829c6:	b01b      	add	sp, #108	; 0x6c
   829c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   829cc:	2301      	movs	r3, #1
   829ce:	f02b 4900 	bic.w	r9, fp, #2147483648	; 0x80000000
   829d2:	602b      	str	r3, [r5, #0]
   829d4:	46cb      	mov	fp, r9
   829d6:	e7c7      	b.n	82968 <_dtoa_r+0x30>
   829d8:	aa19      	add	r2, sp, #100	; 0x64
   829da:	ab18      	add	r3, sp, #96	; 0x60
   829dc:	e88d 000c 	stmia.w	sp, {r2, r3}
   829e0:	4620      	mov	r0, r4
   829e2:	4652      	mov	r2, sl
   829e4:	465b      	mov	r3, fp
   829e6:	f001 fe6b 	bl	846c0 <__d2b>
   829ea:	ea5f 5519 	movs.w	r5, r9, lsr #20
   829ee:	900a      	str	r0, [sp, #40]	; 0x28
   829f0:	f040 808b 	bne.w	82b0a <_dtoa_r+0x1d2>
   829f4:	9f18      	ldr	r7, [sp, #96]	; 0x60
   829f6:	9d19      	ldr	r5, [sp, #100]	; 0x64
   829f8:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   829fc:	443d      	add	r5, r7
   829fe:	429d      	cmp	r5, r3
   82a00:	f2c0 8295 	blt.w	82f2e <_dtoa_r+0x5f6>
   82a04:	331f      	adds	r3, #31
   82a06:	f205 4212 	addw	r2, r5, #1042	; 0x412
   82a0a:	1b5b      	subs	r3, r3, r5
   82a0c:	fa09 f303 	lsl.w	r3, r9, r3
   82a10:	fa2a f202 	lsr.w	r2, sl, r2
   82a14:	ea43 0002 	orr.w	r0, r3, r2
   82a18:	f002 fb10 	bl	8503c <__aeabi_ui2d>
   82a1c:	2601      	movs	r6, #1
   82a1e:	3d01      	subs	r5, #1
   82a20:	46b8      	mov	r8, r7
   82a22:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   82a26:	9616      	str	r6, [sp, #88]	; 0x58
   82a28:	2200      	movs	r2, #0
   82a2a:	4b78      	ldr	r3, [pc, #480]	; (82c0c <_dtoa_r+0x2d4>)
   82a2c:	f002 f9c8 	bl	84dc0 <__aeabi_dsub>
   82a30:	a36d      	add	r3, pc, #436	; (adr r3, 82be8 <_dtoa_r+0x2b0>)
   82a32:	e9d3 2300 	ldrd	r2, r3, [r3]
   82a36:	f002 fb77 	bl	85128 <__aeabi_dmul>
   82a3a:	a36d      	add	r3, pc, #436	; (adr r3, 82bf0 <_dtoa_r+0x2b8>)
   82a3c:	e9d3 2300 	ldrd	r2, r3, [r3]
   82a40:	f002 f9c0 	bl	84dc4 <__adddf3>
   82a44:	4606      	mov	r6, r0
   82a46:	4628      	mov	r0, r5
   82a48:	460f      	mov	r7, r1
   82a4a:	f002 fb07 	bl	8505c <__aeabi_i2d>
   82a4e:	a36a      	add	r3, pc, #424	; (adr r3, 82bf8 <_dtoa_r+0x2c0>)
   82a50:	e9d3 2300 	ldrd	r2, r3, [r3]
   82a54:	f002 fb68 	bl	85128 <__aeabi_dmul>
   82a58:	4602      	mov	r2, r0
   82a5a:	460b      	mov	r3, r1
   82a5c:	4630      	mov	r0, r6
   82a5e:	4639      	mov	r1, r7
   82a60:	f002 f9b0 	bl	84dc4 <__adddf3>
   82a64:	4606      	mov	r6, r0
   82a66:	460f      	mov	r7, r1
   82a68:	f002 fdf8 	bl	8565c <__aeabi_d2iz>
   82a6c:	4639      	mov	r1, r7
   82a6e:	9007      	str	r0, [sp, #28]
   82a70:	2200      	movs	r2, #0
   82a72:	4630      	mov	r0, r6
   82a74:	2300      	movs	r3, #0
   82a76:	f002 fdc9 	bl	8560c <__aeabi_dcmplt>
   82a7a:	2800      	cmp	r0, #0
   82a7c:	f040 8229 	bne.w	82ed2 <_dtoa_r+0x59a>
   82a80:	9e07      	ldr	r6, [sp, #28]
   82a82:	2e16      	cmp	r6, #22
   82a84:	f200 8222 	bhi.w	82ecc <_dtoa_r+0x594>
   82a88:	4961      	ldr	r1, [pc, #388]	; (82c10 <_dtoa_r+0x2d8>)
   82a8a:	4652      	mov	r2, sl
   82a8c:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
   82a90:	465b      	mov	r3, fp
   82a92:	e9d1 0100 	ldrd	r0, r1, [r1]
   82a96:	f002 fdd7 	bl	85648 <__aeabi_dcmpgt>
   82a9a:	2800      	cmp	r0, #0
   82a9c:	f000 824c 	beq.w	82f38 <_dtoa_r+0x600>
   82aa0:	3e01      	subs	r6, #1
   82aa2:	9607      	str	r6, [sp, #28]
   82aa4:	2600      	movs	r6, #0
   82aa6:	960e      	str	r6, [sp, #56]	; 0x38
   82aa8:	ebc5 0508 	rsb	r5, r5, r8
   82aac:	3d01      	subs	r5, #1
   82aae:	9506      	str	r5, [sp, #24]
   82ab0:	f100 8226 	bmi.w	82f00 <_dtoa_r+0x5c8>
   82ab4:	2500      	movs	r5, #0
   82ab6:	9508      	str	r5, [sp, #32]
   82ab8:	9e07      	ldr	r6, [sp, #28]
   82aba:	2e00      	cmp	r6, #0
   82abc:	f2c0 8217 	blt.w	82eee <_dtoa_r+0x5b6>
   82ac0:	9d06      	ldr	r5, [sp, #24]
   82ac2:	960d      	str	r6, [sp, #52]	; 0x34
   82ac4:	4435      	add	r5, r6
   82ac6:	2600      	movs	r6, #0
   82ac8:	9506      	str	r5, [sp, #24]
   82aca:	960c      	str	r6, [sp, #48]	; 0x30
   82acc:	9d24      	ldr	r5, [sp, #144]	; 0x90
   82ace:	2d09      	cmp	r5, #9
   82ad0:	d82d      	bhi.n	82b2e <_dtoa_r+0x1f6>
   82ad2:	2d05      	cmp	r5, #5
   82ad4:	bfc4      	itt	gt
   82ad6:	3d04      	subgt	r5, #4
   82ad8:	9524      	strgt	r5, [sp, #144]	; 0x90
   82ada:	9e24      	ldr	r6, [sp, #144]	; 0x90
   82adc:	bfc8      	it	gt
   82ade:	2500      	movgt	r5, #0
   82ae0:	f1a6 0302 	sub.w	r3, r6, #2
   82ae4:	bfd8      	it	le
   82ae6:	2501      	movle	r5, #1
   82ae8:	2b03      	cmp	r3, #3
   82aea:	d822      	bhi.n	82b32 <_dtoa_r+0x1fa>
   82aec:	e8df f013 	tbh	[pc, r3, lsl #1]
   82af0:	029e03b7 	.word	0x029e03b7
   82af4:	049a03c0 	.word	0x049a03c0
   82af8:	4a46      	ldr	r2, [pc, #280]	; (82c14 <_dtoa_r+0x2dc>)
   82afa:	4b43      	ldr	r3, [pc, #268]	; (82c08 <_dtoa_r+0x2d0>)
   82afc:	f3c9 0013 	ubfx	r0, r9, #0, #20
   82b00:	2800      	cmp	r0, #0
   82b02:	bf0c      	ite	eq
   82b04:	4610      	moveq	r0, r2
   82b06:	4618      	movne	r0, r3
   82b08:	e752      	b.n	829b0 <_dtoa_r+0x78>
   82b0a:	f3cb 0313 	ubfx	r3, fp, #0, #20
   82b0e:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   82b12:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
   82b16:	4650      	mov	r0, sl
   82b18:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   82b1c:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   82b20:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
   82b24:	e780      	b.n	82a28 <_dtoa_r+0xf0>
   82b26:	483c      	ldr	r0, [pc, #240]	; (82c18 <_dtoa_r+0x2e0>)
   82b28:	e736      	b.n	82998 <_dtoa_r+0x60>
   82b2a:	1cc3      	adds	r3, r0, #3
   82b2c:	e749      	b.n	829c2 <_dtoa_r+0x8a>
   82b2e:	2500      	movs	r5, #0
   82b30:	9524      	str	r5, [sp, #144]	; 0x90
   82b32:	2500      	movs	r5, #0
   82b34:	6465      	str	r5, [r4, #68]	; 0x44
   82b36:	4629      	mov	r1, r5
   82b38:	4620      	mov	r0, r4
   82b3a:	f001 fb15 	bl	84168 <_Balloc>
   82b3e:	f04f 39ff 	mov.w	r9, #4294967295
   82b42:	2601      	movs	r6, #1
   82b44:	9009      	str	r0, [sp, #36]	; 0x24
   82b46:	9525      	str	r5, [sp, #148]	; 0x94
   82b48:	6420      	str	r0, [r4, #64]	; 0x40
   82b4a:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   82b4e:	960b      	str	r6, [sp, #44]	; 0x2c
   82b50:	9b19      	ldr	r3, [sp, #100]	; 0x64
   82b52:	2b00      	cmp	r3, #0
   82b54:	f2c0 80d2 	blt.w	82cfc <_dtoa_r+0x3c4>
   82b58:	9e07      	ldr	r6, [sp, #28]
   82b5a:	2e0e      	cmp	r6, #14
   82b5c:	f300 80ce 	bgt.w	82cfc <_dtoa_r+0x3c4>
   82b60:	4b2b      	ldr	r3, [pc, #172]	; (82c10 <_dtoa_r+0x2d8>)
   82b62:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
   82b66:	e9d3 0100 	ldrd	r0, r1, [r3]
   82b6a:	e9cd 0104 	strd	r0, r1, [sp, #16]
   82b6e:	9925      	ldr	r1, [sp, #148]	; 0x94
   82b70:	2900      	cmp	r1, #0
   82b72:	f2c0 8380 	blt.w	83276 <_dtoa_r+0x93e>
   82b76:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   82b7a:	4659      	mov	r1, fp
   82b7c:	4650      	mov	r0, sl
   82b7e:	f002 fbfd 	bl	8537c <__aeabi_ddiv>
   82b82:	f002 fd6b 	bl	8565c <__aeabi_d2iz>
   82b86:	4605      	mov	r5, r0
   82b88:	f002 fa68 	bl	8505c <__aeabi_i2d>
   82b8c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   82b90:	f002 faca 	bl	85128 <__aeabi_dmul>
   82b94:	4602      	mov	r2, r0
   82b96:	460b      	mov	r3, r1
   82b98:	4650      	mov	r0, sl
   82b9a:	4659      	mov	r1, fp
   82b9c:	f002 f910 	bl	84dc0 <__aeabi_dsub>
   82ba0:	9a09      	ldr	r2, [sp, #36]	; 0x24
   82ba2:	f105 0330 	add.w	r3, r5, #48	; 0x30
   82ba6:	f1b9 0f01 	cmp.w	r9, #1
   82baa:	4606      	mov	r6, r0
   82bac:	460f      	mov	r7, r1
   82bae:	7013      	strb	r3, [r2, #0]
   82bb0:	f102 0b01 	add.w	fp, r2, #1
   82bb4:	d064      	beq.n	82c80 <_dtoa_r+0x348>
   82bb6:	2200      	movs	r2, #0
   82bb8:	4b18      	ldr	r3, [pc, #96]	; (82c1c <_dtoa_r+0x2e4>)
   82bba:	f002 fab5 	bl	85128 <__aeabi_dmul>
   82bbe:	2200      	movs	r2, #0
   82bc0:	2300      	movs	r3, #0
   82bc2:	4606      	mov	r6, r0
   82bc4:	460f      	mov	r7, r1
   82bc6:	f002 fd17 	bl	855f8 <__aeabi_dcmpeq>
   82bca:	2800      	cmp	r0, #0
   82bcc:	f040 8081 	bne.w	82cd2 <_dtoa_r+0x39a>
   82bd0:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   82bd4:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82bd6:	44c8      	add	r8, r9
   82bd8:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
   82bdc:	f105 0902 	add.w	r9, r5, #2
   82be0:	9403      	str	r4, [sp, #12]
   82be2:	e028      	b.n	82c36 <_dtoa_r+0x2fe>
   82be4:	f3af 8000 	nop.w
   82be8:	636f4361 	.word	0x636f4361
   82bec:	3fd287a7 	.word	0x3fd287a7
   82bf0:	8b60c8b3 	.word	0x8b60c8b3
   82bf4:	3fc68a28 	.word	0x3fc68a28
   82bf8:	509f79fb 	.word	0x509f79fb
   82bfc:	3fd34413 	.word	0x3fd34413
   82c00:	7ff00000 	.word	0x7ff00000
   82c04:	00085d11 	.word	0x00085d11
   82c08:	00085d30 	.word	0x00085d30
   82c0c:	3ff80000 	.word	0x3ff80000
   82c10:	00085d40 	.word	0x00085d40
   82c14:	00085d24 	.word	0x00085d24
   82c18:	00085d10 	.word	0x00085d10
   82c1c:	40240000 	.word	0x40240000
   82c20:	f002 fa82 	bl	85128 <__aeabi_dmul>
   82c24:	2200      	movs	r2, #0
   82c26:	2300      	movs	r3, #0
   82c28:	4606      	mov	r6, r0
   82c2a:	460f      	mov	r7, r1
   82c2c:	f002 fce4 	bl	855f8 <__aeabi_dcmpeq>
   82c30:	2800      	cmp	r0, #0
   82c32:	f040 83c1 	bne.w	833b8 <_dtoa_r+0xa80>
   82c36:	4652      	mov	r2, sl
   82c38:	465b      	mov	r3, fp
   82c3a:	4630      	mov	r0, r6
   82c3c:	4639      	mov	r1, r7
   82c3e:	f002 fb9d 	bl	8537c <__aeabi_ddiv>
   82c42:	f002 fd0b 	bl	8565c <__aeabi_d2iz>
   82c46:	4605      	mov	r5, r0
   82c48:	f002 fa08 	bl	8505c <__aeabi_i2d>
   82c4c:	4652      	mov	r2, sl
   82c4e:	465b      	mov	r3, fp
   82c50:	f002 fa6a 	bl	85128 <__aeabi_dmul>
   82c54:	4602      	mov	r2, r0
   82c56:	460b      	mov	r3, r1
   82c58:	4630      	mov	r0, r6
   82c5a:	4639      	mov	r1, r7
   82c5c:	f002 f8b0 	bl	84dc0 <__aeabi_dsub>
   82c60:	f105 0e30 	add.w	lr, r5, #48	; 0x30
   82c64:	45c1      	cmp	r9, r8
   82c66:	f809 ec01 	strb.w	lr, [r9, #-1]
   82c6a:	464c      	mov	r4, r9
   82c6c:	4606      	mov	r6, r0
   82c6e:	460f      	mov	r7, r1
   82c70:	f04f 0200 	mov.w	r2, #0
   82c74:	4ba7      	ldr	r3, [pc, #668]	; (82f14 <_dtoa_r+0x5dc>)
   82c76:	f109 0901 	add.w	r9, r9, #1
   82c7a:	d1d1      	bne.n	82c20 <_dtoa_r+0x2e8>
   82c7c:	46a3      	mov	fp, r4
   82c7e:	9c03      	ldr	r4, [sp, #12]
   82c80:	4632      	mov	r2, r6
   82c82:	463b      	mov	r3, r7
   82c84:	4630      	mov	r0, r6
   82c86:	4639      	mov	r1, r7
   82c88:	f002 f89c 	bl	84dc4 <__adddf3>
   82c8c:	4606      	mov	r6, r0
   82c8e:	460f      	mov	r7, r1
   82c90:	4632      	mov	r2, r6
   82c92:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82c96:	463b      	mov	r3, r7
   82c98:	f002 fcb8 	bl	8560c <__aeabi_dcmplt>
   82c9c:	b940      	cbnz	r0, 82cb0 <_dtoa_r+0x378>
   82c9e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82ca2:	4632      	mov	r2, r6
   82ca4:	463b      	mov	r3, r7
   82ca6:	f002 fca7 	bl	855f8 <__aeabi_dcmpeq>
   82caa:	b190      	cbz	r0, 82cd2 <_dtoa_r+0x39a>
   82cac:	07eb      	lsls	r3, r5, #31
   82cae:	d510      	bpl.n	82cd2 <_dtoa_r+0x39a>
   82cb0:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
   82cb4:	9a09      	ldr	r2, [sp, #36]	; 0x24
   82cb6:	e005      	b.n	82cc4 <_dtoa_r+0x38c>
   82cb8:	429a      	cmp	r2, r3
   82cba:	f000 8429 	beq.w	83510 <_dtoa_r+0xbd8>
   82cbe:	f813 5c01 	ldrb.w	r5, [r3, #-1]
   82cc2:	469b      	mov	fp, r3
   82cc4:	2d39      	cmp	r5, #57	; 0x39
   82cc6:	f10b 33ff 	add.w	r3, fp, #4294967295
   82cca:	d0f5      	beq.n	82cb8 <_dtoa_r+0x380>
   82ccc:	1c6a      	adds	r2, r5, #1
   82cce:	b2d2      	uxtb	r2, r2
   82cd0:	701a      	strb	r2, [r3, #0]
   82cd2:	4620      	mov	r0, r4
   82cd4:	990a      	ldr	r1, [sp, #40]	; 0x28
   82cd6:	f001 fa6d 	bl	841b4 <_Bfree>
   82cda:	9e07      	ldr	r6, [sp, #28]
   82cdc:	9d26      	ldr	r5, [sp, #152]	; 0x98
   82cde:	1c73      	adds	r3, r6, #1
   82ce0:	9e28      	ldr	r6, [sp, #160]	; 0xa0
   82ce2:	2200      	movs	r2, #0
   82ce4:	f88b 2000 	strb.w	r2, [fp]
   82ce8:	602b      	str	r3, [r5, #0]
   82cea:	2e00      	cmp	r6, #0
   82cec:	f000 8325 	beq.w	8333a <_dtoa_r+0xa02>
   82cf0:	9809      	ldr	r0, [sp, #36]	; 0x24
   82cf2:	f8c6 b000 	str.w	fp, [r6]
   82cf6:	b01b      	add	sp, #108	; 0x6c
   82cf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82cfc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82cfe:	2d00      	cmp	r5, #0
   82d00:	f000 8103 	beq.w	82f0a <_dtoa_r+0x5d2>
   82d04:	9e24      	ldr	r6, [sp, #144]	; 0x90
   82d06:	2e01      	cmp	r6, #1
   82d08:	f340 82dc 	ble.w	832c4 <_dtoa_r+0x98c>
   82d0c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   82d0e:	f109 37ff 	add.w	r7, r9, #4294967295
   82d12:	42be      	cmp	r6, r7
   82d14:	f2c0 8389 	blt.w	8342a <_dtoa_r+0xaf2>
   82d18:	1bf7      	subs	r7, r6, r7
   82d1a:	f1b9 0f00 	cmp.w	r9, #0
   82d1e:	f2c0 8487 	blt.w	83630 <_dtoa_r+0xcf8>
   82d22:	9d08      	ldr	r5, [sp, #32]
   82d24:	464b      	mov	r3, r9
   82d26:	9e08      	ldr	r6, [sp, #32]
   82d28:	4620      	mov	r0, r4
   82d2a:	441e      	add	r6, r3
   82d2c:	9608      	str	r6, [sp, #32]
   82d2e:	9e06      	ldr	r6, [sp, #24]
   82d30:	2101      	movs	r1, #1
   82d32:	441e      	add	r6, r3
   82d34:	9606      	str	r6, [sp, #24]
   82d36:	f001 fadf 	bl	842f8 <__i2b>
   82d3a:	4606      	mov	r6, r0
   82d3c:	b165      	cbz	r5, 82d58 <_dtoa_r+0x420>
   82d3e:	9806      	ldr	r0, [sp, #24]
   82d40:	2800      	cmp	r0, #0
   82d42:	dd09      	ble.n	82d58 <_dtoa_r+0x420>
   82d44:	4603      	mov	r3, r0
   82d46:	9908      	ldr	r1, [sp, #32]
   82d48:	42ab      	cmp	r3, r5
   82d4a:	bfa8      	it	ge
   82d4c:	462b      	movge	r3, r5
   82d4e:	1ac9      	subs	r1, r1, r3
   82d50:	1ac0      	subs	r0, r0, r3
   82d52:	9108      	str	r1, [sp, #32]
   82d54:	1aed      	subs	r5, r5, r3
   82d56:	9006      	str	r0, [sp, #24]
   82d58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   82d5a:	2a00      	cmp	r2, #0
   82d5c:	dd1d      	ble.n	82d9a <_dtoa_r+0x462>
   82d5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82d60:	2b00      	cmp	r3, #0
   82d62:	f000 8358 	beq.w	83416 <_dtoa_r+0xade>
   82d66:	2f00      	cmp	r7, #0
   82d68:	dd11      	ble.n	82d8e <_dtoa_r+0x456>
   82d6a:	4631      	mov	r1, r6
   82d6c:	463a      	mov	r2, r7
   82d6e:	4620      	mov	r0, r4
   82d70:	f001 fb6a 	bl	84448 <__pow5mult>
   82d74:	4606      	mov	r6, r0
   82d76:	4631      	mov	r1, r6
   82d78:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82d7a:	4620      	mov	r0, r4
   82d7c:	f001 fac6 	bl	8430c <__multiply>
   82d80:	990a      	ldr	r1, [sp, #40]	; 0x28
   82d82:	4680      	mov	r8, r0
   82d84:	4620      	mov	r0, r4
   82d86:	f001 fa15 	bl	841b4 <_Bfree>
   82d8a:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
   82d8e:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
   82d92:	ebbe 0207 	subs.w	r2, lr, r7
   82d96:	f040 828f 	bne.w	832b8 <_dtoa_r+0x980>
   82d9a:	4620      	mov	r0, r4
   82d9c:	2101      	movs	r1, #1
   82d9e:	f001 faab 	bl	842f8 <__i2b>
   82da2:	4680      	mov	r8, r0
   82da4:	980d      	ldr	r0, [sp, #52]	; 0x34
   82da6:	2800      	cmp	r0, #0
   82da8:	dd05      	ble.n	82db6 <_dtoa_r+0x47e>
   82daa:	4641      	mov	r1, r8
   82dac:	4620      	mov	r0, r4
   82dae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   82db0:	f001 fb4a 	bl	84448 <__pow5mult>
   82db4:	4680      	mov	r8, r0
   82db6:	9924      	ldr	r1, [sp, #144]	; 0x90
   82db8:	2901      	cmp	r1, #1
   82dba:	f340 82c1 	ble.w	83340 <_dtoa_r+0xa08>
   82dbe:	2700      	movs	r7, #0
   82dc0:	980d      	ldr	r0, [sp, #52]	; 0x34
   82dc2:	2800      	cmp	r0, #0
   82dc4:	f040 82af 	bne.w	83326 <_dtoa_r+0x9ee>
   82dc8:	2001      	movs	r0, #1
   82dca:	9b06      	ldr	r3, [sp, #24]
   82dcc:	4403      	add	r3, r0
   82dce:	f013 031f 	ands.w	r3, r3, #31
   82dd2:	f000 80a1 	beq.w	82f18 <_dtoa_r+0x5e0>
   82dd6:	f1c3 0220 	rsb	r2, r3, #32
   82dda:	2a04      	cmp	r2, #4
   82ddc:	f340 84b7 	ble.w	8374e <_dtoa_r+0xe16>
   82de0:	9908      	ldr	r1, [sp, #32]
   82de2:	9a06      	ldr	r2, [sp, #24]
   82de4:	f1c3 031c 	rsb	r3, r3, #28
   82de8:	4419      	add	r1, r3
   82dea:	441a      	add	r2, r3
   82dec:	9108      	str	r1, [sp, #32]
   82dee:	441d      	add	r5, r3
   82df0:	9206      	str	r2, [sp, #24]
   82df2:	9908      	ldr	r1, [sp, #32]
   82df4:	2900      	cmp	r1, #0
   82df6:	dd05      	ble.n	82e04 <_dtoa_r+0x4cc>
   82df8:	990a      	ldr	r1, [sp, #40]	; 0x28
   82dfa:	9a08      	ldr	r2, [sp, #32]
   82dfc:	4620      	mov	r0, r4
   82dfe:	f001 fb71 	bl	844e4 <__lshift>
   82e02:	900a      	str	r0, [sp, #40]	; 0x28
   82e04:	9a06      	ldr	r2, [sp, #24]
   82e06:	2a00      	cmp	r2, #0
   82e08:	dd04      	ble.n	82e14 <_dtoa_r+0x4dc>
   82e0a:	4641      	mov	r1, r8
   82e0c:	4620      	mov	r0, r4
   82e0e:	f001 fb69 	bl	844e4 <__lshift>
   82e12:	4680      	mov	r8, r0
   82e14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82e16:	2b00      	cmp	r3, #0
   82e18:	f040 826a 	bne.w	832f0 <_dtoa_r+0x9b8>
   82e1c:	f1b9 0f00 	cmp.w	r9, #0
   82e20:	f340 82a6 	ble.w	83370 <_dtoa_r+0xa38>
   82e24:	980b      	ldr	r0, [sp, #44]	; 0x2c
   82e26:	2800      	cmp	r0, #0
   82e28:	f040 8088 	bne.w	82f3c <_dtoa_r+0x604>
   82e2c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82e2e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   82e30:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   82e34:	e006      	b.n	82e44 <_dtoa_r+0x50c>
   82e36:	4639      	mov	r1, r7
   82e38:	4620      	mov	r0, r4
   82e3a:	220a      	movs	r2, #10
   82e3c:	2300      	movs	r3, #0
   82e3e:	f001 f9c3 	bl	841c8 <__multadd>
   82e42:	4607      	mov	r7, r0
   82e44:	4638      	mov	r0, r7
   82e46:	4641      	mov	r1, r8
   82e48:	f7ff fcda 	bl	82800 <quorem>
   82e4c:	3030      	adds	r0, #48	; 0x30
   82e4e:	f80b 0005 	strb.w	r0, [fp, r5]
   82e52:	3501      	adds	r5, #1
   82e54:	45a9      	cmp	r9, r5
   82e56:	dcee      	bgt.n	82e36 <_dtoa_r+0x4fe>
   82e58:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   82e5c:	4682      	mov	sl, r0
   82e5e:	970a      	str	r7, [sp, #40]	; 0x28
   82e60:	f1b9 0f01 	cmp.w	r9, #1
   82e64:	bfac      	ite	ge
   82e66:	44cb      	addge	fp, r9
   82e68:	f10b 0b01 	addlt.w	fp, fp, #1
   82e6c:	2500      	movs	r5, #0
   82e6e:	990a      	ldr	r1, [sp, #40]	; 0x28
   82e70:	2201      	movs	r2, #1
   82e72:	4620      	mov	r0, r4
   82e74:	f001 fb36 	bl	844e4 <__lshift>
   82e78:	4641      	mov	r1, r8
   82e7a:	900a      	str	r0, [sp, #40]	; 0x28
   82e7c:	f001 fb90 	bl	845a0 <__mcmp>
   82e80:	2800      	cmp	r0, #0
   82e82:	f340 8309 	ble.w	83498 <_dtoa_r+0xb60>
   82e86:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
   82e8a:	9909      	ldr	r1, [sp, #36]	; 0x24
   82e8c:	e005      	b.n	82e9a <_dtoa_r+0x562>
   82e8e:	4299      	cmp	r1, r3
   82e90:	f000 828b 	beq.w	833aa <_dtoa_r+0xa72>
   82e94:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   82e98:	469b      	mov	fp, r3
   82e9a:	2a39      	cmp	r2, #57	; 0x39
   82e9c:	f10b 33ff 	add.w	r3, fp, #4294967295
   82ea0:	d0f5      	beq.n	82e8e <_dtoa_r+0x556>
   82ea2:	3201      	adds	r2, #1
   82ea4:	701a      	strb	r2, [r3, #0]
   82ea6:	4641      	mov	r1, r8
   82ea8:	4620      	mov	r0, r4
   82eaa:	f001 f983 	bl	841b4 <_Bfree>
   82eae:	2e00      	cmp	r6, #0
   82eb0:	f43f af0f 	beq.w	82cd2 <_dtoa_r+0x39a>
   82eb4:	b12d      	cbz	r5, 82ec2 <_dtoa_r+0x58a>
   82eb6:	42b5      	cmp	r5, r6
   82eb8:	d003      	beq.n	82ec2 <_dtoa_r+0x58a>
   82eba:	4629      	mov	r1, r5
   82ebc:	4620      	mov	r0, r4
   82ebe:	f001 f979 	bl	841b4 <_Bfree>
   82ec2:	4631      	mov	r1, r6
   82ec4:	4620      	mov	r0, r4
   82ec6:	f001 f975 	bl	841b4 <_Bfree>
   82eca:	e702      	b.n	82cd2 <_dtoa_r+0x39a>
   82ecc:	2601      	movs	r6, #1
   82ece:	960e      	str	r6, [sp, #56]	; 0x38
   82ed0:	e5ea      	b.n	82aa8 <_dtoa_r+0x170>
   82ed2:	9807      	ldr	r0, [sp, #28]
   82ed4:	f002 f8c2 	bl	8505c <__aeabi_i2d>
   82ed8:	4632      	mov	r2, r6
   82eda:	463b      	mov	r3, r7
   82edc:	f002 fb8c 	bl	855f8 <__aeabi_dcmpeq>
   82ee0:	2800      	cmp	r0, #0
   82ee2:	f47f adcd 	bne.w	82a80 <_dtoa_r+0x148>
   82ee6:	9e07      	ldr	r6, [sp, #28]
   82ee8:	3e01      	subs	r6, #1
   82eea:	9607      	str	r6, [sp, #28]
   82eec:	e5c8      	b.n	82a80 <_dtoa_r+0x148>
   82eee:	9e07      	ldr	r6, [sp, #28]
   82ef0:	9d08      	ldr	r5, [sp, #32]
   82ef2:	1bad      	subs	r5, r5, r6
   82ef4:	9508      	str	r5, [sp, #32]
   82ef6:	4275      	negs	r5, r6
   82ef8:	2600      	movs	r6, #0
   82efa:	950c      	str	r5, [sp, #48]	; 0x30
   82efc:	960d      	str	r6, [sp, #52]	; 0x34
   82efe:	e5e5      	b.n	82acc <_dtoa_r+0x194>
   82f00:	426d      	negs	r5, r5
   82f02:	2600      	movs	r6, #0
   82f04:	9508      	str	r5, [sp, #32]
   82f06:	9606      	str	r6, [sp, #24]
   82f08:	e5d6      	b.n	82ab8 <_dtoa_r+0x180>
   82f0a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   82f0c:	9d08      	ldr	r5, [sp, #32]
   82f0e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
   82f10:	e714      	b.n	82d3c <_dtoa_r+0x404>
   82f12:	bf00      	nop
   82f14:	40240000 	.word	0x40240000
   82f18:	231c      	movs	r3, #28
   82f1a:	f8dd e020 	ldr.w	lr, [sp, #32]
   82f1e:	9806      	ldr	r0, [sp, #24]
   82f20:	449e      	add	lr, r3
   82f22:	4418      	add	r0, r3
   82f24:	f8cd e020 	str.w	lr, [sp, #32]
   82f28:	441d      	add	r5, r3
   82f2a:	9006      	str	r0, [sp, #24]
   82f2c:	e761      	b.n	82df2 <_dtoa_r+0x4ba>
   82f2e:	48a7      	ldr	r0, [pc, #668]	; (831cc <_dtoa_r+0x894>)
   82f30:	1b40      	subs	r0, r0, r5
   82f32:	fa0a f000 	lsl.w	r0, sl, r0
   82f36:	e56f      	b.n	82a18 <_dtoa_r+0xe0>
   82f38:	900e      	str	r0, [sp, #56]	; 0x38
   82f3a:	e5b5      	b.n	82aa8 <_dtoa_r+0x170>
   82f3c:	2d00      	cmp	r5, #0
   82f3e:	dd05      	ble.n	82f4c <_dtoa_r+0x614>
   82f40:	4631      	mov	r1, r6
   82f42:	462a      	mov	r2, r5
   82f44:	4620      	mov	r0, r4
   82f46:	f001 facd 	bl	844e4 <__lshift>
   82f4a:	4606      	mov	r6, r0
   82f4c:	2f00      	cmp	r7, #0
   82f4e:	f040 82e9 	bne.w	83524 <_dtoa_r+0xbec>
   82f52:	4637      	mov	r7, r6
   82f54:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82f56:	9809      	ldr	r0, [sp, #36]	; 0x24
   82f58:	444d      	add	r5, r9
   82f5a:	9508      	str	r5, [sp, #32]
   82f5c:	f00a 0501 	and.w	r5, sl, #1
   82f60:	950b      	str	r5, [sp, #44]	; 0x2c
   82f62:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   82f66:	1c45      	adds	r5, r0, #1
   82f68:	e00a      	b.n	82f80 <_dtoa_r+0x648>
   82f6a:	f001 f92d 	bl	841c8 <__multadd>
   82f6e:	4639      	mov	r1, r7
   82f70:	4606      	mov	r6, r0
   82f72:	220a      	movs	r2, #10
   82f74:	4620      	mov	r0, r4
   82f76:	2300      	movs	r3, #0
   82f78:	f001 f926 	bl	841c8 <__multadd>
   82f7c:	4607      	mov	r7, r0
   82f7e:	3501      	adds	r5, #1
   82f80:	4641      	mov	r1, r8
   82f82:	4648      	mov	r0, r9
   82f84:	f7ff fc3c 	bl	82800 <quorem>
   82f88:	4631      	mov	r1, r6
   82f8a:	4683      	mov	fp, r0
   82f8c:	4648      	mov	r0, r9
   82f8e:	f001 fb07 	bl	845a0 <__mcmp>
   82f92:	4641      	mov	r1, r8
   82f94:	9003      	str	r0, [sp, #12]
   82f96:	463a      	mov	r2, r7
   82f98:	4620      	mov	r0, r4
   82f9a:	f001 fb25 	bl	845e8 <__mdiff>
   82f9e:	68c2      	ldr	r2, [r0, #12]
   82fa0:	1e69      	subs	r1, r5, #1
   82fa2:	4603      	mov	r3, r0
   82fa4:	f10b 0a30 	add.w	sl, fp, #48	; 0x30
   82fa8:	9106      	str	r1, [sp, #24]
   82faa:	2a00      	cmp	r2, #0
   82fac:	f040 8193 	bne.w	832d6 <_dtoa_r+0x99e>
   82fb0:	4619      	mov	r1, r3
   82fb2:	4648      	mov	r0, r9
   82fb4:	9302      	str	r3, [sp, #8]
   82fb6:	f001 faf3 	bl	845a0 <__mcmp>
   82fba:	9b02      	ldr	r3, [sp, #8]
   82fbc:	4602      	mov	r2, r0
   82fbe:	4619      	mov	r1, r3
   82fc0:	4620      	mov	r0, r4
   82fc2:	9202      	str	r2, [sp, #8]
   82fc4:	f001 f8f6 	bl	841b4 <_Bfree>
   82fc8:	9a02      	ldr	r2, [sp, #8]
   82fca:	b92a      	cbnz	r2, 82fd8 <_dtoa_r+0x6a0>
   82fcc:	9b24      	ldr	r3, [sp, #144]	; 0x90
   82fce:	b91b      	cbnz	r3, 82fd8 <_dtoa_r+0x6a0>
   82fd0:	980b      	ldr	r0, [sp, #44]	; 0x2c
   82fd2:	2800      	cmp	r0, #0
   82fd4:	f000 8393 	beq.w	836fe <_dtoa_r+0xdc6>
   82fd8:	9b03      	ldr	r3, [sp, #12]
   82fda:	2b00      	cmp	r3, #0
   82fdc:	f2c0 8234 	blt.w	83448 <_dtoa_r+0xb10>
   82fe0:	d105      	bne.n	82fee <_dtoa_r+0x6b6>
   82fe2:	9824      	ldr	r0, [sp, #144]	; 0x90
   82fe4:	b918      	cbnz	r0, 82fee <_dtoa_r+0x6b6>
   82fe6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82fe8:	2900      	cmp	r1, #0
   82fea:	f000 822d 	beq.w	83448 <_dtoa_r+0xb10>
   82fee:	2a00      	cmp	r2, #0
   82ff0:	f300 82ac 	bgt.w	8354c <_dtoa_r+0xc14>
   82ff4:	f8dd e020 	ldr.w	lr, [sp, #32]
   82ff8:	f805 ac01 	strb.w	sl, [r5, #-1]
   82ffc:	4575      	cmp	r5, lr
   82ffe:	46ab      	mov	fp, r5
   83000:	f000 82b4 	beq.w	8356c <_dtoa_r+0xc34>
   83004:	4649      	mov	r1, r9
   83006:	220a      	movs	r2, #10
   83008:	2300      	movs	r3, #0
   8300a:	4620      	mov	r0, r4
   8300c:	f001 f8dc 	bl	841c8 <__multadd>
   83010:	42be      	cmp	r6, r7
   83012:	4681      	mov	r9, r0
   83014:	4631      	mov	r1, r6
   83016:	4620      	mov	r0, r4
   83018:	f04f 020a 	mov.w	r2, #10
   8301c:	f04f 0300 	mov.w	r3, #0
   83020:	d1a3      	bne.n	82f6a <_dtoa_r+0x632>
   83022:	f001 f8d1 	bl	841c8 <__multadd>
   83026:	4606      	mov	r6, r0
   83028:	4607      	mov	r7, r0
   8302a:	e7a8      	b.n	82f7e <_dtoa_r+0x646>
   8302c:	2600      	movs	r6, #0
   8302e:	960b      	str	r6, [sp, #44]	; 0x2c
   83030:	9e07      	ldr	r6, [sp, #28]
   83032:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
   83036:	44b6      	add	lr, r6
   83038:	f10e 0901 	add.w	r9, lr, #1
   8303c:	f1b9 0f00 	cmp.w	r9, #0
   83040:	f8cd e03c 	str.w	lr, [sp, #60]	; 0x3c
   83044:	464e      	mov	r6, r9
   83046:	f340 8150 	ble.w	832ea <_dtoa_r+0x9b2>
   8304a:	2100      	movs	r1, #0
   8304c:	2e17      	cmp	r6, #23
   8304e:	6461      	str	r1, [r4, #68]	; 0x44
   83050:	d90a      	bls.n	83068 <_dtoa_r+0x730>
   83052:	2201      	movs	r2, #1
   83054:	2304      	movs	r3, #4
   83056:	005b      	lsls	r3, r3, #1
   83058:	f103 0014 	add.w	r0, r3, #20
   8305c:	42b0      	cmp	r0, r6
   8305e:	4611      	mov	r1, r2
   83060:	f102 0201 	add.w	r2, r2, #1
   83064:	d9f7      	bls.n	83056 <_dtoa_r+0x71e>
   83066:	6461      	str	r1, [r4, #68]	; 0x44
   83068:	4620      	mov	r0, r4
   8306a:	f001 f87d 	bl	84168 <_Balloc>
   8306e:	2e0e      	cmp	r6, #14
   83070:	9009      	str	r0, [sp, #36]	; 0x24
   83072:	6420      	str	r0, [r4, #64]	; 0x40
   83074:	f63f ad6c 	bhi.w	82b50 <_dtoa_r+0x218>
   83078:	2d00      	cmp	r5, #0
   8307a:	f43f ad69 	beq.w	82b50 <_dtoa_r+0x218>
   8307e:	9d07      	ldr	r5, [sp, #28]
   83080:	e9cd ab12 	strd	sl, fp, [sp, #72]	; 0x48
   83084:	2d00      	cmp	r5, #0
   83086:	f340 821c 	ble.w	834c2 <_dtoa_r+0xb8a>
   8308a:	4b51      	ldr	r3, [pc, #324]	; (831d0 <_dtoa_r+0x898>)
   8308c:	f005 020f 	and.w	r2, r5, #15
   83090:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83094:	112d      	asrs	r5, r5, #4
   83096:	e9d3 6700 	ldrd	r6, r7, [r3]
   8309a:	06eb      	lsls	r3, r5, #27
   8309c:	f140 81cd 	bpl.w	8343a <_dtoa_r+0xb02>
   830a0:	4b4c      	ldr	r3, [pc, #304]	; (831d4 <_dtoa_r+0x89c>)
   830a2:	4650      	mov	r0, sl
   830a4:	4659      	mov	r1, fp
   830a6:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   830aa:	f002 f967 	bl	8537c <__aeabi_ddiv>
   830ae:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   830b2:	f005 050f 	and.w	r5, r5, #15
   830b6:	f04f 0803 	mov.w	r8, #3
   830ba:	b18d      	cbz	r5, 830e0 <_dtoa_r+0x7a8>
   830bc:	f8df a114 	ldr.w	sl, [pc, #276]	; 831d4 <_dtoa_r+0x89c>
   830c0:	4630      	mov	r0, r6
   830c2:	4639      	mov	r1, r7
   830c4:	07ee      	lsls	r6, r5, #31
   830c6:	d505      	bpl.n	830d4 <_dtoa_r+0x79c>
   830c8:	e9da 2300 	ldrd	r2, r3, [sl]
   830cc:	f108 0801 	add.w	r8, r8, #1
   830d0:	f002 f82a 	bl	85128 <__aeabi_dmul>
   830d4:	106d      	asrs	r5, r5, #1
   830d6:	f10a 0a08 	add.w	sl, sl, #8
   830da:	d1f3      	bne.n	830c4 <_dtoa_r+0x78c>
   830dc:	4606      	mov	r6, r0
   830de:	460f      	mov	r7, r1
   830e0:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   830e4:	4632      	mov	r2, r6
   830e6:	463b      	mov	r3, r7
   830e8:	f002 f948 	bl	8537c <__aeabi_ddiv>
   830ec:	4682      	mov	sl, r0
   830ee:	468b      	mov	fp, r1
   830f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   830f2:	b145      	cbz	r5, 83106 <_dtoa_r+0x7ce>
   830f4:	4650      	mov	r0, sl
   830f6:	4659      	mov	r1, fp
   830f8:	2200      	movs	r2, #0
   830fa:	4b37      	ldr	r3, [pc, #220]	; (831d8 <_dtoa_r+0x8a0>)
   830fc:	f002 fa86 	bl	8560c <__aeabi_dcmplt>
   83100:	2800      	cmp	r0, #0
   83102:	f040 82aa 	bne.w	8365a <_dtoa_r+0xd22>
   83106:	4640      	mov	r0, r8
   83108:	f001 ffa8 	bl	8505c <__aeabi_i2d>
   8310c:	4652      	mov	r2, sl
   8310e:	465b      	mov	r3, fp
   83110:	f002 f80a 	bl	85128 <__aeabi_dmul>
   83114:	2200      	movs	r2, #0
   83116:	4b31      	ldr	r3, [pc, #196]	; (831dc <_dtoa_r+0x8a4>)
   83118:	f001 fe54 	bl	84dc4 <__adddf3>
   8311c:	4606      	mov	r6, r0
   8311e:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   83122:	f1b9 0f00 	cmp.w	r9, #0
   83126:	f000 815a 	beq.w	833de <_dtoa_r+0xaa6>
   8312a:	9d07      	ldr	r5, [sp, #28]
   8312c:	46c8      	mov	r8, r9
   8312e:	9517      	str	r5, [sp, #92]	; 0x5c
   83130:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   83132:	2d00      	cmp	r5, #0
   83134:	f000 8223 	beq.w	8357e <_dtoa_r+0xc46>
   83138:	4b25      	ldr	r3, [pc, #148]	; (831d0 <_dtoa_r+0x898>)
   8313a:	2000      	movs	r0, #0
   8313c:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
   83140:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   83144:	4926      	ldr	r1, [pc, #152]	; (831e0 <_dtoa_r+0x8a8>)
   83146:	f002 f919 	bl	8537c <__aeabi_ddiv>
   8314a:	4632      	mov	r2, r6
   8314c:	463b      	mov	r3, r7
   8314e:	f001 fe37 	bl	84dc0 <__aeabi_dsub>
   83152:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   83156:	4659      	mov	r1, fp
   83158:	4650      	mov	r0, sl
   8315a:	f002 fa7f 	bl	8565c <__aeabi_d2iz>
   8315e:	4605      	mov	r5, r0
   83160:	f001 ff7c 	bl	8505c <__aeabi_i2d>
   83164:	4602      	mov	r2, r0
   83166:	460b      	mov	r3, r1
   83168:	4650      	mov	r0, sl
   8316a:	4659      	mov	r1, fp
   8316c:	f001 fe28 	bl	84dc0 <__aeabi_dsub>
   83170:	3530      	adds	r5, #48	; 0x30
   83172:	9e09      	ldr	r6, [sp, #36]	; 0x24
   83174:	e9cd 0104 	strd	r0, r1, [sp, #16]
   83178:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   8317c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   83180:	b2ed      	uxtb	r5, r5
   83182:	7035      	strb	r5, [r6, #0]
   83184:	f106 0b01 	add.w	fp, r6, #1
   83188:	f002 fa5e 	bl	85648 <__aeabi_dcmpgt>
   8318c:	2800      	cmp	r0, #0
   8318e:	f040 82ab 	bne.w	836e8 <_dtoa_r+0xdb0>
   83192:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   83196:	2000      	movs	r0, #0
   83198:	490f      	ldr	r1, [pc, #60]	; (831d8 <_dtoa_r+0x8a0>)
   8319a:	f001 fe11 	bl	84dc0 <__aeabi_dsub>
   8319e:	4602      	mov	r2, r0
   831a0:	460b      	mov	r3, r1
   831a2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   831a6:	f002 fa4f 	bl	85648 <__aeabi_dcmpgt>
   831aa:	2800      	cmp	r0, #0
   831ac:	f040 82a2 	bne.w	836f4 <_dtoa_r+0xdbc>
   831b0:	f1b8 0f01 	cmp.w	r8, #1
   831b4:	f340 8181 	ble.w	834ba <_dtoa_r+0xb82>
   831b8:	44b0      	add	r8, r6
   831ba:	f8cd 9050 	str.w	r9, [sp, #80]	; 0x50
   831be:	46a2      	mov	sl, r4
   831c0:	46c1      	mov	r9, r8
   831c2:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   831c6:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
   831ca:	e019      	b.n	83200 <_dtoa_r+0x8c8>
   831cc:	fffffbee 	.word	0xfffffbee
   831d0:	00085d40 	.word	0x00085d40
   831d4:	00085e08 	.word	0x00085e08
   831d8:	3ff00000 	.word	0x3ff00000
   831dc:	401c0000 	.word	0x401c0000
   831e0:	3fe00000 	.word	0x3fe00000
   831e4:	2000      	movs	r0, #0
   831e6:	49a8      	ldr	r1, [pc, #672]	; (83488 <_dtoa_r+0xb50>)
   831e8:	f001 fdea 	bl	84dc0 <__aeabi_dsub>
   831ec:	4622      	mov	r2, r4
   831ee:	462b      	mov	r3, r5
   831f0:	f002 fa0c 	bl	8560c <__aeabi_dcmplt>
   831f4:	2800      	cmp	r0, #0
   831f6:	f040 827b 	bne.w	836f0 <_dtoa_r+0xdb8>
   831fa:	45cb      	cmp	fp, r9
   831fc:	f000 815a 	beq.w	834b4 <_dtoa_r+0xb7c>
   83200:	4620      	mov	r0, r4
   83202:	4629      	mov	r1, r5
   83204:	2200      	movs	r2, #0
   83206:	4ba1      	ldr	r3, [pc, #644]	; (8348c <_dtoa_r+0xb54>)
   83208:	f001 ff8e 	bl	85128 <__aeabi_dmul>
   8320c:	2200      	movs	r2, #0
   8320e:	4b9f      	ldr	r3, [pc, #636]	; (8348c <_dtoa_r+0xb54>)
   83210:	4604      	mov	r4, r0
   83212:	460d      	mov	r5, r1
   83214:	4630      	mov	r0, r6
   83216:	4639      	mov	r1, r7
   83218:	f001 ff86 	bl	85128 <__aeabi_dmul>
   8321c:	460f      	mov	r7, r1
   8321e:	4606      	mov	r6, r0
   83220:	f002 fa1c 	bl	8565c <__aeabi_d2iz>
   83224:	4680      	mov	r8, r0
   83226:	f001 ff19 	bl	8505c <__aeabi_i2d>
   8322a:	4602      	mov	r2, r0
   8322c:	460b      	mov	r3, r1
   8322e:	4630      	mov	r0, r6
   83230:	4639      	mov	r1, r7
   83232:	f001 fdc5 	bl	84dc0 <__aeabi_dsub>
   83236:	f108 0830 	add.w	r8, r8, #48	; 0x30
   8323a:	fa5f f888 	uxtb.w	r8, r8
   8323e:	4622      	mov	r2, r4
   83240:	462b      	mov	r3, r5
   83242:	f80b 8b01 	strb.w	r8, [fp], #1
   83246:	4606      	mov	r6, r0
   83248:	460f      	mov	r7, r1
   8324a:	f002 f9df 	bl	8560c <__aeabi_dcmplt>
   8324e:	4632      	mov	r2, r6
   83250:	463b      	mov	r3, r7
   83252:	2800      	cmp	r0, #0
   83254:	d0c6      	beq.n	831e4 <_dtoa_r+0x8ac>
   83256:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   83258:	4654      	mov	r4, sl
   8325a:	9607      	str	r6, [sp, #28]
   8325c:	e539      	b.n	82cd2 <_dtoa_r+0x39a>
   8325e:	2600      	movs	r6, #0
   83260:	960b      	str	r6, [sp, #44]	; 0x2c
   83262:	9825      	ldr	r0, [sp, #148]	; 0x94
   83264:	2800      	cmp	r0, #0
   83266:	dd3c      	ble.n	832e2 <_dtoa_r+0x9aa>
   83268:	4606      	mov	r6, r0
   8326a:	900f      	str	r0, [sp, #60]	; 0x3c
   8326c:	4681      	mov	r9, r0
   8326e:	e6ec      	b.n	8304a <_dtoa_r+0x712>
   83270:	2601      	movs	r6, #1
   83272:	960b      	str	r6, [sp, #44]	; 0x2c
   83274:	e7f5      	b.n	83262 <_dtoa_r+0x92a>
   83276:	f1b9 0f00 	cmp.w	r9, #0
   8327a:	f73f ac7c 	bgt.w	82b76 <_dtoa_r+0x23e>
   8327e:	f040 80c6 	bne.w	8340e <_dtoa_r+0xad6>
   83282:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   83286:	2200      	movs	r2, #0
   83288:	4b81      	ldr	r3, [pc, #516]	; (83490 <_dtoa_r+0xb58>)
   8328a:	f001 ff4d 	bl	85128 <__aeabi_dmul>
   8328e:	4652      	mov	r2, sl
   83290:	465b      	mov	r3, fp
   83292:	f002 f9cf 	bl	85634 <__aeabi_dcmpge>
   83296:	46c8      	mov	r8, r9
   83298:	464e      	mov	r6, r9
   8329a:	2800      	cmp	r0, #0
   8329c:	d07c      	beq.n	83398 <_dtoa_r+0xa60>
   8329e:	9d25      	ldr	r5, [sp, #148]	; 0x94
   832a0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   832a4:	43ed      	mvns	r5, r5
   832a6:	9507      	str	r5, [sp, #28]
   832a8:	4641      	mov	r1, r8
   832aa:	4620      	mov	r0, r4
   832ac:	f000 ff82 	bl	841b4 <_Bfree>
   832b0:	2e00      	cmp	r6, #0
   832b2:	f47f ae06 	bne.w	82ec2 <_dtoa_r+0x58a>
   832b6:	e50c      	b.n	82cd2 <_dtoa_r+0x39a>
   832b8:	990a      	ldr	r1, [sp, #40]	; 0x28
   832ba:	4620      	mov	r0, r4
   832bc:	f001 f8c4 	bl	84448 <__pow5mult>
   832c0:	900a      	str	r0, [sp, #40]	; 0x28
   832c2:	e56a      	b.n	82d9a <_dtoa_r+0x462>
   832c4:	9d16      	ldr	r5, [sp, #88]	; 0x58
   832c6:	2d00      	cmp	r5, #0
   832c8:	f000 81b8 	beq.w	8363c <_dtoa_r+0xd04>
   832cc:	f203 4333 	addw	r3, r3, #1075	; 0x433
   832d0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   832d2:	9d08      	ldr	r5, [sp, #32]
   832d4:	e527      	b.n	82d26 <_dtoa_r+0x3ee>
   832d6:	4601      	mov	r1, r0
   832d8:	4620      	mov	r0, r4
   832da:	f000 ff6b 	bl	841b4 <_Bfree>
   832de:	2201      	movs	r2, #1
   832e0:	e67a      	b.n	82fd8 <_dtoa_r+0x6a0>
   832e2:	2601      	movs	r6, #1
   832e4:	9625      	str	r6, [sp, #148]	; 0x94
   832e6:	960f      	str	r6, [sp, #60]	; 0x3c
   832e8:	46b1      	mov	r9, r6
   832ea:	2100      	movs	r1, #0
   832ec:	6461      	str	r1, [r4, #68]	; 0x44
   832ee:	e6bb      	b.n	83068 <_dtoa_r+0x730>
   832f0:	980a      	ldr	r0, [sp, #40]	; 0x28
   832f2:	4641      	mov	r1, r8
   832f4:	f001 f954 	bl	845a0 <__mcmp>
   832f8:	2800      	cmp	r0, #0
   832fa:	f6bf ad8f 	bge.w	82e1c <_dtoa_r+0x4e4>
   832fe:	f8dd e01c 	ldr.w	lr, [sp, #28]
   83302:	990a      	ldr	r1, [sp, #40]	; 0x28
   83304:	f10e 3eff 	add.w	lr, lr, #4294967295
   83308:	4620      	mov	r0, r4
   8330a:	220a      	movs	r2, #10
   8330c:	2300      	movs	r3, #0
   8330e:	f8cd e01c 	str.w	lr, [sp, #28]
   83312:	f000 ff59 	bl	841c8 <__multadd>
   83316:	900a      	str	r0, [sp, #40]	; 0x28
   83318:	980b      	ldr	r0, [sp, #44]	; 0x2c
   8331a:	2800      	cmp	r0, #0
   8331c:	f040 8209 	bne.w	83732 <_dtoa_r+0xdfa>
   83320:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   83324:	e57a      	b.n	82e1c <_dtoa_r+0x4e4>
   83326:	f8d8 3010 	ldr.w	r3, [r8, #16]
   8332a:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   8332e:	6918      	ldr	r0, [r3, #16]
   83330:	f000 ff94 	bl	8425c <__hi0bits>
   83334:	f1c0 0020 	rsb	r0, r0, #32
   83338:	e547      	b.n	82dca <_dtoa_r+0x492>
   8333a:	9809      	ldr	r0, [sp, #36]	; 0x24
   8333c:	f7ff bb2c 	b.w	82998 <_dtoa_r+0x60>
   83340:	f1ba 0f00 	cmp.w	sl, #0
   83344:	f47f ad3b 	bne.w	82dbe <_dtoa_r+0x486>
   83348:	f3cb 0313 	ubfx	r3, fp, #0, #20
   8334c:	2b00      	cmp	r3, #0
   8334e:	f040 817c 	bne.w	8364a <_dtoa_r+0xd12>
   83352:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   83356:	0d3f      	lsrs	r7, r7, #20
   83358:	053f      	lsls	r7, r7, #20
   8335a:	2f00      	cmp	r7, #0
   8335c:	f43f ad30 	beq.w	82dc0 <_dtoa_r+0x488>
   83360:	9a08      	ldr	r2, [sp, #32]
   83362:	9b06      	ldr	r3, [sp, #24]
   83364:	3201      	adds	r2, #1
   83366:	3301      	adds	r3, #1
   83368:	9208      	str	r2, [sp, #32]
   8336a:	9306      	str	r3, [sp, #24]
   8336c:	2701      	movs	r7, #1
   8336e:	e527      	b.n	82dc0 <_dtoa_r+0x488>
   83370:	9924      	ldr	r1, [sp, #144]	; 0x90
   83372:	2902      	cmp	r1, #2
   83374:	f77f ad56 	ble.w	82e24 <_dtoa_r+0x4ec>
   83378:	f1b9 0f00 	cmp.w	r9, #0
   8337c:	d18f      	bne.n	8329e <_dtoa_r+0x966>
   8337e:	4641      	mov	r1, r8
   83380:	464b      	mov	r3, r9
   83382:	2205      	movs	r2, #5
   83384:	4620      	mov	r0, r4
   83386:	f000 ff1f 	bl	841c8 <__multadd>
   8338a:	4680      	mov	r8, r0
   8338c:	4641      	mov	r1, r8
   8338e:	980a      	ldr	r0, [sp, #40]	; 0x28
   83390:	f001 f906 	bl	845a0 <__mcmp>
   83394:	2800      	cmp	r0, #0
   83396:	dd82      	ble.n	8329e <_dtoa_r+0x966>
   83398:	9d07      	ldr	r5, [sp, #28]
   8339a:	2331      	movs	r3, #49	; 0x31
   8339c:	3501      	adds	r5, #1
   8339e:	9507      	str	r5, [sp, #28]
   833a0:	9d09      	ldr	r5, [sp, #36]	; 0x24
   833a2:	702b      	strb	r3, [r5, #0]
   833a4:	f105 0b01 	add.w	fp, r5, #1
   833a8:	e77e      	b.n	832a8 <_dtoa_r+0x970>
   833aa:	9807      	ldr	r0, [sp, #28]
   833ac:	9909      	ldr	r1, [sp, #36]	; 0x24
   833ae:	2331      	movs	r3, #49	; 0x31
   833b0:	3001      	adds	r0, #1
   833b2:	9007      	str	r0, [sp, #28]
   833b4:	700b      	strb	r3, [r1, #0]
   833b6:	e576      	b.n	82ea6 <_dtoa_r+0x56e>
   833b8:	46a3      	mov	fp, r4
   833ba:	9c03      	ldr	r4, [sp, #12]
   833bc:	e489      	b.n	82cd2 <_dtoa_r+0x39a>
   833be:	4640      	mov	r0, r8
   833c0:	f001 fe4c 	bl	8505c <__aeabi_i2d>
   833c4:	4602      	mov	r2, r0
   833c6:	460b      	mov	r3, r1
   833c8:	4650      	mov	r0, sl
   833ca:	4659      	mov	r1, fp
   833cc:	f001 feac 	bl	85128 <__aeabi_dmul>
   833d0:	2200      	movs	r2, #0
   833d2:	4b30      	ldr	r3, [pc, #192]	; (83494 <_dtoa_r+0xb5c>)
   833d4:	f001 fcf6 	bl	84dc4 <__adddf3>
   833d8:	4606      	mov	r6, r0
   833da:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   833de:	4650      	mov	r0, sl
   833e0:	4659      	mov	r1, fp
   833e2:	2200      	movs	r2, #0
   833e4:	4b2a      	ldr	r3, [pc, #168]	; (83490 <_dtoa_r+0xb58>)
   833e6:	f001 fceb 	bl	84dc0 <__aeabi_dsub>
   833ea:	4632      	mov	r2, r6
   833ec:	463b      	mov	r3, r7
   833ee:	4682      	mov	sl, r0
   833f0:	468b      	mov	fp, r1
   833f2:	f002 f929 	bl	85648 <__aeabi_dcmpgt>
   833f6:	2800      	cmp	r0, #0
   833f8:	f040 80bd 	bne.w	83576 <_dtoa_r+0xc3e>
   833fc:	4632      	mov	r2, r6
   833fe:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
   83402:	4650      	mov	r0, sl
   83404:	4659      	mov	r1, fp
   83406:	f002 f901 	bl	8560c <__aeabi_dcmplt>
   8340a:	2800      	cmp	r0, #0
   8340c:	d055      	beq.n	834ba <_dtoa_r+0xb82>
   8340e:	f04f 0800 	mov.w	r8, #0
   83412:	4646      	mov	r6, r8
   83414:	e743      	b.n	8329e <_dtoa_r+0x966>
   83416:	990a      	ldr	r1, [sp, #40]	; 0x28
   83418:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8341a:	4620      	mov	r0, r4
   8341c:	f001 f814 	bl	84448 <__pow5mult>
   83420:	900a      	str	r0, [sp, #40]	; 0x28
   83422:	e4ba      	b.n	82d9a <_dtoa_r+0x462>
   83424:	2601      	movs	r6, #1
   83426:	960b      	str	r6, [sp, #44]	; 0x2c
   83428:	e602      	b.n	83030 <_dtoa_r+0x6f8>
   8342a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   8342c:	9e0d      	ldr	r6, [sp, #52]	; 0x34
   8342e:	1b7b      	subs	r3, r7, r5
   83430:	441e      	add	r6, r3
   83432:	970c      	str	r7, [sp, #48]	; 0x30
   83434:	960d      	str	r6, [sp, #52]	; 0x34
   83436:	2700      	movs	r7, #0
   83438:	e46f      	b.n	82d1a <_dtoa_r+0x3e2>
   8343a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   8343e:	f04f 0802 	mov.w	r8, #2
   83442:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   83446:	e638      	b.n	830ba <_dtoa_r+0x782>
   83448:	2a00      	cmp	r2, #0
   8344a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   8344e:	46d9      	mov	r9, fp
   83450:	dd11      	ble.n	83476 <_dtoa_r+0xb3e>
   83452:	990a      	ldr	r1, [sp, #40]	; 0x28
   83454:	2201      	movs	r2, #1
   83456:	4620      	mov	r0, r4
   83458:	f001 f844 	bl	844e4 <__lshift>
   8345c:	4641      	mov	r1, r8
   8345e:	900a      	str	r0, [sp, #40]	; 0x28
   83460:	f001 f89e 	bl	845a0 <__mcmp>
   83464:	2800      	cmp	r0, #0
   83466:	f340 815d 	ble.w	83724 <_dtoa_r+0xdec>
   8346a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   8346e:	f000 811b 	beq.w	836a8 <_dtoa_r+0xd70>
   83472:	f109 0a31 	add.w	sl, r9, #49	; 0x31
   83476:	9b06      	ldr	r3, [sp, #24]
   83478:	4635      	mov	r5, r6
   8347a:	f883 a000 	strb.w	sl, [r3]
   8347e:	f103 0b01 	add.w	fp, r3, #1
   83482:	463e      	mov	r6, r7
   83484:	e50f      	b.n	82ea6 <_dtoa_r+0x56e>
   83486:	bf00      	nop
   83488:	3ff00000 	.word	0x3ff00000
   8348c:	40240000 	.word	0x40240000
   83490:	40140000 	.word	0x40140000
   83494:	401c0000 	.word	0x401c0000
   83498:	d103      	bne.n	834a2 <_dtoa_r+0xb6a>
   8349a:	f01a 0f01 	tst.w	sl, #1
   8349e:	f47f acf2 	bne.w	82e86 <_dtoa_r+0x54e>
   834a2:	465b      	mov	r3, fp
   834a4:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   834a8:	469b      	mov	fp, r3
   834aa:	2a30      	cmp	r2, #48	; 0x30
   834ac:	f103 33ff 	add.w	r3, r3, #4294967295
   834b0:	d0f8      	beq.n	834a4 <_dtoa_r+0xb6c>
   834b2:	e4f8      	b.n	82ea6 <_dtoa_r+0x56e>
   834b4:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
   834b8:	4654      	mov	r4, sl
   834ba:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
   834be:	f7ff bb47 	b.w	82b50 <_dtoa_r+0x218>
   834c2:	9e07      	ldr	r6, [sp, #28]
   834c4:	4275      	negs	r5, r6
   834c6:	2d00      	cmp	r5, #0
   834c8:	f000 80c2 	beq.w	83650 <_dtoa_r+0xd18>
   834cc:	4ba3      	ldr	r3, [pc, #652]	; (8375c <_dtoa_r+0xe24>)
   834ce:	f005 020f 	and.w	r2, r5, #15
   834d2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   834d6:	e9d3 2300 	ldrd	r2, r3, [r3]
   834da:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   834de:	f001 fe23 	bl	85128 <__aeabi_dmul>
   834e2:	112d      	asrs	r5, r5, #4
   834e4:	4682      	mov	sl, r0
   834e6:	468b      	mov	fp, r1
   834e8:	f000 812e 	beq.w	83748 <_dtoa_r+0xe10>
   834ec:	4e9c      	ldr	r6, [pc, #624]	; (83760 <_dtoa_r+0xe28>)
   834ee:	f04f 0802 	mov.w	r8, #2
   834f2:	07ea      	lsls	r2, r5, #31
   834f4:	d505      	bpl.n	83502 <_dtoa_r+0xbca>
   834f6:	e9d6 2300 	ldrd	r2, r3, [r6]
   834fa:	f108 0801 	add.w	r8, r8, #1
   834fe:	f001 fe13 	bl	85128 <__aeabi_dmul>
   83502:	106d      	asrs	r5, r5, #1
   83504:	f106 0608 	add.w	r6, r6, #8
   83508:	d1f3      	bne.n	834f2 <_dtoa_r+0xbba>
   8350a:	4682      	mov	sl, r0
   8350c:	468b      	mov	fp, r1
   8350e:	e5ef      	b.n	830f0 <_dtoa_r+0x7b8>
   83510:	9e07      	ldr	r6, [sp, #28]
   83512:	9d09      	ldr	r5, [sp, #36]	; 0x24
   83514:	2230      	movs	r2, #48	; 0x30
   83516:	702a      	strb	r2, [r5, #0]
   83518:	3601      	adds	r6, #1
   8351a:	2231      	movs	r2, #49	; 0x31
   8351c:	9607      	str	r6, [sp, #28]
   8351e:	701a      	strb	r2, [r3, #0]
   83520:	f7ff bbd7 	b.w	82cd2 <_dtoa_r+0x39a>
   83524:	6871      	ldr	r1, [r6, #4]
   83526:	4620      	mov	r0, r4
   83528:	f000 fe1e 	bl	84168 <_Balloc>
   8352c:	6933      	ldr	r3, [r6, #16]
   8352e:	4605      	mov	r5, r0
   83530:	1c9a      	adds	r2, r3, #2
   83532:	0092      	lsls	r2, r2, #2
   83534:	f106 010c 	add.w	r1, r6, #12
   83538:	300c      	adds	r0, #12
   8353a:	f000 fd35 	bl	83fa8 <memcpy>
   8353e:	4620      	mov	r0, r4
   83540:	4629      	mov	r1, r5
   83542:	2201      	movs	r2, #1
   83544:	f000 ffce 	bl	844e4 <__lshift>
   83548:	4607      	mov	r7, r0
   8354a:	e503      	b.n	82f54 <_dtoa_r+0x61c>
   8354c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   83550:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   83554:	f000 80a8 	beq.w	836a8 <_dtoa_r+0xd70>
   83558:	9d06      	ldr	r5, [sp, #24]
   8355a:	f10a 0301 	add.w	r3, sl, #1
   8355e:	702b      	strb	r3, [r5, #0]
   83560:	4635      	mov	r5, r6
   83562:	9e06      	ldr	r6, [sp, #24]
   83564:	f106 0b01 	add.w	fp, r6, #1
   83568:	463e      	mov	r6, r7
   8356a:	e49c      	b.n	82ea6 <_dtoa_r+0x56e>
   8356c:	4635      	mov	r5, r6
   8356e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   83572:	463e      	mov	r6, r7
   83574:	e47b      	b.n	82e6e <_dtoa_r+0x536>
   83576:	f04f 0800 	mov.w	r8, #0
   8357a:	4646      	mov	r6, r8
   8357c:	e70c      	b.n	83398 <_dtoa_r+0xa60>
   8357e:	4977      	ldr	r1, [pc, #476]	; (8375c <_dtoa_r+0xe24>)
   83580:	f108 35ff 	add.w	r5, r8, #4294967295
   83584:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   83588:	4632      	mov	r2, r6
   8358a:	463b      	mov	r3, r7
   8358c:	e9d1 0100 	ldrd	r0, r1, [r1]
   83590:	9510      	str	r5, [sp, #64]	; 0x40
   83592:	f001 fdc9 	bl	85128 <__aeabi_dmul>
   83596:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50
   8359a:	4659      	mov	r1, fp
   8359c:	4650      	mov	r0, sl
   8359e:	f002 f85d 	bl	8565c <__aeabi_d2iz>
   835a2:	4605      	mov	r5, r0
   835a4:	f001 fd5a 	bl	8505c <__aeabi_i2d>
   835a8:	4602      	mov	r2, r0
   835aa:	460b      	mov	r3, r1
   835ac:	4650      	mov	r0, sl
   835ae:	4659      	mov	r1, fp
   835b0:	f001 fc06 	bl	84dc0 <__aeabi_dsub>
   835b4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
   835b8:	3530      	adds	r5, #48	; 0x30
   835ba:	f1b8 0f01 	cmp.w	r8, #1
   835be:	4606      	mov	r6, r0
   835c0:	460f      	mov	r7, r1
   835c2:	f88e 5000 	strb.w	r5, [lr]
   835c6:	f10e 0b01 	add.w	fp, lr, #1
   835ca:	d01e      	beq.n	8360a <_dtoa_r+0xcd2>
   835cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
   835ce:	1e6b      	subs	r3, r5, #1
   835d0:	eb03 0a08 	add.w	sl, r3, r8
   835d4:	2200      	movs	r2, #0
   835d6:	4b63      	ldr	r3, [pc, #396]	; (83764 <_dtoa_r+0xe2c>)
   835d8:	f001 fda6 	bl	85128 <__aeabi_dmul>
   835dc:	460f      	mov	r7, r1
   835de:	4606      	mov	r6, r0
   835e0:	f002 f83c 	bl	8565c <__aeabi_d2iz>
   835e4:	4680      	mov	r8, r0
   835e6:	f001 fd39 	bl	8505c <__aeabi_i2d>
   835ea:	f108 0830 	add.w	r8, r8, #48	; 0x30
   835ee:	4602      	mov	r2, r0
   835f0:	460b      	mov	r3, r1
   835f2:	4630      	mov	r0, r6
   835f4:	4639      	mov	r1, r7
   835f6:	f001 fbe3 	bl	84dc0 <__aeabi_dsub>
   835fa:	f805 8f01 	strb.w	r8, [r5, #1]!
   835fe:	4555      	cmp	r5, sl
   83600:	d1e8      	bne.n	835d4 <_dtoa_r+0xc9c>
   83602:	9d10      	ldr	r5, [sp, #64]	; 0x40
   83604:	4606      	mov	r6, r0
   83606:	460f      	mov	r7, r1
   83608:	44ab      	add	fp, r5
   8360a:	2200      	movs	r2, #0
   8360c:	4b56      	ldr	r3, [pc, #344]	; (83768 <_dtoa_r+0xe30>)
   8360e:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   83612:	f001 fbd7 	bl	84dc4 <__adddf3>
   83616:	4632      	mov	r2, r6
   83618:	463b      	mov	r3, r7
   8361a:	f001 fff7 	bl	8560c <__aeabi_dcmplt>
   8361e:	2800      	cmp	r0, #0
   83620:	d04d      	beq.n	836be <_dtoa_r+0xd86>
   83622:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   83624:	9a09      	ldr	r2, [sp, #36]	; 0x24
   83626:	9607      	str	r6, [sp, #28]
   83628:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
   8362c:	f7ff bb4a 	b.w	82cc4 <_dtoa_r+0x38c>
   83630:	9e08      	ldr	r6, [sp, #32]
   83632:	2300      	movs	r3, #0
   83634:	ebc9 0506 	rsb	r5, r9, r6
   83638:	f7ff bb75 	b.w	82d26 <_dtoa_r+0x3ee>
   8363c:	9b18      	ldr	r3, [sp, #96]	; 0x60
   8363e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   83640:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   83644:	9d08      	ldr	r5, [sp, #32]
   83646:	f7ff bb6e 	b.w	82d26 <_dtoa_r+0x3ee>
   8364a:	4657      	mov	r7, sl
   8364c:	f7ff bbb8 	b.w	82dc0 <_dtoa_r+0x488>
   83650:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
   83654:	f04f 0802 	mov.w	r8, #2
   83658:	e54a      	b.n	830f0 <_dtoa_r+0x7b8>
   8365a:	f1b9 0f00 	cmp.w	r9, #0
   8365e:	f43f aeae 	beq.w	833be <_dtoa_r+0xa86>
   83662:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   83664:	2e00      	cmp	r6, #0
   83666:	f77f af28 	ble.w	834ba <_dtoa_r+0xb82>
   8366a:	2200      	movs	r2, #0
   8366c:	4b3d      	ldr	r3, [pc, #244]	; (83764 <_dtoa_r+0xe2c>)
   8366e:	4650      	mov	r0, sl
   83670:	4659      	mov	r1, fp
   83672:	f001 fd59 	bl	85128 <__aeabi_dmul>
   83676:	4682      	mov	sl, r0
   83678:	f108 0001 	add.w	r0, r8, #1
   8367c:	468b      	mov	fp, r1
   8367e:	f001 fced 	bl	8505c <__aeabi_i2d>
   83682:	4602      	mov	r2, r0
   83684:	460b      	mov	r3, r1
   83686:	4650      	mov	r0, sl
   83688:	4659      	mov	r1, fp
   8368a:	f001 fd4d 	bl	85128 <__aeabi_dmul>
   8368e:	2200      	movs	r2, #0
   83690:	4b36      	ldr	r3, [pc, #216]	; (8376c <_dtoa_r+0xe34>)
   83692:	f001 fb97 	bl	84dc4 <__adddf3>
   83696:	9d07      	ldr	r5, [sp, #28]
   83698:	4606      	mov	r6, r0
   8369a:	3d01      	subs	r5, #1
   8369c:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   836a0:	9517      	str	r5, [sp, #92]	; 0x5c
   836a2:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
   836a6:	e543      	b.n	83130 <_dtoa_r+0x7f8>
   836a8:	4635      	mov	r5, r6
   836aa:	9b06      	ldr	r3, [sp, #24]
   836ac:	9e06      	ldr	r6, [sp, #24]
   836ae:	2239      	movs	r2, #57	; 0x39
   836b0:	7032      	strb	r2, [r6, #0]
   836b2:	f103 0b01 	add.w	fp, r3, #1
   836b6:	463e      	mov	r6, r7
   836b8:	9909      	ldr	r1, [sp, #36]	; 0x24
   836ba:	f7ff bbee 	b.w	82e9a <_dtoa_r+0x562>
   836be:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
   836c2:	2000      	movs	r0, #0
   836c4:	4928      	ldr	r1, [pc, #160]	; (83768 <_dtoa_r+0xe30>)
   836c6:	f001 fb7b 	bl	84dc0 <__aeabi_dsub>
   836ca:	4632      	mov	r2, r6
   836cc:	463b      	mov	r3, r7
   836ce:	f001 ffbb 	bl	85648 <__aeabi_dcmpgt>
   836d2:	2800      	cmp	r0, #0
   836d4:	f43f aef1 	beq.w	834ba <_dtoa_r+0xb82>
   836d8:	465b      	mov	r3, fp
   836da:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   836de:	469b      	mov	fp, r3
   836e0:	2a30      	cmp	r2, #48	; 0x30
   836e2:	f103 33ff 	add.w	r3, r3, #4294967295
   836e6:	d0f8      	beq.n	836da <_dtoa_r+0xda2>
   836e8:	9d17      	ldr	r5, [sp, #92]	; 0x5c
   836ea:	9507      	str	r5, [sp, #28]
   836ec:	f7ff baf1 	b.w	82cd2 <_dtoa_r+0x39a>
   836f0:	4645      	mov	r5, r8
   836f2:	4654      	mov	r4, sl
   836f4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   836f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   836f8:	9607      	str	r6, [sp, #28]
   836fa:	f7ff bae3 	b.w	82cc4 <_dtoa_r+0x38c>
   836fe:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   83702:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   83706:	d0cf      	beq.n	836a8 <_dtoa_r+0xd70>
   83708:	9b03      	ldr	r3, [sp, #12]
   8370a:	4635      	mov	r5, r6
   8370c:	2b00      	cmp	r3, #0
   8370e:	9e06      	ldr	r6, [sp, #24]
   83710:	bfc8      	it	gt
   83712:	f10b 0a31 	addgt.w	sl, fp, #49	; 0x31
   83716:	f886 a000 	strb.w	sl, [r6]
   8371a:	f106 0b01 	add.w	fp, r6, #1
   8371e:	463e      	mov	r6, r7
   83720:	f7ff bbc1 	b.w	82ea6 <_dtoa_r+0x56e>
   83724:	f47f aea7 	bne.w	83476 <_dtoa_r+0xb3e>
   83728:	f01a 0f01 	tst.w	sl, #1
   8372c:	f43f aea3 	beq.w	83476 <_dtoa_r+0xb3e>
   83730:	e69b      	b.n	8346a <_dtoa_r+0xb32>
   83732:	4631      	mov	r1, r6
   83734:	4620      	mov	r0, r4
   83736:	220a      	movs	r2, #10
   83738:	2300      	movs	r3, #0
   8373a:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   8373e:	f000 fd43 	bl	841c8 <__multadd>
   83742:	4606      	mov	r6, r0
   83744:	f7ff bb6a 	b.w	82e1c <_dtoa_r+0x4e4>
   83748:	f04f 0802 	mov.w	r8, #2
   8374c:	e4d0      	b.n	830f0 <_dtoa_r+0x7b8>
   8374e:	f43f ab50 	beq.w	82df2 <_dtoa_r+0x4ba>
   83752:	f1c3 033c 	rsb	r3, r3, #60	; 0x3c
   83756:	f7ff bbe0 	b.w	82f1a <_dtoa_r+0x5e2>
   8375a:	bf00      	nop
   8375c:	00085d40 	.word	0x00085d40
   83760:	00085e08 	.word	0x00085e08
   83764:	40240000 	.word	0x40240000
   83768:	3fe00000 	.word	0x3fe00000
   8376c:	401c0000 	.word	0x401c0000

00083770 <__libc_fini_array>:
   83770:	b538      	push	{r3, r4, r5, lr}
   83772:	4d09      	ldr	r5, [pc, #36]	; (83798 <__libc_fini_array+0x28>)
   83774:	4c09      	ldr	r4, [pc, #36]	; (8379c <__libc_fini_array+0x2c>)
   83776:	1b64      	subs	r4, r4, r5
   83778:	10a4      	asrs	r4, r4, #2
   8377a:	bf18      	it	ne
   8377c:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
   83780:	d005      	beq.n	8378e <__libc_fini_array+0x1e>
   83782:	3c01      	subs	r4, #1
   83784:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   83788:	4798      	blx	r3
   8378a:	2c00      	cmp	r4, #0
   8378c:	d1f9      	bne.n	83782 <__libc_fini_array+0x12>
   8378e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   83792:	f002 bb5d 	b.w	85e50 <_fini>
   83796:	bf00      	nop
   83798:	00085e5c 	.word	0x00085e5c
   8379c:	00085e60 	.word	0x00085e60

000837a0 <_malloc_trim_r>:
   837a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   837a2:	4d23      	ldr	r5, [pc, #140]	; (83830 <_malloc_trim_r+0x90>)
   837a4:	460f      	mov	r7, r1
   837a6:	4604      	mov	r4, r0
   837a8:	f000 fcda 	bl	84160 <__malloc_lock>
   837ac:	68ab      	ldr	r3, [r5, #8]
   837ae:	685e      	ldr	r6, [r3, #4]
   837b0:	f026 0603 	bic.w	r6, r6, #3
   837b4:	1bf1      	subs	r1, r6, r7
   837b6:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
   837ba:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   837be:	f021 010f 	bic.w	r1, r1, #15
   837c2:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
   837c6:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
   837ca:	db07      	blt.n	837dc <_malloc_trim_r+0x3c>
   837cc:	4620      	mov	r0, r4
   837ce:	2100      	movs	r1, #0
   837d0:	f001 f9dc 	bl	84b8c <_sbrk_r>
   837d4:	68ab      	ldr	r3, [r5, #8]
   837d6:	4433      	add	r3, r6
   837d8:	4298      	cmp	r0, r3
   837da:	d004      	beq.n	837e6 <_malloc_trim_r+0x46>
   837dc:	4620      	mov	r0, r4
   837de:	f000 fcc1 	bl	84164 <__malloc_unlock>
   837e2:	2000      	movs	r0, #0
   837e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   837e6:	4620      	mov	r0, r4
   837e8:	4279      	negs	r1, r7
   837ea:	f001 f9cf 	bl	84b8c <_sbrk_r>
   837ee:	3001      	adds	r0, #1
   837f0:	d00d      	beq.n	8380e <_malloc_trim_r+0x6e>
   837f2:	4b10      	ldr	r3, [pc, #64]	; (83834 <_malloc_trim_r+0x94>)
   837f4:	68aa      	ldr	r2, [r5, #8]
   837f6:	6819      	ldr	r1, [r3, #0]
   837f8:	1bf6      	subs	r6, r6, r7
   837fa:	f046 0601 	orr.w	r6, r6, #1
   837fe:	4620      	mov	r0, r4
   83800:	1bc9      	subs	r1, r1, r7
   83802:	6056      	str	r6, [r2, #4]
   83804:	6019      	str	r1, [r3, #0]
   83806:	f000 fcad 	bl	84164 <__malloc_unlock>
   8380a:	2001      	movs	r0, #1
   8380c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8380e:	4620      	mov	r0, r4
   83810:	2100      	movs	r1, #0
   83812:	f001 f9bb 	bl	84b8c <_sbrk_r>
   83816:	68ab      	ldr	r3, [r5, #8]
   83818:	1ac2      	subs	r2, r0, r3
   8381a:	2a0f      	cmp	r2, #15
   8381c:	ddde      	ble.n	837dc <_malloc_trim_r+0x3c>
   8381e:	4d06      	ldr	r5, [pc, #24]	; (83838 <_malloc_trim_r+0x98>)
   83820:	4904      	ldr	r1, [pc, #16]	; (83834 <_malloc_trim_r+0x94>)
   83822:	682d      	ldr	r5, [r5, #0]
   83824:	f042 0201 	orr.w	r2, r2, #1
   83828:	1b40      	subs	r0, r0, r5
   8382a:	605a      	str	r2, [r3, #4]
   8382c:	6008      	str	r0, [r1, #0]
   8382e:	e7d5      	b.n	837dc <_malloc_trim_r+0x3c>
   83830:	2007046c 	.word	0x2007046c
   83834:	20073030 	.word	0x20073030
   83838:	20070878 	.word	0x20070878

0008383c <_free_r>:
   8383c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83840:	460d      	mov	r5, r1
   83842:	4606      	mov	r6, r0
   83844:	2900      	cmp	r1, #0
   83846:	d055      	beq.n	838f4 <_free_r+0xb8>
   83848:	f000 fc8a 	bl	84160 <__malloc_lock>
   8384c:	f855 1c04 	ldr.w	r1, [r5, #-4]
   83850:	f8df c170 	ldr.w	ip, [pc, #368]	; 839c4 <_free_r+0x188>
   83854:	f1a5 0408 	sub.w	r4, r5, #8
   83858:	f021 0301 	bic.w	r3, r1, #1
   8385c:	18e2      	adds	r2, r4, r3
   8385e:	f8dc 0008 	ldr.w	r0, [ip, #8]
   83862:	6857      	ldr	r7, [r2, #4]
   83864:	4290      	cmp	r0, r2
   83866:	f027 0703 	bic.w	r7, r7, #3
   8386a:	d068      	beq.n	8393e <_free_r+0x102>
   8386c:	f011 0101 	ands.w	r1, r1, #1
   83870:	6057      	str	r7, [r2, #4]
   83872:	d032      	beq.n	838da <_free_r+0x9e>
   83874:	2100      	movs	r1, #0
   83876:	19d0      	adds	r0, r2, r7
   83878:	6840      	ldr	r0, [r0, #4]
   8387a:	07c0      	lsls	r0, r0, #31
   8387c:	d406      	bmi.n	8388c <_free_r+0x50>
   8387e:	443b      	add	r3, r7
   83880:	6890      	ldr	r0, [r2, #8]
   83882:	2900      	cmp	r1, #0
   83884:	d04d      	beq.n	83922 <_free_r+0xe6>
   83886:	68d2      	ldr	r2, [r2, #12]
   83888:	60c2      	str	r2, [r0, #12]
   8388a:	6090      	str	r0, [r2, #8]
   8388c:	f043 0201 	orr.w	r2, r3, #1
   83890:	6062      	str	r2, [r4, #4]
   83892:	50e3      	str	r3, [r4, r3]
   83894:	b9e1      	cbnz	r1, 838d0 <_free_r+0x94>
   83896:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8389a:	d32d      	bcc.n	838f8 <_free_r+0xbc>
   8389c:	0a5a      	lsrs	r2, r3, #9
   8389e:	2a04      	cmp	r2, #4
   838a0:	d869      	bhi.n	83976 <_free_r+0x13a>
   838a2:	0998      	lsrs	r0, r3, #6
   838a4:	3038      	adds	r0, #56	; 0x38
   838a6:	0041      	lsls	r1, r0, #1
   838a8:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
   838ac:	f8dc 2008 	ldr.w	r2, [ip, #8]
   838b0:	4944      	ldr	r1, [pc, #272]	; (839c4 <_free_r+0x188>)
   838b2:	4562      	cmp	r2, ip
   838b4:	d065      	beq.n	83982 <_free_r+0x146>
   838b6:	6851      	ldr	r1, [r2, #4]
   838b8:	f021 0103 	bic.w	r1, r1, #3
   838bc:	428b      	cmp	r3, r1
   838be:	d202      	bcs.n	838c6 <_free_r+0x8a>
   838c0:	6892      	ldr	r2, [r2, #8]
   838c2:	4594      	cmp	ip, r2
   838c4:	d1f7      	bne.n	838b6 <_free_r+0x7a>
   838c6:	68d3      	ldr	r3, [r2, #12]
   838c8:	60e3      	str	r3, [r4, #12]
   838ca:	60a2      	str	r2, [r4, #8]
   838cc:	609c      	str	r4, [r3, #8]
   838ce:	60d4      	str	r4, [r2, #12]
   838d0:	4630      	mov	r0, r6
   838d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   838d6:	f000 bc45 	b.w	84164 <__malloc_unlock>
   838da:	f855 5c08 	ldr.w	r5, [r5, #-8]
   838de:	f10c 0808 	add.w	r8, ip, #8
   838e2:	1b64      	subs	r4, r4, r5
   838e4:	68a0      	ldr	r0, [r4, #8]
   838e6:	442b      	add	r3, r5
   838e8:	4540      	cmp	r0, r8
   838ea:	d042      	beq.n	83972 <_free_r+0x136>
   838ec:	68e5      	ldr	r5, [r4, #12]
   838ee:	60c5      	str	r5, [r0, #12]
   838f0:	60a8      	str	r0, [r5, #8]
   838f2:	e7c0      	b.n	83876 <_free_r+0x3a>
   838f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   838f8:	08db      	lsrs	r3, r3, #3
   838fa:	109a      	asrs	r2, r3, #2
   838fc:	2001      	movs	r0, #1
   838fe:	4090      	lsls	r0, r2
   83900:	f8dc 1004 	ldr.w	r1, [ip, #4]
   83904:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
   83908:	689a      	ldr	r2, [r3, #8]
   8390a:	4301      	orrs	r1, r0
   8390c:	60a2      	str	r2, [r4, #8]
   8390e:	60e3      	str	r3, [r4, #12]
   83910:	f8cc 1004 	str.w	r1, [ip, #4]
   83914:	4630      	mov	r0, r6
   83916:	609c      	str	r4, [r3, #8]
   83918:	60d4      	str	r4, [r2, #12]
   8391a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8391e:	f000 bc21 	b.w	84164 <__malloc_unlock>
   83922:	4d29      	ldr	r5, [pc, #164]	; (839c8 <_free_r+0x18c>)
   83924:	42a8      	cmp	r0, r5
   83926:	d1ae      	bne.n	83886 <_free_r+0x4a>
   83928:	f043 0201 	orr.w	r2, r3, #1
   8392c:	f8cc 4014 	str.w	r4, [ip, #20]
   83930:	f8cc 4010 	str.w	r4, [ip, #16]
   83934:	60e0      	str	r0, [r4, #12]
   83936:	60a0      	str	r0, [r4, #8]
   83938:	6062      	str	r2, [r4, #4]
   8393a:	50e3      	str	r3, [r4, r3]
   8393c:	e7c8      	b.n	838d0 <_free_r+0x94>
   8393e:	441f      	add	r7, r3
   83940:	07cb      	lsls	r3, r1, #31
   83942:	d407      	bmi.n	83954 <_free_r+0x118>
   83944:	f855 1c08 	ldr.w	r1, [r5, #-8]
   83948:	1a64      	subs	r4, r4, r1
   8394a:	68e3      	ldr	r3, [r4, #12]
   8394c:	68a2      	ldr	r2, [r4, #8]
   8394e:	440f      	add	r7, r1
   83950:	60d3      	str	r3, [r2, #12]
   83952:	609a      	str	r2, [r3, #8]
   83954:	4b1d      	ldr	r3, [pc, #116]	; (839cc <_free_r+0x190>)
   83956:	f047 0201 	orr.w	r2, r7, #1
   8395a:	681b      	ldr	r3, [r3, #0]
   8395c:	6062      	str	r2, [r4, #4]
   8395e:	429f      	cmp	r7, r3
   83960:	f8cc 4008 	str.w	r4, [ip, #8]
   83964:	d3b4      	bcc.n	838d0 <_free_r+0x94>
   83966:	4b1a      	ldr	r3, [pc, #104]	; (839d0 <_free_r+0x194>)
   83968:	4630      	mov	r0, r6
   8396a:	6819      	ldr	r1, [r3, #0]
   8396c:	f7ff ff18 	bl	837a0 <_malloc_trim_r>
   83970:	e7ae      	b.n	838d0 <_free_r+0x94>
   83972:	2101      	movs	r1, #1
   83974:	e77f      	b.n	83876 <_free_r+0x3a>
   83976:	2a14      	cmp	r2, #20
   83978:	d80b      	bhi.n	83992 <_free_r+0x156>
   8397a:	f102 005b 	add.w	r0, r2, #91	; 0x5b
   8397e:	0041      	lsls	r1, r0, #1
   83980:	e792      	b.n	838a8 <_free_r+0x6c>
   83982:	1080      	asrs	r0, r0, #2
   83984:	2501      	movs	r5, #1
   83986:	4085      	lsls	r5, r0
   83988:	6848      	ldr	r0, [r1, #4]
   8398a:	4613      	mov	r3, r2
   8398c:	4328      	orrs	r0, r5
   8398e:	6048      	str	r0, [r1, #4]
   83990:	e79a      	b.n	838c8 <_free_r+0x8c>
   83992:	2a54      	cmp	r2, #84	; 0x54
   83994:	d803      	bhi.n	8399e <_free_r+0x162>
   83996:	0b18      	lsrs	r0, r3, #12
   83998:	306e      	adds	r0, #110	; 0x6e
   8399a:	0041      	lsls	r1, r0, #1
   8399c:	e784      	b.n	838a8 <_free_r+0x6c>
   8399e:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   839a2:	d803      	bhi.n	839ac <_free_r+0x170>
   839a4:	0bd8      	lsrs	r0, r3, #15
   839a6:	3077      	adds	r0, #119	; 0x77
   839a8:	0041      	lsls	r1, r0, #1
   839aa:	e77d      	b.n	838a8 <_free_r+0x6c>
   839ac:	f240 5154 	movw	r1, #1364	; 0x554
   839b0:	428a      	cmp	r2, r1
   839b2:	d803      	bhi.n	839bc <_free_r+0x180>
   839b4:	0c98      	lsrs	r0, r3, #18
   839b6:	307c      	adds	r0, #124	; 0x7c
   839b8:	0041      	lsls	r1, r0, #1
   839ba:	e775      	b.n	838a8 <_free_r+0x6c>
   839bc:	21fc      	movs	r1, #252	; 0xfc
   839be:	207e      	movs	r0, #126	; 0x7e
   839c0:	e772      	b.n	838a8 <_free_r+0x6c>
   839c2:	bf00      	nop
   839c4:	2007046c 	.word	0x2007046c
   839c8:	20070474 	.word	0x20070474
   839cc:	20070874 	.word	0x20070874
   839d0:	2007302c 	.word	0x2007302c

000839d4 <_localeconv_r>:
   839d4:	4800      	ldr	r0, [pc, #0]	; (839d8 <_localeconv_r+0x4>)
   839d6:	4770      	bx	lr
   839d8:	20070434 	.word	0x20070434

000839dc <_malloc_r>:
   839dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   839e0:	f101 050b 	add.w	r5, r1, #11
   839e4:	2d16      	cmp	r5, #22
   839e6:	b083      	sub	sp, #12
   839e8:	4606      	mov	r6, r0
   839ea:	d927      	bls.n	83a3c <_malloc_r+0x60>
   839ec:	f035 0507 	bics.w	r5, r5, #7
   839f0:	d427      	bmi.n	83a42 <_malloc_r+0x66>
   839f2:	42a9      	cmp	r1, r5
   839f4:	d825      	bhi.n	83a42 <_malloc_r+0x66>
   839f6:	4630      	mov	r0, r6
   839f8:	f000 fbb2 	bl	84160 <__malloc_lock>
   839fc:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   83a00:	d226      	bcs.n	83a50 <_malloc_r+0x74>
   83a02:	4fc1      	ldr	r7, [pc, #772]	; (83d08 <_malloc_r+0x32c>)
   83a04:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   83a08:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
   83a0c:	68dc      	ldr	r4, [r3, #12]
   83a0e:	429c      	cmp	r4, r3
   83a10:	f000 81d2 	beq.w	83db8 <_malloc_r+0x3dc>
   83a14:	6863      	ldr	r3, [r4, #4]
   83a16:	68e2      	ldr	r2, [r4, #12]
   83a18:	f023 0303 	bic.w	r3, r3, #3
   83a1c:	4423      	add	r3, r4
   83a1e:	6858      	ldr	r0, [r3, #4]
   83a20:	68a1      	ldr	r1, [r4, #8]
   83a22:	f040 0501 	orr.w	r5, r0, #1
   83a26:	60ca      	str	r2, [r1, #12]
   83a28:	4630      	mov	r0, r6
   83a2a:	6091      	str	r1, [r2, #8]
   83a2c:	605d      	str	r5, [r3, #4]
   83a2e:	f000 fb99 	bl	84164 <__malloc_unlock>
   83a32:	3408      	adds	r4, #8
   83a34:	4620      	mov	r0, r4
   83a36:	b003      	add	sp, #12
   83a38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83a3c:	2510      	movs	r5, #16
   83a3e:	42a9      	cmp	r1, r5
   83a40:	d9d9      	bls.n	839f6 <_malloc_r+0x1a>
   83a42:	2400      	movs	r4, #0
   83a44:	230c      	movs	r3, #12
   83a46:	4620      	mov	r0, r4
   83a48:	6033      	str	r3, [r6, #0]
   83a4a:	b003      	add	sp, #12
   83a4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83a50:	ea5f 2c55 	movs.w	ip, r5, lsr #9
   83a54:	f000 8089 	beq.w	83b6a <_malloc_r+0x18e>
   83a58:	f1bc 0f04 	cmp.w	ip, #4
   83a5c:	f200 8160 	bhi.w	83d20 <_malloc_r+0x344>
   83a60:	ea4f 1c95 	mov.w	ip, r5, lsr #6
   83a64:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
   83a68:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83a6c:	4fa6      	ldr	r7, [pc, #664]	; (83d08 <_malloc_r+0x32c>)
   83a6e:	eb07 0181 	add.w	r1, r7, r1, lsl #2
   83a72:	68cc      	ldr	r4, [r1, #12]
   83a74:	42a1      	cmp	r1, r4
   83a76:	d105      	bne.n	83a84 <_malloc_r+0xa8>
   83a78:	e00c      	b.n	83a94 <_malloc_r+0xb8>
   83a7a:	2b00      	cmp	r3, #0
   83a7c:	da79      	bge.n	83b72 <_malloc_r+0x196>
   83a7e:	68e4      	ldr	r4, [r4, #12]
   83a80:	42a1      	cmp	r1, r4
   83a82:	d007      	beq.n	83a94 <_malloc_r+0xb8>
   83a84:	6862      	ldr	r2, [r4, #4]
   83a86:	f022 0203 	bic.w	r2, r2, #3
   83a8a:	1b53      	subs	r3, r2, r5
   83a8c:	2b0f      	cmp	r3, #15
   83a8e:	ddf4      	ble.n	83a7a <_malloc_r+0x9e>
   83a90:	f10c 3cff 	add.w	ip, ip, #4294967295
   83a94:	f10c 0c01 	add.w	ip, ip, #1
   83a98:	4b9b      	ldr	r3, [pc, #620]	; (83d08 <_malloc_r+0x32c>)
   83a9a:	693c      	ldr	r4, [r7, #16]
   83a9c:	f103 0e08 	add.w	lr, r3, #8
   83aa0:	4574      	cmp	r4, lr
   83aa2:	f000 817e 	beq.w	83da2 <_malloc_r+0x3c6>
   83aa6:	6861      	ldr	r1, [r4, #4]
   83aa8:	f021 0103 	bic.w	r1, r1, #3
   83aac:	1b4a      	subs	r2, r1, r5
   83aae:	2a0f      	cmp	r2, #15
   83ab0:	f300 8164 	bgt.w	83d7c <_malloc_r+0x3a0>
   83ab4:	2a00      	cmp	r2, #0
   83ab6:	f8c3 e014 	str.w	lr, [r3, #20]
   83aba:	f8c3 e010 	str.w	lr, [r3, #16]
   83abe:	da69      	bge.n	83b94 <_malloc_r+0x1b8>
   83ac0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   83ac4:	f080 813a 	bcs.w	83d3c <_malloc_r+0x360>
   83ac8:	08c9      	lsrs	r1, r1, #3
   83aca:	108a      	asrs	r2, r1, #2
   83acc:	f04f 0801 	mov.w	r8, #1
   83ad0:	fa08 f802 	lsl.w	r8, r8, r2
   83ad4:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   83ad8:	685a      	ldr	r2, [r3, #4]
   83ada:	6888      	ldr	r0, [r1, #8]
   83adc:	ea48 0202 	orr.w	r2, r8, r2
   83ae0:	60a0      	str	r0, [r4, #8]
   83ae2:	60e1      	str	r1, [r4, #12]
   83ae4:	605a      	str	r2, [r3, #4]
   83ae6:	608c      	str	r4, [r1, #8]
   83ae8:	60c4      	str	r4, [r0, #12]
   83aea:	ea4f 03ac 	mov.w	r3, ip, asr #2
   83aee:	2001      	movs	r0, #1
   83af0:	4098      	lsls	r0, r3
   83af2:	4290      	cmp	r0, r2
   83af4:	d85b      	bhi.n	83bae <_malloc_r+0x1d2>
   83af6:	4202      	tst	r2, r0
   83af8:	d106      	bne.n	83b08 <_malloc_r+0x12c>
   83afa:	f02c 0c03 	bic.w	ip, ip, #3
   83afe:	0040      	lsls	r0, r0, #1
   83b00:	4202      	tst	r2, r0
   83b02:	f10c 0c04 	add.w	ip, ip, #4
   83b06:	d0fa      	beq.n	83afe <_malloc_r+0x122>
   83b08:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
   83b0c:	4644      	mov	r4, r8
   83b0e:	46e1      	mov	r9, ip
   83b10:	68e3      	ldr	r3, [r4, #12]
   83b12:	429c      	cmp	r4, r3
   83b14:	d107      	bne.n	83b26 <_malloc_r+0x14a>
   83b16:	e146      	b.n	83da6 <_malloc_r+0x3ca>
   83b18:	2a00      	cmp	r2, #0
   83b1a:	f280 8157 	bge.w	83dcc <_malloc_r+0x3f0>
   83b1e:	68db      	ldr	r3, [r3, #12]
   83b20:	429c      	cmp	r4, r3
   83b22:	f000 8140 	beq.w	83da6 <_malloc_r+0x3ca>
   83b26:	6859      	ldr	r1, [r3, #4]
   83b28:	f021 0103 	bic.w	r1, r1, #3
   83b2c:	1b4a      	subs	r2, r1, r5
   83b2e:	2a0f      	cmp	r2, #15
   83b30:	ddf2      	ble.n	83b18 <_malloc_r+0x13c>
   83b32:	461c      	mov	r4, r3
   83b34:	f854 cf08 	ldr.w	ip, [r4, #8]!
   83b38:	68d9      	ldr	r1, [r3, #12]
   83b3a:	f045 0901 	orr.w	r9, r5, #1
   83b3e:	f042 0801 	orr.w	r8, r2, #1
   83b42:	441d      	add	r5, r3
   83b44:	f8c3 9004 	str.w	r9, [r3, #4]
   83b48:	4630      	mov	r0, r6
   83b4a:	f8cc 100c 	str.w	r1, [ip, #12]
   83b4e:	f8c1 c008 	str.w	ip, [r1, #8]
   83b52:	617d      	str	r5, [r7, #20]
   83b54:	613d      	str	r5, [r7, #16]
   83b56:	f8c5 e00c 	str.w	lr, [r5, #12]
   83b5a:	f8c5 e008 	str.w	lr, [r5, #8]
   83b5e:	f8c5 8004 	str.w	r8, [r5, #4]
   83b62:	50aa      	str	r2, [r5, r2]
   83b64:	f000 fafe 	bl	84164 <__malloc_unlock>
   83b68:	e764      	b.n	83a34 <_malloc_r+0x58>
   83b6a:	217e      	movs	r1, #126	; 0x7e
   83b6c:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
   83b70:	e77c      	b.n	83a6c <_malloc_r+0x90>
   83b72:	4422      	add	r2, r4
   83b74:	6850      	ldr	r0, [r2, #4]
   83b76:	68e3      	ldr	r3, [r4, #12]
   83b78:	68a1      	ldr	r1, [r4, #8]
   83b7a:	f040 0501 	orr.w	r5, r0, #1
   83b7e:	60cb      	str	r3, [r1, #12]
   83b80:	4630      	mov	r0, r6
   83b82:	6099      	str	r1, [r3, #8]
   83b84:	6055      	str	r5, [r2, #4]
   83b86:	f000 faed 	bl	84164 <__malloc_unlock>
   83b8a:	3408      	adds	r4, #8
   83b8c:	4620      	mov	r0, r4
   83b8e:	b003      	add	sp, #12
   83b90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83b94:	4421      	add	r1, r4
   83b96:	684b      	ldr	r3, [r1, #4]
   83b98:	4630      	mov	r0, r6
   83b9a:	f043 0301 	orr.w	r3, r3, #1
   83b9e:	604b      	str	r3, [r1, #4]
   83ba0:	f000 fae0 	bl	84164 <__malloc_unlock>
   83ba4:	3408      	adds	r4, #8
   83ba6:	4620      	mov	r0, r4
   83ba8:	b003      	add	sp, #12
   83baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83bae:	68bc      	ldr	r4, [r7, #8]
   83bb0:	6863      	ldr	r3, [r4, #4]
   83bb2:	f023 0903 	bic.w	r9, r3, #3
   83bb6:	45a9      	cmp	r9, r5
   83bb8:	d304      	bcc.n	83bc4 <_malloc_r+0x1e8>
   83bba:	ebc5 0309 	rsb	r3, r5, r9
   83bbe:	2b0f      	cmp	r3, #15
   83bc0:	f300 8091 	bgt.w	83ce6 <_malloc_r+0x30a>
   83bc4:	4b51      	ldr	r3, [pc, #324]	; (83d0c <_malloc_r+0x330>)
   83bc6:	4a52      	ldr	r2, [pc, #328]	; (83d10 <_malloc_r+0x334>)
   83bc8:	6819      	ldr	r1, [r3, #0]
   83bca:	6813      	ldr	r3, [r2, #0]
   83bcc:	eb05 0a01 	add.w	sl, r5, r1
   83bd0:	3301      	adds	r3, #1
   83bd2:	eb04 0b09 	add.w	fp, r4, r9
   83bd6:	f000 8161 	beq.w	83e9c <_malloc_r+0x4c0>
   83bda:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
   83bde:	f10a 0a0f 	add.w	sl, sl, #15
   83be2:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
   83be6:	f02a 0a0f 	bic.w	sl, sl, #15
   83bea:	4630      	mov	r0, r6
   83bec:	4651      	mov	r1, sl
   83bee:	9201      	str	r2, [sp, #4]
   83bf0:	f000 ffcc 	bl	84b8c <_sbrk_r>
   83bf4:	f1b0 3fff 	cmp.w	r0, #4294967295
   83bf8:	4680      	mov	r8, r0
   83bfa:	9a01      	ldr	r2, [sp, #4]
   83bfc:	f000 8101 	beq.w	83e02 <_malloc_r+0x426>
   83c00:	4583      	cmp	fp, r0
   83c02:	f200 80fb 	bhi.w	83dfc <_malloc_r+0x420>
   83c06:	f8df c114 	ldr.w	ip, [pc, #276]	; 83d1c <_malloc_r+0x340>
   83c0a:	45c3      	cmp	fp, r8
   83c0c:	f8dc 3000 	ldr.w	r3, [ip]
   83c10:	4453      	add	r3, sl
   83c12:	f8cc 3000 	str.w	r3, [ip]
   83c16:	f000 814a 	beq.w	83eae <_malloc_r+0x4d2>
   83c1a:	6812      	ldr	r2, [r2, #0]
   83c1c:	493c      	ldr	r1, [pc, #240]	; (83d10 <_malloc_r+0x334>)
   83c1e:	3201      	adds	r2, #1
   83c20:	bf1b      	ittet	ne
   83c22:	ebcb 0b08 	rsbne	fp, fp, r8
   83c26:	445b      	addne	r3, fp
   83c28:	f8c1 8000 	streq.w	r8, [r1]
   83c2c:	f8cc 3000 	strne.w	r3, [ip]
   83c30:	f018 0307 	ands.w	r3, r8, #7
   83c34:	f000 8114 	beq.w	83e60 <_malloc_r+0x484>
   83c38:	f1c3 0208 	rsb	r2, r3, #8
   83c3c:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
   83c40:	4490      	add	r8, r2
   83c42:	3308      	adds	r3, #8
   83c44:	44c2      	add	sl, r8
   83c46:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
   83c4a:	ebca 0a03 	rsb	sl, sl, r3
   83c4e:	4651      	mov	r1, sl
   83c50:	4630      	mov	r0, r6
   83c52:	f8cd c004 	str.w	ip, [sp, #4]
   83c56:	f000 ff99 	bl	84b8c <_sbrk_r>
   83c5a:	1c43      	adds	r3, r0, #1
   83c5c:	f8dd c004 	ldr.w	ip, [sp, #4]
   83c60:	f000 8135 	beq.w	83ece <_malloc_r+0x4f2>
   83c64:	ebc8 0200 	rsb	r2, r8, r0
   83c68:	4452      	add	r2, sl
   83c6a:	f042 0201 	orr.w	r2, r2, #1
   83c6e:	f8dc 3000 	ldr.w	r3, [ip]
   83c72:	42bc      	cmp	r4, r7
   83c74:	4453      	add	r3, sl
   83c76:	f8c7 8008 	str.w	r8, [r7, #8]
   83c7a:	f8cc 3000 	str.w	r3, [ip]
   83c7e:	f8c8 2004 	str.w	r2, [r8, #4]
   83c82:	f8df a098 	ldr.w	sl, [pc, #152]	; 83d1c <_malloc_r+0x340>
   83c86:	d015      	beq.n	83cb4 <_malloc_r+0x2d8>
   83c88:	f1b9 0f0f 	cmp.w	r9, #15
   83c8c:	f240 80eb 	bls.w	83e66 <_malloc_r+0x48a>
   83c90:	6861      	ldr	r1, [r4, #4]
   83c92:	f1a9 020c 	sub.w	r2, r9, #12
   83c96:	f022 0207 	bic.w	r2, r2, #7
   83c9a:	f001 0101 	and.w	r1, r1, #1
   83c9e:	ea42 0e01 	orr.w	lr, r2, r1
   83ca2:	2005      	movs	r0, #5
   83ca4:	18a1      	adds	r1, r4, r2
   83ca6:	2a0f      	cmp	r2, #15
   83ca8:	f8c4 e004 	str.w	lr, [r4, #4]
   83cac:	6048      	str	r0, [r1, #4]
   83cae:	6088      	str	r0, [r1, #8]
   83cb0:	f200 8111 	bhi.w	83ed6 <_malloc_r+0x4fa>
   83cb4:	4a17      	ldr	r2, [pc, #92]	; (83d14 <_malloc_r+0x338>)
   83cb6:	68bc      	ldr	r4, [r7, #8]
   83cb8:	6811      	ldr	r1, [r2, #0]
   83cba:	428b      	cmp	r3, r1
   83cbc:	bf88      	it	hi
   83cbe:	6013      	strhi	r3, [r2, #0]
   83cc0:	4a15      	ldr	r2, [pc, #84]	; (83d18 <_malloc_r+0x33c>)
   83cc2:	6811      	ldr	r1, [r2, #0]
   83cc4:	428b      	cmp	r3, r1
   83cc6:	bf88      	it	hi
   83cc8:	6013      	strhi	r3, [r2, #0]
   83cca:	6862      	ldr	r2, [r4, #4]
   83ccc:	f022 0203 	bic.w	r2, r2, #3
   83cd0:	4295      	cmp	r5, r2
   83cd2:	ebc5 0302 	rsb	r3, r5, r2
   83cd6:	d801      	bhi.n	83cdc <_malloc_r+0x300>
   83cd8:	2b0f      	cmp	r3, #15
   83cda:	dc04      	bgt.n	83ce6 <_malloc_r+0x30a>
   83cdc:	4630      	mov	r0, r6
   83cde:	f000 fa41 	bl	84164 <__malloc_unlock>
   83ce2:	2400      	movs	r4, #0
   83ce4:	e6a6      	b.n	83a34 <_malloc_r+0x58>
   83ce6:	f045 0201 	orr.w	r2, r5, #1
   83cea:	f043 0301 	orr.w	r3, r3, #1
   83cee:	4425      	add	r5, r4
   83cf0:	6062      	str	r2, [r4, #4]
   83cf2:	4630      	mov	r0, r6
   83cf4:	60bd      	str	r5, [r7, #8]
   83cf6:	606b      	str	r3, [r5, #4]
   83cf8:	f000 fa34 	bl	84164 <__malloc_unlock>
   83cfc:	3408      	adds	r4, #8
   83cfe:	4620      	mov	r0, r4
   83d00:	b003      	add	sp, #12
   83d02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83d06:	bf00      	nop
   83d08:	2007046c 	.word	0x2007046c
   83d0c:	2007302c 	.word	0x2007302c
   83d10:	20070878 	.word	0x20070878
   83d14:	20073028 	.word	0x20073028
   83d18:	20073024 	.word	0x20073024
   83d1c:	20073030 	.word	0x20073030
   83d20:	f1bc 0f14 	cmp.w	ip, #20
   83d24:	d961      	bls.n	83dea <_malloc_r+0x40e>
   83d26:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
   83d2a:	f200 808f 	bhi.w	83e4c <_malloc_r+0x470>
   83d2e:	ea4f 3c15 	mov.w	ip, r5, lsr #12
   83d32:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
   83d36:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83d3a:	e697      	b.n	83a6c <_malloc_r+0x90>
   83d3c:	0a4b      	lsrs	r3, r1, #9
   83d3e:	2b04      	cmp	r3, #4
   83d40:	d958      	bls.n	83df4 <_malloc_r+0x418>
   83d42:	2b14      	cmp	r3, #20
   83d44:	f200 80ad 	bhi.w	83ea2 <_malloc_r+0x4c6>
   83d48:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   83d4c:	0050      	lsls	r0, r2, #1
   83d4e:	eb07 0080 	add.w	r0, r7, r0, lsl #2
   83d52:	6883      	ldr	r3, [r0, #8]
   83d54:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 83f10 <_malloc_r+0x534>
   83d58:	4283      	cmp	r3, r0
   83d5a:	f000 808a 	beq.w	83e72 <_malloc_r+0x496>
   83d5e:	685a      	ldr	r2, [r3, #4]
   83d60:	f022 0203 	bic.w	r2, r2, #3
   83d64:	4291      	cmp	r1, r2
   83d66:	d202      	bcs.n	83d6e <_malloc_r+0x392>
   83d68:	689b      	ldr	r3, [r3, #8]
   83d6a:	4298      	cmp	r0, r3
   83d6c:	d1f7      	bne.n	83d5e <_malloc_r+0x382>
   83d6e:	68d9      	ldr	r1, [r3, #12]
   83d70:	687a      	ldr	r2, [r7, #4]
   83d72:	60e1      	str	r1, [r4, #12]
   83d74:	60a3      	str	r3, [r4, #8]
   83d76:	608c      	str	r4, [r1, #8]
   83d78:	60dc      	str	r4, [r3, #12]
   83d7a:	e6b6      	b.n	83aea <_malloc_r+0x10e>
   83d7c:	f045 0701 	orr.w	r7, r5, #1
   83d80:	f042 0101 	orr.w	r1, r2, #1
   83d84:	4425      	add	r5, r4
   83d86:	6067      	str	r7, [r4, #4]
   83d88:	4630      	mov	r0, r6
   83d8a:	615d      	str	r5, [r3, #20]
   83d8c:	611d      	str	r5, [r3, #16]
   83d8e:	f8c5 e00c 	str.w	lr, [r5, #12]
   83d92:	f8c5 e008 	str.w	lr, [r5, #8]
   83d96:	6069      	str	r1, [r5, #4]
   83d98:	50aa      	str	r2, [r5, r2]
   83d9a:	3408      	adds	r4, #8
   83d9c:	f000 f9e2 	bl	84164 <__malloc_unlock>
   83da0:	e648      	b.n	83a34 <_malloc_r+0x58>
   83da2:	685a      	ldr	r2, [r3, #4]
   83da4:	e6a1      	b.n	83aea <_malloc_r+0x10e>
   83da6:	f109 0901 	add.w	r9, r9, #1
   83daa:	f019 0f03 	tst.w	r9, #3
   83dae:	f104 0408 	add.w	r4, r4, #8
   83db2:	f47f aead 	bne.w	83b10 <_malloc_r+0x134>
   83db6:	e02d      	b.n	83e14 <_malloc_r+0x438>
   83db8:	f104 0308 	add.w	r3, r4, #8
   83dbc:	6964      	ldr	r4, [r4, #20]
   83dbe:	42a3      	cmp	r3, r4
   83dc0:	bf08      	it	eq
   83dc2:	f10c 0c02 	addeq.w	ip, ip, #2
   83dc6:	f43f ae67 	beq.w	83a98 <_malloc_r+0xbc>
   83dca:	e623      	b.n	83a14 <_malloc_r+0x38>
   83dcc:	4419      	add	r1, r3
   83dce:	6848      	ldr	r0, [r1, #4]
   83dd0:	461c      	mov	r4, r3
   83dd2:	f854 2f08 	ldr.w	r2, [r4, #8]!
   83dd6:	68db      	ldr	r3, [r3, #12]
   83dd8:	f040 0501 	orr.w	r5, r0, #1
   83ddc:	604d      	str	r5, [r1, #4]
   83dde:	4630      	mov	r0, r6
   83de0:	60d3      	str	r3, [r2, #12]
   83de2:	609a      	str	r2, [r3, #8]
   83de4:	f000 f9be 	bl	84164 <__malloc_unlock>
   83de8:	e624      	b.n	83a34 <_malloc_r+0x58>
   83dea:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
   83dee:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83df2:	e63b      	b.n	83a6c <_malloc_r+0x90>
   83df4:	098a      	lsrs	r2, r1, #6
   83df6:	3238      	adds	r2, #56	; 0x38
   83df8:	0050      	lsls	r0, r2, #1
   83dfa:	e7a8      	b.n	83d4e <_malloc_r+0x372>
   83dfc:	42bc      	cmp	r4, r7
   83dfe:	f43f af02 	beq.w	83c06 <_malloc_r+0x22a>
   83e02:	68bc      	ldr	r4, [r7, #8]
   83e04:	6862      	ldr	r2, [r4, #4]
   83e06:	f022 0203 	bic.w	r2, r2, #3
   83e0a:	e761      	b.n	83cd0 <_malloc_r+0x2f4>
   83e0c:	f8d8 8000 	ldr.w	r8, [r8]
   83e10:	4598      	cmp	r8, r3
   83e12:	d17a      	bne.n	83f0a <_malloc_r+0x52e>
   83e14:	f01c 0f03 	tst.w	ip, #3
   83e18:	f1a8 0308 	sub.w	r3, r8, #8
   83e1c:	f10c 3cff 	add.w	ip, ip, #4294967295
   83e20:	d1f4      	bne.n	83e0c <_malloc_r+0x430>
   83e22:	687b      	ldr	r3, [r7, #4]
   83e24:	ea23 0300 	bic.w	r3, r3, r0
   83e28:	607b      	str	r3, [r7, #4]
   83e2a:	0040      	lsls	r0, r0, #1
   83e2c:	4298      	cmp	r0, r3
   83e2e:	f63f aebe 	bhi.w	83bae <_malloc_r+0x1d2>
   83e32:	2800      	cmp	r0, #0
   83e34:	f43f aebb 	beq.w	83bae <_malloc_r+0x1d2>
   83e38:	4203      	tst	r3, r0
   83e3a:	46cc      	mov	ip, r9
   83e3c:	f47f ae64 	bne.w	83b08 <_malloc_r+0x12c>
   83e40:	0040      	lsls	r0, r0, #1
   83e42:	4203      	tst	r3, r0
   83e44:	f10c 0c04 	add.w	ip, ip, #4
   83e48:	d0fa      	beq.n	83e40 <_malloc_r+0x464>
   83e4a:	e65d      	b.n	83b08 <_malloc_r+0x12c>
   83e4c:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
   83e50:	d819      	bhi.n	83e86 <_malloc_r+0x4aa>
   83e52:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
   83e56:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
   83e5a:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83e5e:	e605      	b.n	83a6c <_malloc_r+0x90>
   83e60:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   83e64:	e6ee      	b.n	83c44 <_malloc_r+0x268>
   83e66:	2301      	movs	r3, #1
   83e68:	f8c8 3004 	str.w	r3, [r8, #4]
   83e6c:	4644      	mov	r4, r8
   83e6e:	2200      	movs	r2, #0
   83e70:	e72e      	b.n	83cd0 <_malloc_r+0x2f4>
   83e72:	1092      	asrs	r2, r2, #2
   83e74:	2001      	movs	r0, #1
   83e76:	4090      	lsls	r0, r2
   83e78:	f8d8 2004 	ldr.w	r2, [r8, #4]
   83e7c:	4619      	mov	r1, r3
   83e7e:	4302      	orrs	r2, r0
   83e80:	f8c8 2004 	str.w	r2, [r8, #4]
   83e84:	e775      	b.n	83d72 <_malloc_r+0x396>
   83e86:	f240 5354 	movw	r3, #1364	; 0x554
   83e8a:	459c      	cmp	ip, r3
   83e8c:	d81b      	bhi.n	83ec6 <_malloc_r+0x4ea>
   83e8e:	ea4f 4c95 	mov.w	ip, r5, lsr #18
   83e92:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
   83e96:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83e9a:	e5e7      	b.n	83a6c <_malloc_r+0x90>
   83e9c:	f10a 0a10 	add.w	sl, sl, #16
   83ea0:	e6a3      	b.n	83bea <_malloc_r+0x20e>
   83ea2:	2b54      	cmp	r3, #84	; 0x54
   83ea4:	d81f      	bhi.n	83ee6 <_malloc_r+0x50a>
   83ea6:	0b0a      	lsrs	r2, r1, #12
   83ea8:	326e      	adds	r2, #110	; 0x6e
   83eaa:	0050      	lsls	r0, r2, #1
   83eac:	e74f      	b.n	83d4e <_malloc_r+0x372>
   83eae:	f3cb 010b 	ubfx	r1, fp, #0, #12
   83eb2:	2900      	cmp	r1, #0
   83eb4:	f47f aeb1 	bne.w	83c1a <_malloc_r+0x23e>
   83eb8:	eb0a 0109 	add.w	r1, sl, r9
   83ebc:	68ba      	ldr	r2, [r7, #8]
   83ebe:	f041 0101 	orr.w	r1, r1, #1
   83ec2:	6051      	str	r1, [r2, #4]
   83ec4:	e6f6      	b.n	83cb4 <_malloc_r+0x2d8>
   83ec6:	21fc      	movs	r1, #252	; 0xfc
   83ec8:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
   83ecc:	e5ce      	b.n	83a6c <_malloc_r+0x90>
   83ece:	2201      	movs	r2, #1
   83ed0:	f04f 0a00 	mov.w	sl, #0
   83ed4:	e6cb      	b.n	83c6e <_malloc_r+0x292>
   83ed6:	f104 0108 	add.w	r1, r4, #8
   83eda:	4630      	mov	r0, r6
   83edc:	f7ff fcae 	bl	8383c <_free_r>
   83ee0:	f8da 3000 	ldr.w	r3, [sl]
   83ee4:	e6e6      	b.n	83cb4 <_malloc_r+0x2d8>
   83ee6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   83eea:	d803      	bhi.n	83ef4 <_malloc_r+0x518>
   83eec:	0bca      	lsrs	r2, r1, #15
   83eee:	3277      	adds	r2, #119	; 0x77
   83ef0:	0050      	lsls	r0, r2, #1
   83ef2:	e72c      	b.n	83d4e <_malloc_r+0x372>
   83ef4:	f240 5254 	movw	r2, #1364	; 0x554
   83ef8:	4293      	cmp	r3, r2
   83efa:	d803      	bhi.n	83f04 <_malloc_r+0x528>
   83efc:	0c8a      	lsrs	r2, r1, #18
   83efe:	327c      	adds	r2, #124	; 0x7c
   83f00:	0050      	lsls	r0, r2, #1
   83f02:	e724      	b.n	83d4e <_malloc_r+0x372>
   83f04:	20fc      	movs	r0, #252	; 0xfc
   83f06:	227e      	movs	r2, #126	; 0x7e
   83f08:	e721      	b.n	83d4e <_malloc_r+0x372>
   83f0a:	687b      	ldr	r3, [r7, #4]
   83f0c:	e78d      	b.n	83e2a <_malloc_r+0x44e>
   83f0e:	bf00      	nop
   83f10:	2007046c 	.word	0x2007046c

00083f14 <memchr>:
   83f14:	0783      	lsls	r3, r0, #30
   83f16:	b470      	push	{r4, r5, r6}
   83f18:	b2c9      	uxtb	r1, r1
   83f1a:	d040      	beq.n	83f9e <memchr+0x8a>
   83f1c:	1e54      	subs	r4, r2, #1
   83f1e:	b32a      	cbz	r2, 83f6c <memchr+0x58>
   83f20:	7803      	ldrb	r3, [r0, #0]
   83f22:	428b      	cmp	r3, r1
   83f24:	d023      	beq.n	83f6e <memchr+0x5a>
   83f26:	1c43      	adds	r3, r0, #1
   83f28:	e004      	b.n	83f34 <memchr+0x20>
   83f2a:	b1fc      	cbz	r4, 83f6c <memchr+0x58>
   83f2c:	7805      	ldrb	r5, [r0, #0]
   83f2e:	4614      	mov	r4, r2
   83f30:	428d      	cmp	r5, r1
   83f32:	d01c      	beq.n	83f6e <memchr+0x5a>
   83f34:	f013 0f03 	tst.w	r3, #3
   83f38:	4618      	mov	r0, r3
   83f3a:	f104 32ff 	add.w	r2, r4, #4294967295
   83f3e:	f103 0301 	add.w	r3, r3, #1
   83f42:	d1f2      	bne.n	83f2a <memchr+0x16>
   83f44:	2c03      	cmp	r4, #3
   83f46:	d814      	bhi.n	83f72 <memchr+0x5e>
   83f48:	1e65      	subs	r5, r4, #1
   83f4a:	b354      	cbz	r4, 83fa2 <memchr+0x8e>
   83f4c:	7803      	ldrb	r3, [r0, #0]
   83f4e:	428b      	cmp	r3, r1
   83f50:	d00d      	beq.n	83f6e <memchr+0x5a>
   83f52:	1c42      	adds	r2, r0, #1
   83f54:	2300      	movs	r3, #0
   83f56:	e002      	b.n	83f5e <memchr+0x4a>
   83f58:	7804      	ldrb	r4, [r0, #0]
   83f5a:	428c      	cmp	r4, r1
   83f5c:	d007      	beq.n	83f6e <memchr+0x5a>
   83f5e:	42ab      	cmp	r3, r5
   83f60:	4610      	mov	r0, r2
   83f62:	f103 0301 	add.w	r3, r3, #1
   83f66:	f102 0201 	add.w	r2, r2, #1
   83f6a:	d1f5      	bne.n	83f58 <memchr+0x44>
   83f6c:	2000      	movs	r0, #0
   83f6e:	bc70      	pop	{r4, r5, r6}
   83f70:	4770      	bx	lr
   83f72:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
   83f76:	4603      	mov	r3, r0
   83f78:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
   83f7c:	681a      	ldr	r2, [r3, #0]
   83f7e:	4618      	mov	r0, r3
   83f80:	4072      	eors	r2, r6
   83f82:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
   83f86:	ea25 0202 	bic.w	r2, r5, r2
   83f8a:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
   83f8e:	f103 0304 	add.w	r3, r3, #4
   83f92:	d1d9      	bne.n	83f48 <memchr+0x34>
   83f94:	3c04      	subs	r4, #4
   83f96:	2c03      	cmp	r4, #3
   83f98:	4618      	mov	r0, r3
   83f9a:	d8ef      	bhi.n	83f7c <memchr+0x68>
   83f9c:	e7d4      	b.n	83f48 <memchr+0x34>
   83f9e:	4614      	mov	r4, r2
   83fa0:	e7d0      	b.n	83f44 <memchr+0x30>
   83fa2:	4620      	mov	r0, r4
   83fa4:	e7e3      	b.n	83f6e <memchr+0x5a>
   83fa6:	bf00      	nop

00083fa8 <memcpy>:
   83fa8:	4684      	mov	ip, r0
   83faa:	ea41 0300 	orr.w	r3, r1, r0
   83fae:	f013 0303 	ands.w	r3, r3, #3
   83fb2:	d149      	bne.n	84048 <memcpy+0xa0>
   83fb4:	3a40      	subs	r2, #64	; 0x40
   83fb6:	d323      	bcc.n	84000 <memcpy+0x58>
   83fb8:	680b      	ldr	r3, [r1, #0]
   83fba:	6003      	str	r3, [r0, #0]
   83fbc:	684b      	ldr	r3, [r1, #4]
   83fbe:	6043      	str	r3, [r0, #4]
   83fc0:	688b      	ldr	r3, [r1, #8]
   83fc2:	6083      	str	r3, [r0, #8]
   83fc4:	68cb      	ldr	r3, [r1, #12]
   83fc6:	60c3      	str	r3, [r0, #12]
   83fc8:	690b      	ldr	r3, [r1, #16]
   83fca:	6103      	str	r3, [r0, #16]
   83fcc:	694b      	ldr	r3, [r1, #20]
   83fce:	6143      	str	r3, [r0, #20]
   83fd0:	698b      	ldr	r3, [r1, #24]
   83fd2:	6183      	str	r3, [r0, #24]
   83fd4:	69cb      	ldr	r3, [r1, #28]
   83fd6:	61c3      	str	r3, [r0, #28]
   83fd8:	6a0b      	ldr	r3, [r1, #32]
   83fda:	6203      	str	r3, [r0, #32]
   83fdc:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   83fde:	6243      	str	r3, [r0, #36]	; 0x24
   83fe0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   83fe2:	6283      	str	r3, [r0, #40]	; 0x28
   83fe4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   83fe6:	62c3      	str	r3, [r0, #44]	; 0x2c
   83fe8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   83fea:	6303      	str	r3, [r0, #48]	; 0x30
   83fec:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   83fee:	6343      	str	r3, [r0, #52]	; 0x34
   83ff0:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   83ff2:	6383      	str	r3, [r0, #56]	; 0x38
   83ff4:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   83ff6:	63c3      	str	r3, [r0, #60]	; 0x3c
   83ff8:	3040      	adds	r0, #64	; 0x40
   83ffa:	3140      	adds	r1, #64	; 0x40
   83ffc:	3a40      	subs	r2, #64	; 0x40
   83ffe:	d2db      	bcs.n	83fb8 <memcpy+0x10>
   84000:	3230      	adds	r2, #48	; 0x30
   84002:	d30b      	bcc.n	8401c <memcpy+0x74>
   84004:	680b      	ldr	r3, [r1, #0]
   84006:	6003      	str	r3, [r0, #0]
   84008:	684b      	ldr	r3, [r1, #4]
   8400a:	6043      	str	r3, [r0, #4]
   8400c:	688b      	ldr	r3, [r1, #8]
   8400e:	6083      	str	r3, [r0, #8]
   84010:	68cb      	ldr	r3, [r1, #12]
   84012:	60c3      	str	r3, [r0, #12]
   84014:	3010      	adds	r0, #16
   84016:	3110      	adds	r1, #16
   84018:	3a10      	subs	r2, #16
   8401a:	d2f3      	bcs.n	84004 <memcpy+0x5c>
   8401c:	320c      	adds	r2, #12
   8401e:	d305      	bcc.n	8402c <memcpy+0x84>
   84020:	f851 3b04 	ldr.w	r3, [r1], #4
   84024:	f840 3b04 	str.w	r3, [r0], #4
   84028:	3a04      	subs	r2, #4
   8402a:	d2f9      	bcs.n	84020 <memcpy+0x78>
   8402c:	3204      	adds	r2, #4
   8402e:	d008      	beq.n	84042 <memcpy+0x9a>
   84030:	07d2      	lsls	r2, r2, #31
   84032:	bf1c      	itt	ne
   84034:	f811 3b01 	ldrbne.w	r3, [r1], #1
   84038:	f800 3b01 	strbne.w	r3, [r0], #1
   8403c:	d301      	bcc.n	84042 <memcpy+0x9a>
   8403e:	880b      	ldrh	r3, [r1, #0]
   84040:	8003      	strh	r3, [r0, #0]
   84042:	4660      	mov	r0, ip
   84044:	4770      	bx	lr
   84046:	bf00      	nop
   84048:	2a08      	cmp	r2, #8
   8404a:	d313      	bcc.n	84074 <memcpy+0xcc>
   8404c:	078b      	lsls	r3, r1, #30
   8404e:	d0b1      	beq.n	83fb4 <memcpy+0xc>
   84050:	f010 0303 	ands.w	r3, r0, #3
   84054:	d0ae      	beq.n	83fb4 <memcpy+0xc>
   84056:	f1c3 0304 	rsb	r3, r3, #4
   8405a:	1ad2      	subs	r2, r2, r3
   8405c:	07db      	lsls	r3, r3, #31
   8405e:	bf1c      	itt	ne
   84060:	f811 3b01 	ldrbne.w	r3, [r1], #1
   84064:	f800 3b01 	strbne.w	r3, [r0], #1
   84068:	d3a4      	bcc.n	83fb4 <memcpy+0xc>
   8406a:	f831 3b02 	ldrh.w	r3, [r1], #2
   8406e:	f820 3b02 	strh.w	r3, [r0], #2
   84072:	e79f      	b.n	83fb4 <memcpy+0xc>
   84074:	3a04      	subs	r2, #4
   84076:	d3d9      	bcc.n	8402c <memcpy+0x84>
   84078:	3a01      	subs	r2, #1
   8407a:	f811 3b01 	ldrb.w	r3, [r1], #1
   8407e:	f800 3b01 	strb.w	r3, [r0], #1
   84082:	d2f9      	bcs.n	84078 <memcpy+0xd0>
   84084:	780b      	ldrb	r3, [r1, #0]
   84086:	7003      	strb	r3, [r0, #0]
   84088:	784b      	ldrb	r3, [r1, #1]
   8408a:	7043      	strb	r3, [r0, #1]
   8408c:	788b      	ldrb	r3, [r1, #2]
   8408e:	7083      	strb	r3, [r0, #2]
   84090:	4660      	mov	r0, ip
   84092:	4770      	bx	lr

00084094 <memmove>:
   84094:	4288      	cmp	r0, r1
   84096:	b4f0      	push	{r4, r5, r6, r7}
   84098:	d910      	bls.n	840bc <memmove+0x28>
   8409a:	188c      	adds	r4, r1, r2
   8409c:	42a0      	cmp	r0, r4
   8409e:	d20d      	bcs.n	840bc <memmove+0x28>
   840a0:	1885      	adds	r5, r0, r2
   840a2:	1e53      	subs	r3, r2, #1
   840a4:	b142      	cbz	r2, 840b8 <memmove+0x24>
   840a6:	4621      	mov	r1, r4
   840a8:	462a      	mov	r2, r5
   840aa:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
   840ae:	3b01      	subs	r3, #1
   840b0:	f802 4d01 	strb.w	r4, [r2, #-1]!
   840b4:	1c5c      	adds	r4, r3, #1
   840b6:	d1f8      	bne.n	840aa <memmove+0x16>
   840b8:	bcf0      	pop	{r4, r5, r6, r7}
   840ba:	4770      	bx	lr
   840bc:	2a0f      	cmp	r2, #15
   840be:	d944      	bls.n	8414a <memmove+0xb6>
   840c0:	ea40 0301 	orr.w	r3, r0, r1
   840c4:	079b      	lsls	r3, r3, #30
   840c6:	d144      	bne.n	84152 <memmove+0xbe>
   840c8:	f1a2 0710 	sub.w	r7, r2, #16
   840cc:	093f      	lsrs	r7, r7, #4
   840ce:	eb00 1607 	add.w	r6, r0, r7, lsl #4
   840d2:	3610      	adds	r6, #16
   840d4:	460c      	mov	r4, r1
   840d6:	4603      	mov	r3, r0
   840d8:	6825      	ldr	r5, [r4, #0]
   840da:	3310      	adds	r3, #16
   840dc:	f843 5c10 	str.w	r5, [r3, #-16]
   840e0:	6865      	ldr	r5, [r4, #4]
   840e2:	3410      	adds	r4, #16
   840e4:	f843 5c0c 	str.w	r5, [r3, #-12]
   840e8:	f854 5c08 	ldr.w	r5, [r4, #-8]
   840ec:	f843 5c08 	str.w	r5, [r3, #-8]
   840f0:	f854 5c04 	ldr.w	r5, [r4, #-4]
   840f4:	f843 5c04 	str.w	r5, [r3, #-4]
   840f8:	42b3      	cmp	r3, r6
   840fa:	d1ed      	bne.n	840d8 <memmove+0x44>
   840fc:	1c7b      	adds	r3, r7, #1
   840fe:	f002 0c0f 	and.w	ip, r2, #15
   84102:	011b      	lsls	r3, r3, #4
   84104:	f1bc 0f03 	cmp.w	ip, #3
   84108:	4419      	add	r1, r3
   8410a:	4403      	add	r3, r0
   8410c:	d923      	bls.n	84156 <memmove+0xc2>
   8410e:	460e      	mov	r6, r1
   84110:	461d      	mov	r5, r3
   84112:	4664      	mov	r4, ip
   84114:	f856 7b04 	ldr.w	r7, [r6], #4
   84118:	3c04      	subs	r4, #4
   8411a:	2c03      	cmp	r4, #3
   8411c:	f845 7b04 	str.w	r7, [r5], #4
   84120:	d8f8      	bhi.n	84114 <memmove+0x80>
   84122:	f1ac 0404 	sub.w	r4, ip, #4
   84126:	f024 0403 	bic.w	r4, r4, #3
   8412a:	3404      	adds	r4, #4
   8412c:	f002 0203 	and.w	r2, r2, #3
   84130:	4423      	add	r3, r4
   84132:	4421      	add	r1, r4
   84134:	2a00      	cmp	r2, #0
   84136:	d0bf      	beq.n	840b8 <memmove+0x24>
   84138:	441a      	add	r2, r3
   8413a:	f811 4b01 	ldrb.w	r4, [r1], #1
   8413e:	f803 4b01 	strb.w	r4, [r3], #1
   84142:	4293      	cmp	r3, r2
   84144:	d1f9      	bne.n	8413a <memmove+0xa6>
   84146:	bcf0      	pop	{r4, r5, r6, r7}
   84148:	4770      	bx	lr
   8414a:	4603      	mov	r3, r0
   8414c:	2a00      	cmp	r2, #0
   8414e:	d1f3      	bne.n	84138 <memmove+0xa4>
   84150:	e7b2      	b.n	840b8 <memmove+0x24>
   84152:	4603      	mov	r3, r0
   84154:	e7f0      	b.n	84138 <memmove+0xa4>
   84156:	4662      	mov	r2, ip
   84158:	2a00      	cmp	r2, #0
   8415a:	d1ed      	bne.n	84138 <memmove+0xa4>
   8415c:	e7ac      	b.n	840b8 <memmove+0x24>
   8415e:	bf00      	nop

00084160 <__malloc_lock>:
   84160:	4770      	bx	lr
   84162:	bf00      	nop

00084164 <__malloc_unlock>:
   84164:	4770      	bx	lr
   84166:	bf00      	nop

00084168 <_Balloc>:
   84168:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
   8416a:	b570      	push	{r4, r5, r6, lr}
   8416c:	4605      	mov	r5, r0
   8416e:	460c      	mov	r4, r1
   84170:	b14a      	cbz	r2, 84186 <_Balloc+0x1e>
   84172:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
   84176:	b180      	cbz	r0, 8419a <_Balloc+0x32>
   84178:	6801      	ldr	r1, [r0, #0]
   8417a:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
   8417e:	2200      	movs	r2, #0
   84180:	6102      	str	r2, [r0, #16]
   84182:	60c2      	str	r2, [r0, #12]
   84184:	bd70      	pop	{r4, r5, r6, pc}
   84186:	2221      	movs	r2, #33	; 0x21
   84188:	2104      	movs	r1, #4
   8418a:	f000 fde5 	bl	84d58 <_calloc_r>
   8418e:	64e8      	str	r0, [r5, #76]	; 0x4c
   84190:	4602      	mov	r2, r0
   84192:	2800      	cmp	r0, #0
   84194:	d1ed      	bne.n	84172 <_Balloc+0xa>
   84196:	2000      	movs	r0, #0
   84198:	bd70      	pop	{r4, r5, r6, pc}
   8419a:	2101      	movs	r1, #1
   8419c:	fa01 f604 	lsl.w	r6, r1, r4
   841a0:	1d72      	adds	r2, r6, #5
   841a2:	4628      	mov	r0, r5
   841a4:	0092      	lsls	r2, r2, #2
   841a6:	f000 fdd7 	bl	84d58 <_calloc_r>
   841aa:	2800      	cmp	r0, #0
   841ac:	d0f3      	beq.n	84196 <_Balloc+0x2e>
   841ae:	6044      	str	r4, [r0, #4]
   841b0:	6086      	str	r6, [r0, #8]
   841b2:	e7e4      	b.n	8417e <_Balloc+0x16>

000841b4 <_Bfree>:
   841b4:	b131      	cbz	r1, 841c4 <_Bfree+0x10>
   841b6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   841b8:	684a      	ldr	r2, [r1, #4]
   841ba:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   841be:	6008      	str	r0, [r1, #0]
   841c0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   841c4:	4770      	bx	lr
   841c6:	bf00      	nop

000841c8 <__multadd>:
   841c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   841cc:	690f      	ldr	r7, [r1, #16]
   841ce:	b083      	sub	sp, #12
   841d0:	4688      	mov	r8, r1
   841d2:	4681      	mov	r9, r0
   841d4:	f101 0514 	add.w	r5, r1, #20
   841d8:	2400      	movs	r4, #0
   841da:	682e      	ldr	r6, [r5, #0]
   841dc:	3401      	adds	r4, #1
   841de:	b2b1      	uxth	r1, r6
   841e0:	0c36      	lsrs	r6, r6, #16
   841e2:	fb02 3301 	mla	r3, r2, r1, r3
   841e6:	fb02 f606 	mul.w	r6, r2, r6
   841ea:	b299      	uxth	r1, r3
   841ec:	eb06 4313 	add.w	r3, r6, r3, lsr #16
   841f0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
   841f4:	42a7      	cmp	r7, r4
   841f6:	f845 1b04 	str.w	r1, [r5], #4
   841fa:	ea4f 4313 	mov.w	r3, r3, lsr #16
   841fe:	dcec      	bgt.n	841da <__multadd+0x12>
   84200:	b14b      	cbz	r3, 84216 <__multadd+0x4e>
   84202:	f8d8 2008 	ldr.w	r2, [r8, #8]
   84206:	4297      	cmp	r7, r2
   84208:	da09      	bge.n	8421e <__multadd+0x56>
   8420a:	eb08 0287 	add.w	r2, r8, r7, lsl #2
   8420e:	3701      	adds	r7, #1
   84210:	6153      	str	r3, [r2, #20]
   84212:	f8c8 7010 	str.w	r7, [r8, #16]
   84216:	4640      	mov	r0, r8
   84218:	b003      	add	sp, #12
   8421a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8421e:	f8d8 1004 	ldr.w	r1, [r8, #4]
   84222:	4648      	mov	r0, r9
   84224:	3101      	adds	r1, #1
   84226:	9301      	str	r3, [sp, #4]
   84228:	f7ff ff9e 	bl	84168 <_Balloc>
   8422c:	f8d8 2010 	ldr.w	r2, [r8, #16]
   84230:	f108 010c 	add.w	r1, r8, #12
   84234:	3202      	adds	r2, #2
   84236:	4604      	mov	r4, r0
   84238:	0092      	lsls	r2, r2, #2
   8423a:	300c      	adds	r0, #12
   8423c:	f7ff feb4 	bl	83fa8 <memcpy>
   84240:	f8d9 204c 	ldr.w	r2, [r9, #76]	; 0x4c
   84244:	f8d8 1004 	ldr.w	r1, [r8, #4]
   84248:	9b01      	ldr	r3, [sp, #4]
   8424a:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   8424e:	f8c8 0000 	str.w	r0, [r8]
   84252:	f842 8021 	str.w	r8, [r2, r1, lsl #2]
   84256:	46a0      	mov	r8, r4
   84258:	e7d7      	b.n	8420a <__multadd+0x42>
   8425a:	bf00      	nop

0008425c <__hi0bits>:
   8425c:	0c03      	lsrs	r3, r0, #16
   8425e:	041b      	lsls	r3, r3, #16
   84260:	b9b3      	cbnz	r3, 84290 <__hi0bits+0x34>
   84262:	0400      	lsls	r0, r0, #16
   84264:	2310      	movs	r3, #16
   84266:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   8426a:	bf04      	itt	eq
   8426c:	0200      	lsleq	r0, r0, #8
   8426e:	3308      	addeq	r3, #8
   84270:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   84274:	bf04      	itt	eq
   84276:	0100      	lsleq	r0, r0, #4
   84278:	3304      	addeq	r3, #4
   8427a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   8427e:	bf04      	itt	eq
   84280:	0080      	lsleq	r0, r0, #2
   84282:	3302      	addeq	r3, #2
   84284:	2800      	cmp	r0, #0
   84286:	db07      	blt.n	84298 <__hi0bits+0x3c>
   84288:	0042      	lsls	r2, r0, #1
   8428a:	d403      	bmi.n	84294 <__hi0bits+0x38>
   8428c:	2020      	movs	r0, #32
   8428e:	4770      	bx	lr
   84290:	2300      	movs	r3, #0
   84292:	e7e8      	b.n	84266 <__hi0bits+0xa>
   84294:	1c58      	adds	r0, r3, #1
   84296:	4770      	bx	lr
   84298:	4618      	mov	r0, r3
   8429a:	4770      	bx	lr

0008429c <__lo0bits>:
   8429c:	6803      	ldr	r3, [r0, #0]
   8429e:	f013 0207 	ands.w	r2, r3, #7
   842a2:	d007      	beq.n	842b4 <__lo0bits+0x18>
   842a4:	07d9      	lsls	r1, r3, #31
   842a6:	d420      	bmi.n	842ea <__lo0bits+0x4e>
   842a8:	079a      	lsls	r2, r3, #30
   842aa:	d420      	bmi.n	842ee <__lo0bits+0x52>
   842ac:	089b      	lsrs	r3, r3, #2
   842ae:	6003      	str	r3, [r0, #0]
   842b0:	2002      	movs	r0, #2
   842b2:	4770      	bx	lr
   842b4:	b299      	uxth	r1, r3
   842b6:	b909      	cbnz	r1, 842bc <__lo0bits+0x20>
   842b8:	0c1b      	lsrs	r3, r3, #16
   842ba:	2210      	movs	r2, #16
   842bc:	f013 0fff 	tst.w	r3, #255	; 0xff
   842c0:	bf04      	itt	eq
   842c2:	0a1b      	lsreq	r3, r3, #8
   842c4:	3208      	addeq	r2, #8
   842c6:	0719      	lsls	r1, r3, #28
   842c8:	bf04      	itt	eq
   842ca:	091b      	lsreq	r3, r3, #4
   842cc:	3204      	addeq	r2, #4
   842ce:	0799      	lsls	r1, r3, #30
   842d0:	bf04      	itt	eq
   842d2:	089b      	lsreq	r3, r3, #2
   842d4:	3202      	addeq	r2, #2
   842d6:	07d9      	lsls	r1, r3, #31
   842d8:	d404      	bmi.n	842e4 <__lo0bits+0x48>
   842da:	085b      	lsrs	r3, r3, #1
   842dc:	d101      	bne.n	842e2 <__lo0bits+0x46>
   842de:	2020      	movs	r0, #32
   842e0:	4770      	bx	lr
   842e2:	3201      	adds	r2, #1
   842e4:	6003      	str	r3, [r0, #0]
   842e6:	4610      	mov	r0, r2
   842e8:	4770      	bx	lr
   842ea:	2000      	movs	r0, #0
   842ec:	4770      	bx	lr
   842ee:	085b      	lsrs	r3, r3, #1
   842f0:	6003      	str	r3, [r0, #0]
   842f2:	2001      	movs	r0, #1
   842f4:	4770      	bx	lr
   842f6:	bf00      	nop

000842f8 <__i2b>:
   842f8:	b510      	push	{r4, lr}
   842fa:	460c      	mov	r4, r1
   842fc:	2101      	movs	r1, #1
   842fe:	f7ff ff33 	bl	84168 <_Balloc>
   84302:	2201      	movs	r2, #1
   84304:	6144      	str	r4, [r0, #20]
   84306:	6102      	str	r2, [r0, #16]
   84308:	bd10      	pop	{r4, pc}
   8430a:	bf00      	nop

0008430c <__multiply>:
   8430c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84310:	690d      	ldr	r5, [r1, #16]
   84312:	f8d2 9010 	ldr.w	r9, [r2, #16]
   84316:	b085      	sub	sp, #20
   84318:	454d      	cmp	r5, r9
   8431a:	460c      	mov	r4, r1
   8431c:	4692      	mov	sl, r2
   8431e:	da04      	bge.n	8432a <__multiply+0x1e>
   84320:	462a      	mov	r2, r5
   84322:	4654      	mov	r4, sl
   84324:	464d      	mov	r5, r9
   84326:	468a      	mov	sl, r1
   84328:	4691      	mov	r9, r2
   8432a:	68a3      	ldr	r3, [r4, #8]
   8432c:	eb05 0709 	add.w	r7, r5, r9
   84330:	6861      	ldr	r1, [r4, #4]
   84332:	429f      	cmp	r7, r3
   84334:	bfc8      	it	gt
   84336:	3101      	addgt	r1, #1
   84338:	f7ff ff16 	bl	84168 <_Balloc>
   8433c:	f100 0614 	add.w	r6, r0, #20
   84340:	eb06 0887 	add.w	r8, r6, r7, lsl #2
   84344:	4546      	cmp	r6, r8
   84346:	9001      	str	r0, [sp, #4]
   84348:	d205      	bcs.n	84356 <__multiply+0x4a>
   8434a:	4633      	mov	r3, r6
   8434c:	2000      	movs	r0, #0
   8434e:	f843 0b04 	str.w	r0, [r3], #4
   84352:	4598      	cmp	r8, r3
   84354:	d8fb      	bhi.n	8434e <__multiply+0x42>
   84356:	f10a 0c14 	add.w	ip, sl, #20
   8435a:	eb0c 0989 	add.w	r9, ip, r9, lsl #2
   8435e:	3414      	adds	r4, #20
   84360:	45cc      	cmp	ip, r9
   84362:	9400      	str	r4, [sp, #0]
   84364:	eb04 0585 	add.w	r5, r4, r5, lsl #2
   84368:	d25b      	bcs.n	84422 <__multiply+0x116>
   8436a:	f8cd 8008 	str.w	r8, [sp, #8]
   8436e:	9703      	str	r7, [sp, #12]
   84370:	46c8      	mov	r8, r9
   84372:	f85c 3b04 	ldr.w	r3, [ip], #4
   84376:	b29c      	uxth	r4, r3
   84378:	b324      	cbz	r4, 843c4 <__multiply+0xb8>
   8437a:	9a00      	ldr	r2, [sp, #0]
   8437c:	4633      	mov	r3, r6
   8437e:	f04f 0900 	mov.w	r9, #0
   84382:	e000      	b.n	84386 <__multiply+0x7a>
   84384:	460b      	mov	r3, r1
   84386:	f852 7b04 	ldr.w	r7, [r2], #4
   8438a:	6819      	ldr	r1, [r3, #0]
   8438c:	fa1f fb87 	uxth.w	fp, r7
   84390:	fa1f fa81 	uxth.w	sl, r1
   84394:	0c38      	lsrs	r0, r7, #16
   84396:	0c09      	lsrs	r1, r1, #16
   84398:	fb04 aa0b 	mla	sl, r4, fp, sl
   8439c:	fb04 1000 	mla	r0, r4, r0, r1
   843a0:	44d1      	add	r9, sl
   843a2:	eb00 4019 	add.w	r0, r0, r9, lsr #16
   843a6:	fa1f f989 	uxth.w	r9, r9
   843aa:	ea49 4700 	orr.w	r7, r9, r0, lsl #16
   843ae:	4619      	mov	r1, r3
   843b0:	4295      	cmp	r5, r2
   843b2:	ea4f 4910 	mov.w	r9, r0, lsr #16
   843b6:	f841 7b04 	str.w	r7, [r1], #4
   843ba:	d8e3      	bhi.n	84384 <__multiply+0x78>
   843bc:	f8c3 9004 	str.w	r9, [r3, #4]
   843c0:	f85c 3c04 	ldr.w	r3, [ip, #-4]
   843c4:	ea5f 4913 	movs.w	r9, r3, lsr #16
   843c8:	d024      	beq.n	84414 <__multiply+0x108>
   843ca:	f8d6 a000 	ldr.w	sl, [r6]
   843ce:	9b00      	ldr	r3, [sp, #0]
   843d0:	4650      	mov	r0, sl
   843d2:	4631      	mov	r1, r6
   843d4:	f04f 0b00 	mov.w	fp, #0
   843d8:	e000      	b.n	843dc <__multiply+0xd0>
   843da:	4611      	mov	r1, r2
   843dc:	881a      	ldrh	r2, [r3, #0]
   843de:	0c00      	lsrs	r0, r0, #16
   843e0:	fb09 0002 	mla	r0, r9, r2, r0
   843e4:	fa1f fa8a 	uxth.w	sl, sl
   843e8:	4483      	add	fp, r0
   843ea:	ea4a 400b 	orr.w	r0, sl, fp, lsl #16
   843ee:	460a      	mov	r2, r1
   843f0:	f842 0b04 	str.w	r0, [r2], #4
   843f4:	f853 7b04 	ldr.w	r7, [r3], #4
   843f8:	6848      	ldr	r0, [r1, #4]
   843fa:	ea4f 4a17 	mov.w	sl, r7, lsr #16
   843fe:	b284      	uxth	r4, r0
   84400:	fb09 4a0a 	mla	sl, r9, sl, r4
   84404:	429d      	cmp	r5, r3
   84406:	eb0a 4a1b 	add.w	sl, sl, fp, lsr #16
   8440a:	ea4f 4b1a 	mov.w	fp, sl, lsr #16
   8440e:	d8e4      	bhi.n	843da <__multiply+0xce>
   84410:	f8c1 a004 	str.w	sl, [r1, #4]
   84414:	45e0      	cmp	r8, ip
   84416:	f106 0604 	add.w	r6, r6, #4
   8441a:	d8aa      	bhi.n	84372 <__multiply+0x66>
   8441c:	f8dd 8008 	ldr.w	r8, [sp, #8]
   84420:	9f03      	ldr	r7, [sp, #12]
   84422:	2f00      	cmp	r7, #0
   84424:	dd0a      	ble.n	8443c <__multiply+0x130>
   84426:	f858 3c04 	ldr.w	r3, [r8, #-4]
   8442a:	f1a8 0804 	sub.w	r8, r8, #4
   8442e:	b11b      	cbz	r3, 84438 <__multiply+0x12c>
   84430:	e004      	b.n	8443c <__multiply+0x130>
   84432:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   84436:	b90b      	cbnz	r3, 8443c <__multiply+0x130>
   84438:	3f01      	subs	r7, #1
   8443a:	d1fa      	bne.n	84432 <__multiply+0x126>
   8443c:	9b01      	ldr	r3, [sp, #4]
   8443e:	4618      	mov	r0, r3
   84440:	611f      	str	r7, [r3, #16]
   84442:	b005      	add	sp, #20
   84444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084448 <__pow5mult>:
   84448:	f012 0303 	ands.w	r3, r2, #3
   8444c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84450:	4614      	mov	r4, r2
   84452:	4607      	mov	r7, r0
   84454:	460e      	mov	r6, r1
   84456:	d12c      	bne.n	844b2 <__pow5mult+0x6a>
   84458:	10a4      	asrs	r4, r4, #2
   8445a:	d01c      	beq.n	84496 <__pow5mult+0x4e>
   8445c:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   8445e:	2d00      	cmp	r5, #0
   84460:	d030      	beq.n	844c4 <__pow5mult+0x7c>
   84462:	f04f 0800 	mov.w	r8, #0
   84466:	e004      	b.n	84472 <__pow5mult+0x2a>
   84468:	1064      	asrs	r4, r4, #1
   8446a:	d014      	beq.n	84496 <__pow5mult+0x4e>
   8446c:	6828      	ldr	r0, [r5, #0]
   8446e:	b1a8      	cbz	r0, 8449c <__pow5mult+0x54>
   84470:	4605      	mov	r5, r0
   84472:	07e3      	lsls	r3, r4, #31
   84474:	d5f8      	bpl.n	84468 <__pow5mult+0x20>
   84476:	4638      	mov	r0, r7
   84478:	4631      	mov	r1, r6
   8447a:	462a      	mov	r2, r5
   8447c:	f7ff ff46 	bl	8430c <__multiply>
   84480:	b1ae      	cbz	r6, 844ae <__pow5mult+0x66>
   84482:	6872      	ldr	r2, [r6, #4]
   84484:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84486:	1064      	asrs	r4, r4, #1
   84488:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8448c:	6031      	str	r1, [r6, #0]
   8448e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   84492:	4606      	mov	r6, r0
   84494:	d1ea      	bne.n	8446c <__pow5mult+0x24>
   84496:	4630      	mov	r0, r6
   84498:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8449c:	4638      	mov	r0, r7
   8449e:	4629      	mov	r1, r5
   844a0:	462a      	mov	r2, r5
   844a2:	f7ff ff33 	bl	8430c <__multiply>
   844a6:	6028      	str	r0, [r5, #0]
   844a8:	f8c0 8000 	str.w	r8, [r0]
   844ac:	e7e0      	b.n	84470 <__pow5mult+0x28>
   844ae:	4606      	mov	r6, r0
   844b0:	e7da      	b.n	84468 <__pow5mult+0x20>
   844b2:	4a0b      	ldr	r2, [pc, #44]	; (844e0 <__pow5mult+0x98>)
   844b4:	3b01      	subs	r3, #1
   844b6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   844ba:	2300      	movs	r3, #0
   844bc:	f7ff fe84 	bl	841c8 <__multadd>
   844c0:	4606      	mov	r6, r0
   844c2:	e7c9      	b.n	84458 <__pow5mult+0x10>
   844c4:	2101      	movs	r1, #1
   844c6:	4638      	mov	r0, r7
   844c8:	f7ff fe4e 	bl	84168 <_Balloc>
   844cc:	f240 2171 	movw	r1, #625	; 0x271
   844d0:	2201      	movs	r2, #1
   844d2:	2300      	movs	r3, #0
   844d4:	6141      	str	r1, [r0, #20]
   844d6:	6102      	str	r2, [r0, #16]
   844d8:	4605      	mov	r5, r0
   844da:	64b8      	str	r0, [r7, #72]	; 0x48
   844dc:	6003      	str	r3, [r0, #0]
   844de:	e7c0      	b.n	84462 <__pow5mult+0x1a>
   844e0:	00085e30 	.word	0x00085e30

000844e4 <__lshift>:
   844e4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   844e8:	690b      	ldr	r3, [r1, #16]
   844ea:	ea4f 1a62 	mov.w	sl, r2, asr #5
   844ee:	eb0a 0903 	add.w	r9, sl, r3
   844f2:	688b      	ldr	r3, [r1, #8]
   844f4:	f109 0601 	add.w	r6, r9, #1
   844f8:	429e      	cmp	r6, r3
   844fa:	460f      	mov	r7, r1
   844fc:	4693      	mov	fp, r2
   844fe:	4680      	mov	r8, r0
   84500:	6849      	ldr	r1, [r1, #4]
   84502:	dd04      	ble.n	8450e <__lshift+0x2a>
   84504:	005b      	lsls	r3, r3, #1
   84506:	429e      	cmp	r6, r3
   84508:	f101 0101 	add.w	r1, r1, #1
   8450c:	dcfa      	bgt.n	84504 <__lshift+0x20>
   8450e:	4640      	mov	r0, r8
   84510:	f7ff fe2a 	bl	84168 <_Balloc>
   84514:	f1ba 0f00 	cmp.w	sl, #0
   84518:	f100 0414 	add.w	r4, r0, #20
   8451c:	dd09      	ble.n	84532 <__lshift+0x4e>
   8451e:	2300      	movs	r3, #0
   84520:	461a      	mov	r2, r3
   84522:	4625      	mov	r5, r4
   84524:	3301      	adds	r3, #1
   84526:	4553      	cmp	r3, sl
   84528:	f845 2b04 	str.w	r2, [r5], #4
   8452c:	d1fa      	bne.n	84524 <__lshift+0x40>
   8452e:	eb04 0483 	add.w	r4, r4, r3, lsl #2
   84532:	693a      	ldr	r2, [r7, #16]
   84534:	f107 0314 	add.w	r3, r7, #20
   84538:	f01b 0b1f 	ands.w	fp, fp, #31
   8453c:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   84540:	d021      	beq.n	84586 <__lshift+0xa2>
   84542:	f1cb 0a20 	rsb	sl, fp, #32
   84546:	2200      	movs	r2, #0
   84548:	e000      	b.n	8454c <__lshift+0x68>
   8454a:	462c      	mov	r4, r5
   8454c:	6819      	ldr	r1, [r3, #0]
   8454e:	4625      	mov	r5, r4
   84550:	fa01 f10b 	lsl.w	r1, r1, fp
   84554:	430a      	orrs	r2, r1
   84556:	f845 2b04 	str.w	r2, [r5], #4
   8455a:	f853 2b04 	ldr.w	r2, [r3], #4
   8455e:	4563      	cmp	r3, ip
   84560:	fa22 f20a 	lsr.w	r2, r2, sl
   84564:	d3f1      	bcc.n	8454a <__lshift+0x66>
   84566:	6062      	str	r2, [r4, #4]
   84568:	b10a      	cbz	r2, 8456e <__lshift+0x8a>
   8456a:	f109 0602 	add.w	r6, r9, #2
   8456e:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
   84572:	687a      	ldr	r2, [r7, #4]
   84574:	3e01      	subs	r6, #1
   84576:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8457a:	6106      	str	r6, [r0, #16]
   8457c:	6039      	str	r1, [r7, #0]
   8457e:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   84582:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84586:	f853 2b04 	ldr.w	r2, [r3], #4
   8458a:	459c      	cmp	ip, r3
   8458c:	f844 2b04 	str.w	r2, [r4], #4
   84590:	d9ed      	bls.n	8456e <__lshift+0x8a>
   84592:	f853 2b04 	ldr.w	r2, [r3], #4
   84596:	459c      	cmp	ip, r3
   84598:	f844 2b04 	str.w	r2, [r4], #4
   8459c:	d8f3      	bhi.n	84586 <__lshift+0xa2>
   8459e:	e7e6      	b.n	8456e <__lshift+0x8a>

000845a0 <__mcmp>:
   845a0:	6902      	ldr	r2, [r0, #16]
   845a2:	690b      	ldr	r3, [r1, #16]
   845a4:	b410      	push	{r4}
   845a6:	1ad2      	subs	r2, r2, r3
   845a8:	d115      	bne.n	845d6 <__mcmp+0x36>
   845aa:	009b      	lsls	r3, r3, #2
   845ac:	3014      	adds	r0, #20
   845ae:	3114      	adds	r1, #20
   845b0:	4419      	add	r1, r3
   845b2:	4403      	add	r3, r0
   845b4:	e001      	b.n	845ba <__mcmp+0x1a>
   845b6:	4298      	cmp	r0, r3
   845b8:	d211      	bcs.n	845de <__mcmp+0x3e>
   845ba:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   845be:	f851 4d04 	ldr.w	r4, [r1, #-4]!
   845c2:	42a2      	cmp	r2, r4
   845c4:	d0f7      	beq.n	845b6 <__mcmp+0x16>
   845c6:	4294      	cmp	r4, r2
   845c8:	bf94      	ite	ls
   845ca:	2001      	movls	r0, #1
   845cc:	f04f 30ff 	movhi.w	r0, #4294967295
   845d0:	f85d 4b04 	ldr.w	r4, [sp], #4
   845d4:	4770      	bx	lr
   845d6:	4610      	mov	r0, r2
   845d8:	f85d 4b04 	ldr.w	r4, [sp], #4
   845dc:	4770      	bx	lr
   845de:	2000      	movs	r0, #0
   845e0:	f85d 4b04 	ldr.w	r4, [sp], #4
   845e4:	4770      	bx	lr
   845e6:	bf00      	nop

000845e8 <__mdiff>:
   845e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   845ec:	460d      	mov	r5, r1
   845ee:	4604      	mov	r4, r0
   845f0:	4611      	mov	r1, r2
   845f2:	4628      	mov	r0, r5
   845f4:	4616      	mov	r6, r2
   845f6:	f7ff ffd3 	bl	845a0 <__mcmp>
   845fa:	1e07      	subs	r7, r0, #0
   845fc:	d056      	beq.n	846ac <__mdiff+0xc4>
   845fe:	db4f      	blt.n	846a0 <__mdiff+0xb8>
   84600:	f04f 0900 	mov.w	r9, #0
   84604:	6869      	ldr	r1, [r5, #4]
   84606:	4620      	mov	r0, r4
   84608:	f7ff fdae 	bl	84168 <_Balloc>
   8460c:	692f      	ldr	r7, [r5, #16]
   8460e:	6932      	ldr	r2, [r6, #16]
   84610:	3514      	adds	r5, #20
   84612:	3614      	adds	r6, #20
   84614:	f8c0 900c 	str.w	r9, [r0, #12]
   84618:	f100 0314 	add.w	r3, r0, #20
   8461c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
   84620:	eb06 0882 	add.w	r8, r6, r2, lsl #2
   84624:	2100      	movs	r1, #0
   84626:	f855 4b04 	ldr.w	r4, [r5], #4
   8462a:	f856 2b04 	ldr.w	r2, [r6], #4
   8462e:	fa1f fa84 	uxth.w	sl, r4
   84632:	448a      	add	sl, r1
   84634:	fa1f f982 	uxth.w	r9, r2
   84638:	0c11      	lsrs	r1, r2, #16
   8463a:	ebc1 4114 	rsb	r1, r1, r4, lsr #16
   8463e:	ebc9 020a 	rsb	r2, r9, sl
   84642:	eb01 4122 	add.w	r1, r1, r2, asr #16
   84646:	b292      	uxth	r2, r2
   84648:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   8464c:	45b0      	cmp	r8, r6
   8464e:	f843 2b04 	str.w	r2, [r3], #4
   84652:	ea4f 4121 	mov.w	r1, r1, asr #16
   84656:	462c      	mov	r4, r5
   84658:	d8e5      	bhi.n	84626 <__mdiff+0x3e>
   8465a:	45ac      	cmp	ip, r5
   8465c:	4698      	mov	r8, r3
   8465e:	d915      	bls.n	8468c <__mdiff+0xa4>
   84660:	f854 6b04 	ldr.w	r6, [r4], #4
   84664:	b2b2      	uxth	r2, r6
   84666:	4411      	add	r1, r2
   84668:	0c36      	lsrs	r6, r6, #16
   8466a:	eb06 4621 	add.w	r6, r6, r1, asr #16
   8466e:	b289      	uxth	r1, r1
   84670:	ea41 4206 	orr.w	r2, r1, r6, lsl #16
   84674:	45a4      	cmp	ip, r4
   84676:	f843 2b04 	str.w	r2, [r3], #4
   8467a:	ea4f 4126 	mov.w	r1, r6, asr #16
   8467e:	d8ef      	bhi.n	84660 <__mdiff+0x78>
   84680:	43eb      	mvns	r3, r5
   84682:	4463      	add	r3, ip
   84684:	f023 0303 	bic.w	r3, r3, #3
   84688:	3304      	adds	r3, #4
   8468a:	4443      	add	r3, r8
   8468c:	3b04      	subs	r3, #4
   8468e:	b922      	cbnz	r2, 8469a <__mdiff+0xb2>
   84690:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   84694:	3f01      	subs	r7, #1
   84696:	2a00      	cmp	r2, #0
   84698:	d0fa      	beq.n	84690 <__mdiff+0xa8>
   8469a:	6107      	str	r7, [r0, #16]
   8469c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   846a0:	462b      	mov	r3, r5
   846a2:	f04f 0901 	mov.w	r9, #1
   846a6:	4635      	mov	r5, r6
   846a8:	461e      	mov	r6, r3
   846aa:	e7ab      	b.n	84604 <__mdiff+0x1c>
   846ac:	4620      	mov	r0, r4
   846ae:	4639      	mov	r1, r7
   846b0:	f7ff fd5a 	bl	84168 <_Balloc>
   846b4:	2301      	movs	r3, #1
   846b6:	6147      	str	r7, [r0, #20]
   846b8:	6103      	str	r3, [r0, #16]
   846ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   846be:	bf00      	nop

000846c0 <__d2b>:
   846c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   846c4:	2101      	movs	r1, #1
   846c6:	b083      	sub	sp, #12
   846c8:	461d      	mov	r5, r3
   846ca:	f3c3 560a 	ubfx	r6, r3, #20, #11
   846ce:	4614      	mov	r4, r2
   846d0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   846d2:	f7ff fd49 	bl	84168 <_Balloc>
   846d6:	f3c5 0313 	ubfx	r3, r5, #0, #20
   846da:	4680      	mov	r8, r0
   846dc:	b10e      	cbz	r6, 846e2 <__d2b+0x22>
   846de:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   846e2:	9301      	str	r3, [sp, #4]
   846e4:	b324      	cbz	r4, 84730 <__d2b+0x70>
   846e6:	a802      	add	r0, sp, #8
   846e8:	f840 4d08 	str.w	r4, [r0, #-8]!
   846ec:	4668      	mov	r0, sp
   846ee:	f7ff fdd5 	bl	8429c <__lo0bits>
   846f2:	2800      	cmp	r0, #0
   846f4:	d135      	bne.n	84762 <__d2b+0xa2>
   846f6:	e89d 000c 	ldmia.w	sp, {r2, r3}
   846fa:	f8c8 2014 	str.w	r2, [r8, #20]
   846fe:	2b00      	cmp	r3, #0
   84700:	bf0c      	ite	eq
   84702:	2401      	moveq	r4, #1
   84704:	2402      	movne	r4, #2
   84706:	f8c8 3018 	str.w	r3, [r8, #24]
   8470a:	f8c8 4010 	str.w	r4, [r8, #16]
   8470e:	b9de      	cbnz	r6, 84748 <__d2b+0x88>
   84710:	eb08 0384 	add.w	r3, r8, r4, lsl #2
   84714:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   84718:	6038      	str	r0, [r7, #0]
   8471a:	6918      	ldr	r0, [r3, #16]
   8471c:	f7ff fd9e 	bl	8425c <__hi0bits>
   84720:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84722:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   84726:	6018      	str	r0, [r3, #0]
   84728:	4640      	mov	r0, r8
   8472a:	b003      	add	sp, #12
   8472c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   84730:	a801      	add	r0, sp, #4
   84732:	f7ff fdb3 	bl	8429c <__lo0bits>
   84736:	9b01      	ldr	r3, [sp, #4]
   84738:	2401      	movs	r4, #1
   8473a:	3020      	adds	r0, #32
   8473c:	f8c8 3014 	str.w	r3, [r8, #20]
   84740:	f8c8 4010 	str.w	r4, [r8, #16]
   84744:	2e00      	cmp	r6, #0
   84746:	d0e3      	beq.n	84710 <__d2b+0x50>
   84748:	f2a6 4933 	subw	r9, r6, #1075	; 0x433
   8474c:	eb09 0300 	add.w	r3, r9, r0
   84750:	603b      	str	r3, [r7, #0]
   84752:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84754:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   84758:	6018      	str	r0, [r3, #0]
   8475a:	4640      	mov	r0, r8
   8475c:	b003      	add	sp, #12
   8475e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   84762:	9b01      	ldr	r3, [sp, #4]
   84764:	f1c0 0120 	rsb	r1, r0, #32
   84768:	fa03 f101 	lsl.w	r1, r3, r1
   8476c:	40c3      	lsrs	r3, r0
   8476e:	9a00      	ldr	r2, [sp, #0]
   84770:	9301      	str	r3, [sp, #4]
   84772:	430a      	orrs	r2, r1
   84774:	f8c8 2014 	str.w	r2, [r8, #20]
   84778:	e7c1      	b.n	846fe <__d2b+0x3e>
   8477a:	bf00      	nop

0008477c <_realloc_r>:
   8477c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84780:	460c      	mov	r4, r1
   84782:	b083      	sub	sp, #12
   84784:	4690      	mov	r8, r2
   84786:	4681      	mov	r9, r0
   84788:	2900      	cmp	r1, #0
   8478a:	f000 80ba 	beq.w	84902 <_realloc_r+0x186>
   8478e:	f7ff fce7 	bl	84160 <__malloc_lock>
   84792:	f108 060b 	add.w	r6, r8, #11
   84796:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8479a:	2e16      	cmp	r6, #22
   8479c:	f023 0503 	bic.w	r5, r3, #3
   847a0:	f1a4 0708 	sub.w	r7, r4, #8
   847a4:	d84b      	bhi.n	8483e <_realloc_r+0xc2>
   847a6:	2110      	movs	r1, #16
   847a8:	460e      	mov	r6, r1
   847aa:	45b0      	cmp	r8, r6
   847ac:	d84c      	bhi.n	84848 <_realloc_r+0xcc>
   847ae:	428d      	cmp	r5, r1
   847b0:	da51      	bge.n	84856 <_realloc_r+0xda>
   847b2:	f8df b384 	ldr.w	fp, [pc, #900]	; 84b38 <_realloc_r+0x3bc>
   847b6:	1978      	adds	r0, r7, r5
   847b8:	f8db e008 	ldr.w	lr, [fp, #8]
   847bc:	4586      	cmp	lr, r0
   847be:	f000 80a6 	beq.w	8490e <_realloc_r+0x192>
   847c2:	6842      	ldr	r2, [r0, #4]
   847c4:	f022 0c01 	bic.w	ip, r2, #1
   847c8:	4484      	add	ip, r0
   847ca:	f8dc c004 	ldr.w	ip, [ip, #4]
   847ce:	f01c 0f01 	tst.w	ip, #1
   847d2:	d054      	beq.n	8487e <_realloc_r+0x102>
   847d4:	2200      	movs	r2, #0
   847d6:	4610      	mov	r0, r2
   847d8:	07db      	lsls	r3, r3, #31
   847da:	d46f      	bmi.n	848bc <_realloc_r+0x140>
   847dc:	f854 3c08 	ldr.w	r3, [r4, #-8]
   847e0:	ebc3 0a07 	rsb	sl, r3, r7
   847e4:	f8da 3004 	ldr.w	r3, [sl, #4]
   847e8:	f023 0303 	bic.w	r3, r3, #3
   847ec:	442b      	add	r3, r5
   847ee:	2800      	cmp	r0, #0
   847f0:	d062      	beq.n	848b8 <_realloc_r+0x13c>
   847f2:	4570      	cmp	r0, lr
   847f4:	f000 80e9 	beq.w	849ca <_realloc_r+0x24e>
   847f8:	eb02 0e03 	add.w	lr, r2, r3
   847fc:	458e      	cmp	lr, r1
   847fe:	db5b      	blt.n	848b8 <_realloc_r+0x13c>
   84800:	68c3      	ldr	r3, [r0, #12]
   84802:	6882      	ldr	r2, [r0, #8]
   84804:	46d0      	mov	r8, sl
   84806:	60d3      	str	r3, [r2, #12]
   84808:	609a      	str	r2, [r3, #8]
   8480a:	f858 1f08 	ldr.w	r1, [r8, #8]!
   8480e:	f8da 300c 	ldr.w	r3, [sl, #12]
   84812:	1f2a      	subs	r2, r5, #4
   84814:	2a24      	cmp	r2, #36	; 0x24
   84816:	60cb      	str	r3, [r1, #12]
   84818:	6099      	str	r1, [r3, #8]
   8481a:	f200 8123 	bhi.w	84a64 <_realloc_r+0x2e8>
   8481e:	2a13      	cmp	r2, #19
   84820:	f240 80b0 	bls.w	84984 <_realloc_r+0x208>
   84824:	6823      	ldr	r3, [r4, #0]
   84826:	2a1b      	cmp	r2, #27
   84828:	f8ca 3008 	str.w	r3, [sl, #8]
   8482c:	6863      	ldr	r3, [r4, #4]
   8482e:	f8ca 300c 	str.w	r3, [sl, #12]
   84832:	f200 812b 	bhi.w	84a8c <_realloc_r+0x310>
   84836:	3408      	adds	r4, #8
   84838:	f10a 0310 	add.w	r3, sl, #16
   8483c:	e0a3      	b.n	84986 <_realloc_r+0x20a>
   8483e:	f026 0607 	bic.w	r6, r6, #7
   84842:	2e00      	cmp	r6, #0
   84844:	4631      	mov	r1, r6
   84846:	dab0      	bge.n	847aa <_realloc_r+0x2e>
   84848:	230c      	movs	r3, #12
   8484a:	2000      	movs	r0, #0
   8484c:	f8c9 3000 	str.w	r3, [r9]
   84850:	b003      	add	sp, #12
   84852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84856:	46a0      	mov	r8, r4
   84858:	1baa      	subs	r2, r5, r6
   8485a:	2a0f      	cmp	r2, #15
   8485c:	f003 0301 	and.w	r3, r3, #1
   84860:	d81a      	bhi.n	84898 <_realloc_r+0x11c>
   84862:	432b      	orrs	r3, r5
   84864:	607b      	str	r3, [r7, #4]
   84866:	443d      	add	r5, r7
   84868:	686b      	ldr	r3, [r5, #4]
   8486a:	f043 0301 	orr.w	r3, r3, #1
   8486e:	606b      	str	r3, [r5, #4]
   84870:	4648      	mov	r0, r9
   84872:	f7ff fc77 	bl	84164 <__malloc_unlock>
   84876:	4640      	mov	r0, r8
   84878:	b003      	add	sp, #12
   8487a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8487e:	f022 0203 	bic.w	r2, r2, #3
   84882:	eb02 0c05 	add.w	ip, r2, r5
   84886:	458c      	cmp	ip, r1
   84888:	dba6      	blt.n	847d8 <_realloc_r+0x5c>
   8488a:	68c2      	ldr	r2, [r0, #12]
   8488c:	6881      	ldr	r1, [r0, #8]
   8488e:	46a0      	mov	r8, r4
   84890:	60ca      	str	r2, [r1, #12]
   84892:	4665      	mov	r5, ip
   84894:	6091      	str	r1, [r2, #8]
   84896:	e7df      	b.n	84858 <_realloc_r+0xdc>
   84898:	19b9      	adds	r1, r7, r6
   8489a:	4333      	orrs	r3, r6
   8489c:	f042 0001 	orr.w	r0, r2, #1
   848a0:	607b      	str	r3, [r7, #4]
   848a2:	440a      	add	r2, r1
   848a4:	6048      	str	r0, [r1, #4]
   848a6:	6853      	ldr	r3, [r2, #4]
   848a8:	3108      	adds	r1, #8
   848aa:	f043 0301 	orr.w	r3, r3, #1
   848ae:	6053      	str	r3, [r2, #4]
   848b0:	4648      	mov	r0, r9
   848b2:	f7fe ffc3 	bl	8383c <_free_r>
   848b6:	e7db      	b.n	84870 <_realloc_r+0xf4>
   848b8:	428b      	cmp	r3, r1
   848ba:	da33      	bge.n	84924 <_realloc_r+0x1a8>
   848bc:	4641      	mov	r1, r8
   848be:	4648      	mov	r0, r9
   848c0:	f7ff f88c 	bl	839dc <_malloc_r>
   848c4:	4680      	mov	r8, r0
   848c6:	2800      	cmp	r0, #0
   848c8:	d0d2      	beq.n	84870 <_realloc_r+0xf4>
   848ca:	f854 3c04 	ldr.w	r3, [r4, #-4]
   848ce:	f1a0 0108 	sub.w	r1, r0, #8
   848d2:	f023 0201 	bic.w	r2, r3, #1
   848d6:	443a      	add	r2, r7
   848d8:	4291      	cmp	r1, r2
   848da:	f000 80bc 	beq.w	84a56 <_realloc_r+0x2da>
   848de:	1f2a      	subs	r2, r5, #4
   848e0:	2a24      	cmp	r2, #36	; 0x24
   848e2:	d86e      	bhi.n	849c2 <_realloc_r+0x246>
   848e4:	2a13      	cmp	r2, #19
   848e6:	d842      	bhi.n	8496e <_realloc_r+0x1f2>
   848e8:	4603      	mov	r3, r0
   848ea:	4622      	mov	r2, r4
   848ec:	6811      	ldr	r1, [r2, #0]
   848ee:	6019      	str	r1, [r3, #0]
   848f0:	6851      	ldr	r1, [r2, #4]
   848f2:	6059      	str	r1, [r3, #4]
   848f4:	6892      	ldr	r2, [r2, #8]
   848f6:	609a      	str	r2, [r3, #8]
   848f8:	4621      	mov	r1, r4
   848fa:	4648      	mov	r0, r9
   848fc:	f7fe ff9e 	bl	8383c <_free_r>
   84900:	e7b6      	b.n	84870 <_realloc_r+0xf4>
   84902:	4611      	mov	r1, r2
   84904:	b003      	add	sp, #12
   84906:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8490a:	f7ff b867 	b.w	839dc <_malloc_r>
   8490e:	f8de 2004 	ldr.w	r2, [lr, #4]
   84912:	f106 0c10 	add.w	ip, r6, #16
   84916:	f022 0203 	bic.w	r2, r2, #3
   8491a:	1950      	adds	r0, r2, r5
   8491c:	4560      	cmp	r0, ip
   8491e:	da3d      	bge.n	8499c <_realloc_r+0x220>
   84920:	4670      	mov	r0, lr
   84922:	e759      	b.n	847d8 <_realloc_r+0x5c>
   84924:	46d0      	mov	r8, sl
   84926:	f858 0f08 	ldr.w	r0, [r8, #8]!
   8492a:	f8da 100c 	ldr.w	r1, [sl, #12]
   8492e:	1f2a      	subs	r2, r5, #4
   84930:	2a24      	cmp	r2, #36	; 0x24
   84932:	60c1      	str	r1, [r0, #12]
   84934:	6088      	str	r0, [r1, #8]
   84936:	f200 80a0 	bhi.w	84a7a <_realloc_r+0x2fe>
   8493a:	2a13      	cmp	r2, #19
   8493c:	f240 809b 	bls.w	84a76 <_realloc_r+0x2fa>
   84940:	6821      	ldr	r1, [r4, #0]
   84942:	2a1b      	cmp	r2, #27
   84944:	f8ca 1008 	str.w	r1, [sl, #8]
   84948:	6861      	ldr	r1, [r4, #4]
   8494a:	f8ca 100c 	str.w	r1, [sl, #12]
   8494e:	f200 80b2 	bhi.w	84ab6 <_realloc_r+0x33a>
   84952:	3408      	adds	r4, #8
   84954:	f10a 0210 	add.w	r2, sl, #16
   84958:	6821      	ldr	r1, [r4, #0]
   8495a:	461d      	mov	r5, r3
   8495c:	6011      	str	r1, [r2, #0]
   8495e:	6861      	ldr	r1, [r4, #4]
   84960:	4657      	mov	r7, sl
   84962:	6051      	str	r1, [r2, #4]
   84964:	68a3      	ldr	r3, [r4, #8]
   84966:	6093      	str	r3, [r2, #8]
   84968:	f8da 3004 	ldr.w	r3, [sl, #4]
   8496c:	e774      	b.n	84858 <_realloc_r+0xdc>
   8496e:	6823      	ldr	r3, [r4, #0]
   84970:	2a1b      	cmp	r2, #27
   84972:	6003      	str	r3, [r0, #0]
   84974:	6863      	ldr	r3, [r4, #4]
   84976:	6043      	str	r3, [r0, #4]
   84978:	d862      	bhi.n	84a40 <_realloc_r+0x2c4>
   8497a:	f100 0308 	add.w	r3, r0, #8
   8497e:	f104 0208 	add.w	r2, r4, #8
   84982:	e7b3      	b.n	848ec <_realloc_r+0x170>
   84984:	4643      	mov	r3, r8
   84986:	6822      	ldr	r2, [r4, #0]
   84988:	4675      	mov	r5, lr
   8498a:	601a      	str	r2, [r3, #0]
   8498c:	6862      	ldr	r2, [r4, #4]
   8498e:	4657      	mov	r7, sl
   84990:	605a      	str	r2, [r3, #4]
   84992:	68a2      	ldr	r2, [r4, #8]
   84994:	609a      	str	r2, [r3, #8]
   84996:	f8da 3004 	ldr.w	r3, [sl, #4]
   8499a:	e75d      	b.n	84858 <_realloc_r+0xdc>
   8499c:	1b83      	subs	r3, r0, r6
   8499e:	4437      	add	r7, r6
   849a0:	f043 0301 	orr.w	r3, r3, #1
   849a4:	f8cb 7008 	str.w	r7, [fp, #8]
   849a8:	607b      	str	r3, [r7, #4]
   849aa:	f854 3c04 	ldr.w	r3, [r4, #-4]
   849ae:	4648      	mov	r0, r9
   849b0:	f003 0301 	and.w	r3, r3, #1
   849b4:	431e      	orrs	r6, r3
   849b6:	f844 6c04 	str.w	r6, [r4, #-4]
   849ba:	f7ff fbd3 	bl	84164 <__malloc_unlock>
   849be:	4620      	mov	r0, r4
   849c0:	e75a      	b.n	84878 <_realloc_r+0xfc>
   849c2:	4621      	mov	r1, r4
   849c4:	f7ff fb66 	bl	84094 <memmove>
   849c8:	e796      	b.n	848f8 <_realloc_r+0x17c>
   849ca:	eb02 0c03 	add.w	ip, r2, r3
   849ce:	f106 0210 	add.w	r2, r6, #16
   849d2:	4594      	cmp	ip, r2
   849d4:	f6ff af70 	blt.w	848b8 <_realloc_r+0x13c>
   849d8:	4657      	mov	r7, sl
   849da:	f857 1f08 	ldr.w	r1, [r7, #8]!
   849de:	f8da 300c 	ldr.w	r3, [sl, #12]
   849e2:	1f2a      	subs	r2, r5, #4
   849e4:	2a24      	cmp	r2, #36	; 0x24
   849e6:	60cb      	str	r3, [r1, #12]
   849e8:	6099      	str	r1, [r3, #8]
   849ea:	f200 8086 	bhi.w	84afa <_realloc_r+0x37e>
   849ee:	2a13      	cmp	r2, #19
   849f0:	d977      	bls.n	84ae2 <_realloc_r+0x366>
   849f2:	6823      	ldr	r3, [r4, #0]
   849f4:	2a1b      	cmp	r2, #27
   849f6:	f8ca 3008 	str.w	r3, [sl, #8]
   849fa:	6863      	ldr	r3, [r4, #4]
   849fc:	f8ca 300c 	str.w	r3, [sl, #12]
   84a00:	f200 8084 	bhi.w	84b0c <_realloc_r+0x390>
   84a04:	3408      	adds	r4, #8
   84a06:	f10a 0310 	add.w	r3, sl, #16
   84a0a:	6822      	ldr	r2, [r4, #0]
   84a0c:	601a      	str	r2, [r3, #0]
   84a0e:	6862      	ldr	r2, [r4, #4]
   84a10:	605a      	str	r2, [r3, #4]
   84a12:	68a2      	ldr	r2, [r4, #8]
   84a14:	609a      	str	r2, [r3, #8]
   84a16:	ebc6 020c 	rsb	r2, r6, ip
   84a1a:	eb0a 0306 	add.w	r3, sl, r6
   84a1e:	f042 0201 	orr.w	r2, r2, #1
   84a22:	f8cb 3008 	str.w	r3, [fp, #8]
   84a26:	605a      	str	r2, [r3, #4]
   84a28:	f8da 3004 	ldr.w	r3, [sl, #4]
   84a2c:	4648      	mov	r0, r9
   84a2e:	f003 0301 	and.w	r3, r3, #1
   84a32:	431e      	orrs	r6, r3
   84a34:	f8ca 6004 	str.w	r6, [sl, #4]
   84a38:	f7ff fb94 	bl	84164 <__malloc_unlock>
   84a3c:	4638      	mov	r0, r7
   84a3e:	e71b      	b.n	84878 <_realloc_r+0xfc>
   84a40:	68a3      	ldr	r3, [r4, #8]
   84a42:	2a24      	cmp	r2, #36	; 0x24
   84a44:	6083      	str	r3, [r0, #8]
   84a46:	68e3      	ldr	r3, [r4, #12]
   84a48:	60c3      	str	r3, [r0, #12]
   84a4a:	d02b      	beq.n	84aa4 <_realloc_r+0x328>
   84a4c:	f100 0310 	add.w	r3, r0, #16
   84a50:	f104 0210 	add.w	r2, r4, #16
   84a54:	e74a      	b.n	848ec <_realloc_r+0x170>
   84a56:	f850 2c04 	ldr.w	r2, [r0, #-4]
   84a5a:	46a0      	mov	r8, r4
   84a5c:	f022 0203 	bic.w	r2, r2, #3
   84a60:	4415      	add	r5, r2
   84a62:	e6f9      	b.n	84858 <_realloc_r+0xdc>
   84a64:	4621      	mov	r1, r4
   84a66:	4640      	mov	r0, r8
   84a68:	4675      	mov	r5, lr
   84a6a:	4657      	mov	r7, sl
   84a6c:	f7ff fb12 	bl	84094 <memmove>
   84a70:	f8da 3004 	ldr.w	r3, [sl, #4]
   84a74:	e6f0      	b.n	84858 <_realloc_r+0xdc>
   84a76:	4642      	mov	r2, r8
   84a78:	e76e      	b.n	84958 <_realloc_r+0x1dc>
   84a7a:	4621      	mov	r1, r4
   84a7c:	4640      	mov	r0, r8
   84a7e:	461d      	mov	r5, r3
   84a80:	4657      	mov	r7, sl
   84a82:	f7ff fb07 	bl	84094 <memmove>
   84a86:	f8da 3004 	ldr.w	r3, [sl, #4]
   84a8a:	e6e5      	b.n	84858 <_realloc_r+0xdc>
   84a8c:	68a3      	ldr	r3, [r4, #8]
   84a8e:	2a24      	cmp	r2, #36	; 0x24
   84a90:	f8ca 3010 	str.w	r3, [sl, #16]
   84a94:	68e3      	ldr	r3, [r4, #12]
   84a96:	f8ca 3014 	str.w	r3, [sl, #20]
   84a9a:	d018      	beq.n	84ace <_realloc_r+0x352>
   84a9c:	3410      	adds	r4, #16
   84a9e:	f10a 0318 	add.w	r3, sl, #24
   84aa2:	e770      	b.n	84986 <_realloc_r+0x20a>
   84aa4:	6922      	ldr	r2, [r4, #16]
   84aa6:	f100 0318 	add.w	r3, r0, #24
   84aaa:	6102      	str	r2, [r0, #16]
   84aac:	6961      	ldr	r1, [r4, #20]
   84aae:	f104 0218 	add.w	r2, r4, #24
   84ab2:	6141      	str	r1, [r0, #20]
   84ab4:	e71a      	b.n	848ec <_realloc_r+0x170>
   84ab6:	68a1      	ldr	r1, [r4, #8]
   84ab8:	2a24      	cmp	r2, #36	; 0x24
   84aba:	f8ca 1010 	str.w	r1, [sl, #16]
   84abe:	68e1      	ldr	r1, [r4, #12]
   84ac0:	f8ca 1014 	str.w	r1, [sl, #20]
   84ac4:	d00f      	beq.n	84ae6 <_realloc_r+0x36a>
   84ac6:	3410      	adds	r4, #16
   84ac8:	f10a 0218 	add.w	r2, sl, #24
   84acc:	e744      	b.n	84958 <_realloc_r+0x1dc>
   84ace:	6922      	ldr	r2, [r4, #16]
   84ad0:	f10a 0320 	add.w	r3, sl, #32
   84ad4:	f8ca 2018 	str.w	r2, [sl, #24]
   84ad8:	6962      	ldr	r2, [r4, #20]
   84ada:	3418      	adds	r4, #24
   84adc:	f8ca 201c 	str.w	r2, [sl, #28]
   84ae0:	e751      	b.n	84986 <_realloc_r+0x20a>
   84ae2:	463b      	mov	r3, r7
   84ae4:	e791      	b.n	84a0a <_realloc_r+0x28e>
   84ae6:	6921      	ldr	r1, [r4, #16]
   84ae8:	f10a 0220 	add.w	r2, sl, #32
   84aec:	f8ca 1018 	str.w	r1, [sl, #24]
   84af0:	6961      	ldr	r1, [r4, #20]
   84af2:	3418      	adds	r4, #24
   84af4:	f8ca 101c 	str.w	r1, [sl, #28]
   84af8:	e72e      	b.n	84958 <_realloc_r+0x1dc>
   84afa:	4621      	mov	r1, r4
   84afc:	4638      	mov	r0, r7
   84afe:	f8cd c004 	str.w	ip, [sp, #4]
   84b02:	f7ff fac7 	bl	84094 <memmove>
   84b06:	f8dd c004 	ldr.w	ip, [sp, #4]
   84b0a:	e784      	b.n	84a16 <_realloc_r+0x29a>
   84b0c:	68a3      	ldr	r3, [r4, #8]
   84b0e:	2a24      	cmp	r2, #36	; 0x24
   84b10:	f8ca 3010 	str.w	r3, [sl, #16]
   84b14:	68e3      	ldr	r3, [r4, #12]
   84b16:	f8ca 3014 	str.w	r3, [sl, #20]
   84b1a:	d003      	beq.n	84b24 <_realloc_r+0x3a8>
   84b1c:	3410      	adds	r4, #16
   84b1e:	f10a 0318 	add.w	r3, sl, #24
   84b22:	e772      	b.n	84a0a <_realloc_r+0x28e>
   84b24:	6922      	ldr	r2, [r4, #16]
   84b26:	f10a 0320 	add.w	r3, sl, #32
   84b2a:	f8ca 2018 	str.w	r2, [sl, #24]
   84b2e:	6962      	ldr	r2, [r4, #20]
   84b30:	3418      	adds	r4, #24
   84b32:	f8ca 201c 	str.w	r2, [sl, #28]
   84b36:	e768      	b.n	84a0a <_realloc_r+0x28e>
   84b38:	2007046c 	.word	0x2007046c

00084b3c <__fpclassifyd>:
   84b3c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   84b40:	b410      	push	{r4}
   84b42:	d008      	beq.n	84b56 <__fpclassifyd+0x1a>
   84b44:	4a0f      	ldr	r2, [pc, #60]	; (84b84 <__fpclassifyd+0x48>)
   84b46:	f5a3 1480 	sub.w	r4, r3, #1048576	; 0x100000
   84b4a:	4294      	cmp	r4, r2
   84b4c:	d80a      	bhi.n	84b64 <__fpclassifyd+0x28>
   84b4e:	2004      	movs	r0, #4
   84b50:	f85d 4b04 	ldr.w	r4, [sp], #4
   84b54:	4770      	bx	lr
   84b56:	2800      	cmp	r0, #0
   84b58:	bf0c      	ite	eq
   84b5a:	2002      	moveq	r0, #2
   84b5c:	2003      	movne	r0, #3
   84b5e:	f85d 4b04 	ldr.w	r4, [sp], #4
   84b62:	4770      	bx	lr
   84b64:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   84b68:	d201      	bcs.n	84b6e <__fpclassifyd+0x32>
   84b6a:	2003      	movs	r0, #3
   84b6c:	e7f7      	b.n	84b5e <__fpclassifyd+0x22>
   84b6e:	4a06      	ldr	r2, [pc, #24]	; (84b88 <__fpclassifyd+0x4c>)
   84b70:	4293      	cmp	r3, r2
   84b72:	d001      	beq.n	84b78 <__fpclassifyd+0x3c>
   84b74:	2000      	movs	r0, #0
   84b76:	e7f2      	b.n	84b5e <__fpclassifyd+0x22>
   84b78:	f1d0 0001 	rsbs	r0, r0, #1
   84b7c:	bf38      	it	cc
   84b7e:	2000      	movcc	r0, #0
   84b80:	e7ed      	b.n	84b5e <__fpclassifyd+0x22>
   84b82:	bf00      	nop
   84b84:	7fdfffff 	.word	0x7fdfffff
   84b88:	7ff00000 	.word	0x7ff00000

00084b8c <_sbrk_r>:
   84b8c:	b538      	push	{r3, r4, r5, lr}
   84b8e:	4c07      	ldr	r4, [pc, #28]	; (84bac <_sbrk_r+0x20>)
   84b90:	2300      	movs	r3, #0
   84b92:	4605      	mov	r5, r0
   84b94:	4608      	mov	r0, r1
   84b96:	6023      	str	r3, [r4, #0]
   84b98:	f7fb ff60 	bl	80a5c <_sbrk>
   84b9c:	1c43      	adds	r3, r0, #1
   84b9e:	d000      	beq.n	84ba2 <_sbrk_r+0x16>
   84ba0:	bd38      	pop	{r3, r4, r5, pc}
   84ba2:	6823      	ldr	r3, [r4, #0]
   84ba4:	2b00      	cmp	r3, #0
   84ba6:	d0fb      	beq.n	84ba0 <_sbrk_r+0x14>
   84ba8:	602b      	str	r3, [r5, #0]
   84baa:	bd38      	pop	{r3, r4, r5, pc}
   84bac:	20073058 	.word	0x20073058

00084bb0 <__ssprint_r>:
   84bb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84bb4:	6894      	ldr	r4, [r2, #8]
   84bb6:	b083      	sub	sp, #12
   84bb8:	4692      	mov	sl, r2
   84bba:	4680      	mov	r8, r0
   84bbc:	460d      	mov	r5, r1
   84bbe:	6816      	ldr	r6, [r2, #0]
   84bc0:	2c00      	cmp	r4, #0
   84bc2:	d06f      	beq.n	84ca4 <__ssprint_r+0xf4>
   84bc4:	f04f 0b00 	mov.w	fp, #0
   84bc8:	6808      	ldr	r0, [r1, #0]
   84bca:	688b      	ldr	r3, [r1, #8]
   84bcc:	465c      	mov	r4, fp
   84bce:	2c00      	cmp	r4, #0
   84bd0:	d043      	beq.n	84c5a <__ssprint_r+0xaa>
   84bd2:	429c      	cmp	r4, r3
   84bd4:	461f      	mov	r7, r3
   84bd6:	d345      	bcc.n	84c64 <__ssprint_r+0xb4>
   84bd8:	89ab      	ldrh	r3, [r5, #12]
   84bda:	f413 6f90 	tst.w	r3, #1152	; 0x480
   84bde:	d044      	beq.n	84c6a <__ssprint_r+0xba>
   84be0:	696f      	ldr	r7, [r5, #20]
   84be2:	6929      	ldr	r1, [r5, #16]
   84be4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
   84be8:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
   84bec:	ebc1 0900 	rsb	r9, r1, r0
   84bf0:	1c62      	adds	r2, r4, #1
   84bf2:	107f      	asrs	r7, r7, #1
   84bf4:	444a      	add	r2, r9
   84bf6:	4297      	cmp	r7, r2
   84bf8:	bf34      	ite	cc
   84bfa:	4617      	movcc	r7, r2
   84bfc:	463a      	movcs	r2, r7
   84bfe:	055b      	lsls	r3, r3, #21
   84c00:	d535      	bpl.n	84c6e <__ssprint_r+0xbe>
   84c02:	4611      	mov	r1, r2
   84c04:	4640      	mov	r0, r8
   84c06:	f7fe fee9 	bl	839dc <_malloc_r>
   84c0a:	2800      	cmp	r0, #0
   84c0c:	d039      	beq.n	84c82 <__ssprint_r+0xd2>
   84c0e:	6929      	ldr	r1, [r5, #16]
   84c10:	464a      	mov	r2, r9
   84c12:	9001      	str	r0, [sp, #4]
   84c14:	f7ff f9c8 	bl	83fa8 <memcpy>
   84c18:	89aa      	ldrh	r2, [r5, #12]
   84c1a:	9b01      	ldr	r3, [sp, #4]
   84c1c:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   84c20:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   84c24:	81aa      	strh	r2, [r5, #12]
   84c26:	ebc9 0207 	rsb	r2, r9, r7
   84c2a:	eb03 0009 	add.w	r0, r3, r9
   84c2e:	616f      	str	r7, [r5, #20]
   84c30:	612b      	str	r3, [r5, #16]
   84c32:	6028      	str	r0, [r5, #0]
   84c34:	60aa      	str	r2, [r5, #8]
   84c36:	4627      	mov	r7, r4
   84c38:	46a1      	mov	r9, r4
   84c3a:	464a      	mov	r2, r9
   84c3c:	4659      	mov	r1, fp
   84c3e:	f7ff fa29 	bl	84094 <memmove>
   84c42:	f8da 2008 	ldr.w	r2, [sl, #8]
   84c46:	68ab      	ldr	r3, [r5, #8]
   84c48:	6828      	ldr	r0, [r5, #0]
   84c4a:	1bdb      	subs	r3, r3, r7
   84c4c:	4448      	add	r0, r9
   84c4e:	1b14      	subs	r4, r2, r4
   84c50:	60ab      	str	r3, [r5, #8]
   84c52:	6028      	str	r0, [r5, #0]
   84c54:	f8ca 4008 	str.w	r4, [sl, #8]
   84c58:	b324      	cbz	r4, 84ca4 <__ssprint_r+0xf4>
   84c5a:	f8d6 b000 	ldr.w	fp, [r6]
   84c5e:	6874      	ldr	r4, [r6, #4]
   84c60:	3608      	adds	r6, #8
   84c62:	e7b4      	b.n	84bce <__ssprint_r+0x1e>
   84c64:	4627      	mov	r7, r4
   84c66:	46a1      	mov	r9, r4
   84c68:	e7e7      	b.n	84c3a <__ssprint_r+0x8a>
   84c6a:	46b9      	mov	r9, r7
   84c6c:	e7e5      	b.n	84c3a <__ssprint_r+0x8a>
   84c6e:	4640      	mov	r0, r8
   84c70:	f7ff fd84 	bl	8477c <_realloc_r>
   84c74:	4603      	mov	r3, r0
   84c76:	2800      	cmp	r0, #0
   84c78:	d1d5      	bne.n	84c26 <__ssprint_r+0x76>
   84c7a:	4640      	mov	r0, r8
   84c7c:	6929      	ldr	r1, [r5, #16]
   84c7e:	f7fe fddd 	bl	8383c <_free_r>
   84c82:	89aa      	ldrh	r2, [r5, #12]
   84c84:	230c      	movs	r3, #12
   84c86:	f8c8 3000 	str.w	r3, [r8]
   84c8a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   84c8e:	2300      	movs	r3, #0
   84c90:	f04f 30ff 	mov.w	r0, #4294967295
   84c94:	81aa      	strh	r2, [r5, #12]
   84c96:	f8ca 3008 	str.w	r3, [sl, #8]
   84c9a:	f8ca 3004 	str.w	r3, [sl, #4]
   84c9e:	b003      	add	sp, #12
   84ca0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84ca4:	4620      	mov	r0, r4
   84ca6:	f8ca 4004 	str.w	r4, [sl, #4]
   84caa:	b003      	add	sp, #12
   84cac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084cb0 <__register_exitproc>:
   84cb0:	b5f0      	push	{r4, r5, r6, r7, lr}
   84cb2:	4c27      	ldr	r4, [pc, #156]	; (84d50 <__register_exitproc+0xa0>)
   84cb4:	b085      	sub	sp, #20
   84cb6:	6826      	ldr	r6, [r4, #0]
   84cb8:	4607      	mov	r7, r0
   84cba:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   84cbe:	2c00      	cmp	r4, #0
   84cc0:	d040      	beq.n	84d44 <__register_exitproc+0x94>
   84cc2:	6865      	ldr	r5, [r4, #4]
   84cc4:	2d1f      	cmp	r5, #31
   84cc6:	dd1e      	ble.n	84d06 <__register_exitproc+0x56>
   84cc8:	4822      	ldr	r0, [pc, #136]	; (84d54 <__register_exitproc+0xa4>)
   84cca:	b918      	cbnz	r0, 84cd4 <__register_exitproc+0x24>
   84ccc:	f04f 30ff 	mov.w	r0, #4294967295
   84cd0:	b005      	add	sp, #20
   84cd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84cd4:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84cd8:	9103      	str	r1, [sp, #12]
   84cda:	9202      	str	r2, [sp, #8]
   84cdc:	9301      	str	r3, [sp, #4]
   84cde:	f3af 8000 	nop.w
   84ce2:	9903      	ldr	r1, [sp, #12]
   84ce4:	4604      	mov	r4, r0
   84ce6:	9a02      	ldr	r2, [sp, #8]
   84ce8:	9b01      	ldr	r3, [sp, #4]
   84cea:	2800      	cmp	r0, #0
   84cec:	d0ee      	beq.n	84ccc <__register_exitproc+0x1c>
   84cee:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
   84cf2:	2000      	movs	r0, #0
   84cf4:	6025      	str	r5, [r4, #0]
   84cf6:	6060      	str	r0, [r4, #4]
   84cf8:	4605      	mov	r5, r0
   84cfa:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   84cfe:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   84d02:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   84d06:	b93f      	cbnz	r7, 84d18 <__register_exitproc+0x68>
   84d08:	1c6b      	adds	r3, r5, #1
   84d0a:	2000      	movs	r0, #0
   84d0c:	3502      	adds	r5, #2
   84d0e:	6063      	str	r3, [r4, #4]
   84d10:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
   84d14:	b005      	add	sp, #20
   84d16:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84d18:	2601      	movs	r6, #1
   84d1a:	40ae      	lsls	r6, r5
   84d1c:	eb04 0085 	add.w	r0, r4, r5, lsl #2
   84d20:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
   84d24:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   84d28:	2f02      	cmp	r7, #2
   84d2a:	ea42 0206 	orr.w	r2, r2, r6
   84d2e:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   84d32:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
   84d36:	d1e7      	bne.n	84d08 <__register_exitproc+0x58>
   84d38:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   84d3c:	431e      	orrs	r6, r3
   84d3e:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
   84d42:	e7e1      	b.n	84d08 <__register_exitproc+0x58>
   84d44:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   84d48:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   84d4c:	e7b9      	b.n	84cc2 <__register_exitproc+0x12>
   84d4e:	bf00      	nop
   84d50:	00085cbc 	.word	0x00085cbc
   84d54:	00000000 	.word	0x00000000

00084d58 <_calloc_r>:
   84d58:	b510      	push	{r4, lr}
   84d5a:	fb02 f101 	mul.w	r1, r2, r1
   84d5e:	f7fe fe3d 	bl	839dc <_malloc_r>
   84d62:	4604      	mov	r4, r0
   84d64:	b168      	cbz	r0, 84d82 <_calloc_r+0x2a>
   84d66:	f850 2c04 	ldr.w	r2, [r0, #-4]
   84d6a:	f022 0203 	bic.w	r2, r2, #3
   84d6e:	3a04      	subs	r2, #4
   84d70:	2a24      	cmp	r2, #36	; 0x24
   84d72:	d818      	bhi.n	84da6 <_calloc_r+0x4e>
   84d74:	2a13      	cmp	r2, #19
   84d76:	d806      	bhi.n	84d86 <_calloc_r+0x2e>
   84d78:	4603      	mov	r3, r0
   84d7a:	2200      	movs	r2, #0
   84d7c:	601a      	str	r2, [r3, #0]
   84d7e:	605a      	str	r2, [r3, #4]
   84d80:	609a      	str	r2, [r3, #8]
   84d82:	4620      	mov	r0, r4
   84d84:	bd10      	pop	{r4, pc}
   84d86:	2300      	movs	r3, #0
   84d88:	2a1b      	cmp	r2, #27
   84d8a:	6003      	str	r3, [r0, #0]
   84d8c:	6043      	str	r3, [r0, #4]
   84d8e:	d90f      	bls.n	84db0 <_calloc_r+0x58>
   84d90:	2a24      	cmp	r2, #36	; 0x24
   84d92:	6083      	str	r3, [r0, #8]
   84d94:	60c3      	str	r3, [r0, #12]
   84d96:	bf05      	ittet	eq
   84d98:	6103      	streq	r3, [r0, #16]
   84d9a:	6143      	streq	r3, [r0, #20]
   84d9c:	f100 0310 	addne.w	r3, r0, #16
   84da0:	f100 0318 	addeq.w	r3, r0, #24
   84da4:	e7e9      	b.n	84d7a <_calloc_r+0x22>
   84da6:	2100      	movs	r1, #0
   84da8:	f7fc fa0a 	bl	811c0 <memset>
   84dac:	4620      	mov	r0, r4
   84dae:	bd10      	pop	{r4, pc}
   84db0:	f100 0308 	add.w	r3, r0, #8
   84db4:	e7e1      	b.n	84d7a <_calloc_r+0x22>
   84db6:	bf00      	nop

00084db8 <__aeabi_drsub>:
   84db8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   84dbc:	e002      	b.n	84dc4 <__adddf3>
   84dbe:	bf00      	nop

00084dc0 <__aeabi_dsub>:
   84dc0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00084dc4 <__adddf3>:
   84dc4:	b530      	push	{r4, r5, lr}
   84dc6:	ea4f 0441 	mov.w	r4, r1, lsl #1
   84dca:	ea4f 0543 	mov.w	r5, r3, lsl #1
   84dce:	ea94 0f05 	teq	r4, r5
   84dd2:	bf08      	it	eq
   84dd4:	ea90 0f02 	teqeq	r0, r2
   84dd8:	bf1f      	itttt	ne
   84dda:	ea54 0c00 	orrsne.w	ip, r4, r0
   84dde:	ea55 0c02 	orrsne.w	ip, r5, r2
   84de2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   84de6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84dea:	f000 80e2 	beq.w	84fb2 <__adddf3+0x1ee>
   84dee:	ea4f 5454 	mov.w	r4, r4, lsr #21
   84df2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   84df6:	bfb8      	it	lt
   84df8:	426d      	neglt	r5, r5
   84dfa:	dd0c      	ble.n	84e16 <__adddf3+0x52>
   84dfc:	442c      	add	r4, r5
   84dfe:	ea80 0202 	eor.w	r2, r0, r2
   84e02:	ea81 0303 	eor.w	r3, r1, r3
   84e06:	ea82 0000 	eor.w	r0, r2, r0
   84e0a:	ea83 0101 	eor.w	r1, r3, r1
   84e0e:	ea80 0202 	eor.w	r2, r0, r2
   84e12:	ea81 0303 	eor.w	r3, r1, r3
   84e16:	2d36      	cmp	r5, #54	; 0x36
   84e18:	bf88      	it	hi
   84e1a:	bd30      	pophi	{r4, r5, pc}
   84e1c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84e20:	ea4f 3101 	mov.w	r1, r1, lsl #12
   84e24:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   84e28:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   84e2c:	d002      	beq.n	84e34 <__adddf3+0x70>
   84e2e:	4240      	negs	r0, r0
   84e30:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84e34:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   84e38:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84e3c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   84e40:	d002      	beq.n	84e48 <__adddf3+0x84>
   84e42:	4252      	negs	r2, r2
   84e44:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   84e48:	ea94 0f05 	teq	r4, r5
   84e4c:	f000 80a7 	beq.w	84f9e <__adddf3+0x1da>
   84e50:	f1a4 0401 	sub.w	r4, r4, #1
   84e54:	f1d5 0e20 	rsbs	lr, r5, #32
   84e58:	db0d      	blt.n	84e76 <__adddf3+0xb2>
   84e5a:	fa02 fc0e 	lsl.w	ip, r2, lr
   84e5e:	fa22 f205 	lsr.w	r2, r2, r5
   84e62:	1880      	adds	r0, r0, r2
   84e64:	f141 0100 	adc.w	r1, r1, #0
   84e68:	fa03 f20e 	lsl.w	r2, r3, lr
   84e6c:	1880      	adds	r0, r0, r2
   84e6e:	fa43 f305 	asr.w	r3, r3, r5
   84e72:	4159      	adcs	r1, r3
   84e74:	e00e      	b.n	84e94 <__adddf3+0xd0>
   84e76:	f1a5 0520 	sub.w	r5, r5, #32
   84e7a:	f10e 0e20 	add.w	lr, lr, #32
   84e7e:	2a01      	cmp	r2, #1
   84e80:	fa03 fc0e 	lsl.w	ip, r3, lr
   84e84:	bf28      	it	cs
   84e86:	f04c 0c02 	orrcs.w	ip, ip, #2
   84e8a:	fa43 f305 	asr.w	r3, r3, r5
   84e8e:	18c0      	adds	r0, r0, r3
   84e90:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   84e94:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84e98:	d507      	bpl.n	84eaa <__adddf3+0xe6>
   84e9a:	f04f 0e00 	mov.w	lr, #0
   84e9e:	f1dc 0c00 	rsbs	ip, ip, #0
   84ea2:	eb7e 0000 	sbcs.w	r0, lr, r0
   84ea6:	eb6e 0101 	sbc.w	r1, lr, r1
   84eaa:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   84eae:	d31b      	bcc.n	84ee8 <__adddf3+0x124>
   84eb0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   84eb4:	d30c      	bcc.n	84ed0 <__adddf3+0x10c>
   84eb6:	0849      	lsrs	r1, r1, #1
   84eb8:	ea5f 0030 	movs.w	r0, r0, rrx
   84ebc:	ea4f 0c3c 	mov.w	ip, ip, rrx
   84ec0:	f104 0401 	add.w	r4, r4, #1
   84ec4:	ea4f 5244 	mov.w	r2, r4, lsl #21
   84ec8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   84ecc:	f080 809a 	bcs.w	85004 <__adddf3+0x240>
   84ed0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   84ed4:	bf08      	it	eq
   84ed6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   84eda:	f150 0000 	adcs.w	r0, r0, #0
   84ede:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84ee2:	ea41 0105 	orr.w	r1, r1, r5
   84ee6:	bd30      	pop	{r4, r5, pc}
   84ee8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   84eec:	4140      	adcs	r0, r0
   84eee:	eb41 0101 	adc.w	r1, r1, r1
   84ef2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84ef6:	f1a4 0401 	sub.w	r4, r4, #1
   84efa:	d1e9      	bne.n	84ed0 <__adddf3+0x10c>
   84efc:	f091 0f00 	teq	r1, #0
   84f00:	bf04      	itt	eq
   84f02:	4601      	moveq	r1, r0
   84f04:	2000      	moveq	r0, #0
   84f06:	fab1 f381 	clz	r3, r1
   84f0a:	bf08      	it	eq
   84f0c:	3320      	addeq	r3, #32
   84f0e:	f1a3 030b 	sub.w	r3, r3, #11
   84f12:	f1b3 0220 	subs.w	r2, r3, #32
   84f16:	da0c      	bge.n	84f32 <__adddf3+0x16e>
   84f18:	320c      	adds	r2, #12
   84f1a:	dd08      	ble.n	84f2e <__adddf3+0x16a>
   84f1c:	f102 0c14 	add.w	ip, r2, #20
   84f20:	f1c2 020c 	rsb	r2, r2, #12
   84f24:	fa01 f00c 	lsl.w	r0, r1, ip
   84f28:	fa21 f102 	lsr.w	r1, r1, r2
   84f2c:	e00c      	b.n	84f48 <__adddf3+0x184>
   84f2e:	f102 0214 	add.w	r2, r2, #20
   84f32:	bfd8      	it	le
   84f34:	f1c2 0c20 	rsble	ip, r2, #32
   84f38:	fa01 f102 	lsl.w	r1, r1, r2
   84f3c:	fa20 fc0c 	lsr.w	ip, r0, ip
   84f40:	bfdc      	itt	le
   84f42:	ea41 010c 	orrle.w	r1, r1, ip
   84f46:	4090      	lslle	r0, r2
   84f48:	1ae4      	subs	r4, r4, r3
   84f4a:	bfa2      	ittt	ge
   84f4c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   84f50:	4329      	orrge	r1, r5
   84f52:	bd30      	popge	{r4, r5, pc}
   84f54:	ea6f 0404 	mvn.w	r4, r4
   84f58:	3c1f      	subs	r4, #31
   84f5a:	da1c      	bge.n	84f96 <__adddf3+0x1d2>
   84f5c:	340c      	adds	r4, #12
   84f5e:	dc0e      	bgt.n	84f7e <__adddf3+0x1ba>
   84f60:	f104 0414 	add.w	r4, r4, #20
   84f64:	f1c4 0220 	rsb	r2, r4, #32
   84f68:	fa20 f004 	lsr.w	r0, r0, r4
   84f6c:	fa01 f302 	lsl.w	r3, r1, r2
   84f70:	ea40 0003 	orr.w	r0, r0, r3
   84f74:	fa21 f304 	lsr.w	r3, r1, r4
   84f78:	ea45 0103 	orr.w	r1, r5, r3
   84f7c:	bd30      	pop	{r4, r5, pc}
   84f7e:	f1c4 040c 	rsb	r4, r4, #12
   84f82:	f1c4 0220 	rsb	r2, r4, #32
   84f86:	fa20 f002 	lsr.w	r0, r0, r2
   84f8a:	fa01 f304 	lsl.w	r3, r1, r4
   84f8e:	ea40 0003 	orr.w	r0, r0, r3
   84f92:	4629      	mov	r1, r5
   84f94:	bd30      	pop	{r4, r5, pc}
   84f96:	fa21 f004 	lsr.w	r0, r1, r4
   84f9a:	4629      	mov	r1, r5
   84f9c:	bd30      	pop	{r4, r5, pc}
   84f9e:	f094 0f00 	teq	r4, #0
   84fa2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   84fa6:	bf06      	itte	eq
   84fa8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   84fac:	3401      	addeq	r4, #1
   84fae:	3d01      	subne	r5, #1
   84fb0:	e74e      	b.n	84e50 <__adddf3+0x8c>
   84fb2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84fb6:	bf18      	it	ne
   84fb8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84fbc:	d029      	beq.n	85012 <__adddf3+0x24e>
   84fbe:	ea94 0f05 	teq	r4, r5
   84fc2:	bf08      	it	eq
   84fc4:	ea90 0f02 	teqeq	r0, r2
   84fc8:	d005      	beq.n	84fd6 <__adddf3+0x212>
   84fca:	ea54 0c00 	orrs.w	ip, r4, r0
   84fce:	bf04      	itt	eq
   84fd0:	4619      	moveq	r1, r3
   84fd2:	4610      	moveq	r0, r2
   84fd4:	bd30      	pop	{r4, r5, pc}
   84fd6:	ea91 0f03 	teq	r1, r3
   84fda:	bf1e      	ittt	ne
   84fdc:	2100      	movne	r1, #0
   84fde:	2000      	movne	r0, #0
   84fe0:	bd30      	popne	{r4, r5, pc}
   84fe2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   84fe6:	d105      	bne.n	84ff4 <__adddf3+0x230>
   84fe8:	0040      	lsls	r0, r0, #1
   84fea:	4149      	adcs	r1, r1
   84fec:	bf28      	it	cs
   84fee:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   84ff2:	bd30      	pop	{r4, r5, pc}
   84ff4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   84ff8:	bf3c      	itt	cc
   84ffa:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   84ffe:	bd30      	popcc	{r4, r5, pc}
   85000:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85004:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   85008:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8500c:	f04f 0000 	mov.w	r0, #0
   85010:	bd30      	pop	{r4, r5, pc}
   85012:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   85016:	bf1a      	itte	ne
   85018:	4619      	movne	r1, r3
   8501a:	4610      	movne	r0, r2
   8501c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   85020:	bf1c      	itt	ne
   85022:	460b      	movne	r3, r1
   85024:	4602      	movne	r2, r0
   85026:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8502a:	bf06      	itte	eq
   8502c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   85030:	ea91 0f03 	teqeq	r1, r3
   85034:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   85038:	bd30      	pop	{r4, r5, pc}
   8503a:	bf00      	nop

0008503c <__aeabi_ui2d>:
   8503c:	f090 0f00 	teq	r0, #0
   85040:	bf04      	itt	eq
   85042:	2100      	moveq	r1, #0
   85044:	4770      	bxeq	lr
   85046:	b530      	push	{r4, r5, lr}
   85048:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8504c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85050:	f04f 0500 	mov.w	r5, #0
   85054:	f04f 0100 	mov.w	r1, #0
   85058:	e750      	b.n	84efc <__adddf3+0x138>
   8505a:	bf00      	nop

0008505c <__aeabi_i2d>:
   8505c:	f090 0f00 	teq	r0, #0
   85060:	bf04      	itt	eq
   85062:	2100      	moveq	r1, #0
   85064:	4770      	bxeq	lr
   85066:	b530      	push	{r4, r5, lr}
   85068:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8506c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85070:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   85074:	bf48      	it	mi
   85076:	4240      	negmi	r0, r0
   85078:	f04f 0100 	mov.w	r1, #0
   8507c:	e73e      	b.n	84efc <__adddf3+0x138>
   8507e:	bf00      	nop

00085080 <__aeabi_f2d>:
   85080:	0042      	lsls	r2, r0, #1
   85082:	ea4f 01e2 	mov.w	r1, r2, asr #3
   85086:	ea4f 0131 	mov.w	r1, r1, rrx
   8508a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   8508e:	bf1f      	itttt	ne
   85090:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   85094:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85098:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   8509c:	4770      	bxne	lr
   8509e:	f092 0f00 	teq	r2, #0
   850a2:	bf14      	ite	ne
   850a4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   850a8:	4770      	bxeq	lr
   850aa:	b530      	push	{r4, r5, lr}
   850ac:	f44f 7460 	mov.w	r4, #896	; 0x380
   850b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   850b4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   850b8:	e720      	b.n	84efc <__adddf3+0x138>
   850ba:	bf00      	nop

000850bc <__aeabi_ul2d>:
   850bc:	ea50 0201 	orrs.w	r2, r0, r1
   850c0:	bf08      	it	eq
   850c2:	4770      	bxeq	lr
   850c4:	b530      	push	{r4, r5, lr}
   850c6:	f04f 0500 	mov.w	r5, #0
   850ca:	e00a      	b.n	850e2 <__aeabi_l2d+0x16>

000850cc <__aeabi_l2d>:
   850cc:	ea50 0201 	orrs.w	r2, r0, r1
   850d0:	bf08      	it	eq
   850d2:	4770      	bxeq	lr
   850d4:	b530      	push	{r4, r5, lr}
   850d6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   850da:	d502      	bpl.n	850e2 <__aeabi_l2d+0x16>
   850dc:	4240      	negs	r0, r0
   850de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   850e2:	f44f 6480 	mov.w	r4, #1024	; 0x400
   850e6:	f104 0432 	add.w	r4, r4, #50	; 0x32
   850ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   850ee:	f43f aedc 	beq.w	84eaa <__adddf3+0xe6>
   850f2:	f04f 0203 	mov.w	r2, #3
   850f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   850fa:	bf18      	it	ne
   850fc:	3203      	addne	r2, #3
   850fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   85102:	bf18      	it	ne
   85104:	3203      	addne	r2, #3
   85106:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   8510a:	f1c2 0320 	rsb	r3, r2, #32
   8510e:	fa00 fc03 	lsl.w	ip, r0, r3
   85112:	fa20 f002 	lsr.w	r0, r0, r2
   85116:	fa01 fe03 	lsl.w	lr, r1, r3
   8511a:	ea40 000e 	orr.w	r0, r0, lr
   8511e:	fa21 f102 	lsr.w	r1, r1, r2
   85122:	4414      	add	r4, r2
   85124:	e6c1      	b.n	84eaa <__adddf3+0xe6>
   85126:	bf00      	nop

00085128 <__aeabi_dmul>:
   85128:	b570      	push	{r4, r5, r6, lr}
   8512a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   8512e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85132:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   85136:	bf1d      	ittte	ne
   85138:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   8513c:	ea94 0f0c 	teqne	r4, ip
   85140:	ea95 0f0c 	teqne	r5, ip
   85144:	f000 f8de 	bleq	85304 <__aeabi_dmul+0x1dc>
   85148:	442c      	add	r4, r5
   8514a:	ea81 0603 	eor.w	r6, r1, r3
   8514e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   85152:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   85156:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   8515a:	bf18      	it	ne
   8515c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   85160:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85164:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   85168:	d038      	beq.n	851dc <__aeabi_dmul+0xb4>
   8516a:	fba0 ce02 	umull	ip, lr, r0, r2
   8516e:	f04f 0500 	mov.w	r5, #0
   85172:	fbe1 e502 	umlal	lr, r5, r1, r2
   85176:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8517a:	fbe0 e503 	umlal	lr, r5, r0, r3
   8517e:	f04f 0600 	mov.w	r6, #0
   85182:	fbe1 5603 	umlal	r5, r6, r1, r3
   85186:	f09c 0f00 	teq	ip, #0
   8518a:	bf18      	it	ne
   8518c:	f04e 0e01 	orrne.w	lr, lr, #1
   85190:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   85194:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   85198:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   8519c:	d204      	bcs.n	851a8 <__aeabi_dmul+0x80>
   8519e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   851a2:	416d      	adcs	r5, r5
   851a4:	eb46 0606 	adc.w	r6, r6, r6
   851a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   851ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   851b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   851b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   851b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   851bc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   851c0:	bf88      	it	hi
   851c2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   851c6:	d81e      	bhi.n	85206 <__aeabi_dmul+0xde>
   851c8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   851cc:	bf08      	it	eq
   851ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   851d2:	f150 0000 	adcs.w	r0, r0, #0
   851d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   851da:	bd70      	pop	{r4, r5, r6, pc}
   851dc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   851e0:	ea46 0101 	orr.w	r1, r6, r1
   851e4:	ea40 0002 	orr.w	r0, r0, r2
   851e8:	ea81 0103 	eor.w	r1, r1, r3
   851ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   851f0:	bfc2      	ittt	gt
   851f2:	ebd4 050c 	rsbsgt	r5, r4, ip
   851f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   851fa:	bd70      	popgt	{r4, r5, r6, pc}
   851fc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85200:	f04f 0e00 	mov.w	lr, #0
   85204:	3c01      	subs	r4, #1
   85206:	f300 80ab 	bgt.w	85360 <__aeabi_dmul+0x238>
   8520a:	f114 0f36 	cmn.w	r4, #54	; 0x36
   8520e:	bfde      	ittt	le
   85210:	2000      	movle	r0, #0
   85212:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   85216:	bd70      	pople	{r4, r5, r6, pc}
   85218:	f1c4 0400 	rsb	r4, r4, #0
   8521c:	3c20      	subs	r4, #32
   8521e:	da35      	bge.n	8528c <__aeabi_dmul+0x164>
   85220:	340c      	adds	r4, #12
   85222:	dc1b      	bgt.n	8525c <__aeabi_dmul+0x134>
   85224:	f104 0414 	add.w	r4, r4, #20
   85228:	f1c4 0520 	rsb	r5, r4, #32
   8522c:	fa00 f305 	lsl.w	r3, r0, r5
   85230:	fa20 f004 	lsr.w	r0, r0, r4
   85234:	fa01 f205 	lsl.w	r2, r1, r5
   85238:	ea40 0002 	orr.w	r0, r0, r2
   8523c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   85240:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85244:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85248:	fa21 f604 	lsr.w	r6, r1, r4
   8524c:	eb42 0106 	adc.w	r1, r2, r6
   85250:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85254:	bf08      	it	eq
   85256:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8525a:	bd70      	pop	{r4, r5, r6, pc}
   8525c:	f1c4 040c 	rsb	r4, r4, #12
   85260:	f1c4 0520 	rsb	r5, r4, #32
   85264:	fa00 f304 	lsl.w	r3, r0, r4
   85268:	fa20 f005 	lsr.w	r0, r0, r5
   8526c:	fa01 f204 	lsl.w	r2, r1, r4
   85270:	ea40 0002 	orr.w	r0, r0, r2
   85274:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85278:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8527c:	f141 0100 	adc.w	r1, r1, #0
   85280:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85284:	bf08      	it	eq
   85286:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8528a:	bd70      	pop	{r4, r5, r6, pc}
   8528c:	f1c4 0520 	rsb	r5, r4, #32
   85290:	fa00 f205 	lsl.w	r2, r0, r5
   85294:	ea4e 0e02 	orr.w	lr, lr, r2
   85298:	fa20 f304 	lsr.w	r3, r0, r4
   8529c:	fa01 f205 	lsl.w	r2, r1, r5
   852a0:	ea43 0302 	orr.w	r3, r3, r2
   852a4:	fa21 f004 	lsr.w	r0, r1, r4
   852a8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   852ac:	fa21 f204 	lsr.w	r2, r1, r4
   852b0:	ea20 0002 	bic.w	r0, r0, r2
   852b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   852b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   852bc:	bf08      	it	eq
   852be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   852c2:	bd70      	pop	{r4, r5, r6, pc}
   852c4:	f094 0f00 	teq	r4, #0
   852c8:	d10f      	bne.n	852ea <__aeabi_dmul+0x1c2>
   852ca:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   852ce:	0040      	lsls	r0, r0, #1
   852d0:	eb41 0101 	adc.w	r1, r1, r1
   852d4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   852d8:	bf08      	it	eq
   852da:	3c01      	subeq	r4, #1
   852dc:	d0f7      	beq.n	852ce <__aeabi_dmul+0x1a6>
   852de:	ea41 0106 	orr.w	r1, r1, r6
   852e2:	f095 0f00 	teq	r5, #0
   852e6:	bf18      	it	ne
   852e8:	4770      	bxne	lr
   852ea:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   852ee:	0052      	lsls	r2, r2, #1
   852f0:	eb43 0303 	adc.w	r3, r3, r3
   852f4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   852f8:	bf08      	it	eq
   852fa:	3d01      	subeq	r5, #1
   852fc:	d0f7      	beq.n	852ee <__aeabi_dmul+0x1c6>
   852fe:	ea43 0306 	orr.w	r3, r3, r6
   85302:	4770      	bx	lr
   85304:	ea94 0f0c 	teq	r4, ip
   85308:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8530c:	bf18      	it	ne
   8530e:	ea95 0f0c 	teqne	r5, ip
   85312:	d00c      	beq.n	8532e <__aeabi_dmul+0x206>
   85314:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85318:	bf18      	it	ne
   8531a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8531e:	d1d1      	bne.n	852c4 <__aeabi_dmul+0x19c>
   85320:	ea81 0103 	eor.w	r1, r1, r3
   85324:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85328:	f04f 0000 	mov.w	r0, #0
   8532c:	bd70      	pop	{r4, r5, r6, pc}
   8532e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85332:	bf06      	itte	eq
   85334:	4610      	moveq	r0, r2
   85336:	4619      	moveq	r1, r3
   85338:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8533c:	d019      	beq.n	85372 <__aeabi_dmul+0x24a>
   8533e:	ea94 0f0c 	teq	r4, ip
   85342:	d102      	bne.n	8534a <__aeabi_dmul+0x222>
   85344:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   85348:	d113      	bne.n	85372 <__aeabi_dmul+0x24a>
   8534a:	ea95 0f0c 	teq	r5, ip
   8534e:	d105      	bne.n	8535c <__aeabi_dmul+0x234>
   85350:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   85354:	bf1c      	itt	ne
   85356:	4610      	movne	r0, r2
   85358:	4619      	movne	r1, r3
   8535a:	d10a      	bne.n	85372 <__aeabi_dmul+0x24a>
   8535c:	ea81 0103 	eor.w	r1, r1, r3
   85360:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85364:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85368:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8536c:	f04f 0000 	mov.w	r0, #0
   85370:	bd70      	pop	{r4, r5, r6, pc}
   85372:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85376:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8537a:	bd70      	pop	{r4, r5, r6, pc}

0008537c <__aeabi_ddiv>:
   8537c:	b570      	push	{r4, r5, r6, lr}
   8537e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85382:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85386:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8538a:	bf1d      	ittte	ne
   8538c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85390:	ea94 0f0c 	teqne	r4, ip
   85394:	ea95 0f0c 	teqne	r5, ip
   85398:	f000 f8a7 	bleq	854ea <__aeabi_ddiv+0x16e>
   8539c:	eba4 0405 	sub.w	r4, r4, r5
   853a0:	ea81 0e03 	eor.w	lr, r1, r3
   853a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   853a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
   853ac:	f000 8088 	beq.w	854c0 <__aeabi_ddiv+0x144>
   853b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
   853b4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   853b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   853bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   853c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
   853c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   853c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   853cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
   853d0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   853d4:	429d      	cmp	r5, r3
   853d6:	bf08      	it	eq
   853d8:	4296      	cmpeq	r6, r2
   853da:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   853de:	f504 7440 	add.w	r4, r4, #768	; 0x300
   853e2:	d202      	bcs.n	853ea <__aeabi_ddiv+0x6e>
   853e4:	085b      	lsrs	r3, r3, #1
   853e6:	ea4f 0232 	mov.w	r2, r2, rrx
   853ea:	1ab6      	subs	r6, r6, r2
   853ec:	eb65 0503 	sbc.w	r5, r5, r3
   853f0:	085b      	lsrs	r3, r3, #1
   853f2:	ea4f 0232 	mov.w	r2, r2, rrx
   853f6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   853fa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   853fe:	ebb6 0e02 	subs.w	lr, r6, r2
   85402:	eb75 0e03 	sbcs.w	lr, r5, r3
   85406:	bf22      	ittt	cs
   85408:	1ab6      	subcs	r6, r6, r2
   8540a:	4675      	movcs	r5, lr
   8540c:	ea40 000c 	orrcs.w	r0, r0, ip
   85410:	085b      	lsrs	r3, r3, #1
   85412:	ea4f 0232 	mov.w	r2, r2, rrx
   85416:	ebb6 0e02 	subs.w	lr, r6, r2
   8541a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8541e:	bf22      	ittt	cs
   85420:	1ab6      	subcs	r6, r6, r2
   85422:	4675      	movcs	r5, lr
   85424:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   85428:	085b      	lsrs	r3, r3, #1
   8542a:	ea4f 0232 	mov.w	r2, r2, rrx
   8542e:	ebb6 0e02 	subs.w	lr, r6, r2
   85432:	eb75 0e03 	sbcs.w	lr, r5, r3
   85436:	bf22      	ittt	cs
   85438:	1ab6      	subcs	r6, r6, r2
   8543a:	4675      	movcs	r5, lr
   8543c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   85440:	085b      	lsrs	r3, r3, #1
   85442:	ea4f 0232 	mov.w	r2, r2, rrx
   85446:	ebb6 0e02 	subs.w	lr, r6, r2
   8544a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8544e:	bf22      	ittt	cs
   85450:	1ab6      	subcs	r6, r6, r2
   85452:	4675      	movcs	r5, lr
   85454:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   85458:	ea55 0e06 	orrs.w	lr, r5, r6
   8545c:	d018      	beq.n	85490 <__aeabi_ddiv+0x114>
   8545e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   85462:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   85466:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8546a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   8546e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   85472:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   85476:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8547a:	d1c0      	bne.n	853fe <__aeabi_ddiv+0x82>
   8547c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85480:	d10b      	bne.n	8549a <__aeabi_ddiv+0x11e>
   85482:	ea41 0100 	orr.w	r1, r1, r0
   85486:	f04f 0000 	mov.w	r0, #0
   8548a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   8548e:	e7b6      	b.n	853fe <__aeabi_ddiv+0x82>
   85490:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85494:	bf04      	itt	eq
   85496:	4301      	orreq	r1, r0
   85498:	2000      	moveq	r0, #0
   8549a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   8549e:	bf88      	it	hi
   854a0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   854a4:	f63f aeaf 	bhi.w	85206 <__aeabi_dmul+0xde>
   854a8:	ebb5 0c03 	subs.w	ip, r5, r3
   854ac:	bf04      	itt	eq
   854ae:	ebb6 0c02 	subseq.w	ip, r6, r2
   854b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   854b6:	f150 0000 	adcs.w	r0, r0, #0
   854ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   854be:	bd70      	pop	{r4, r5, r6, pc}
   854c0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   854c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   854c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   854cc:	bfc2      	ittt	gt
   854ce:	ebd4 050c 	rsbsgt	r5, r4, ip
   854d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   854d6:	bd70      	popgt	{r4, r5, r6, pc}
   854d8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   854dc:	f04f 0e00 	mov.w	lr, #0
   854e0:	3c01      	subs	r4, #1
   854e2:	e690      	b.n	85206 <__aeabi_dmul+0xde>
   854e4:	ea45 0e06 	orr.w	lr, r5, r6
   854e8:	e68d      	b.n	85206 <__aeabi_dmul+0xde>
   854ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   854ee:	ea94 0f0c 	teq	r4, ip
   854f2:	bf08      	it	eq
   854f4:	ea95 0f0c 	teqeq	r5, ip
   854f8:	f43f af3b 	beq.w	85372 <__aeabi_dmul+0x24a>
   854fc:	ea94 0f0c 	teq	r4, ip
   85500:	d10a      	bne.n	85518 <__aeabi_ddiv+0x19c>
   85502:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   85506:	f47f af34 	bne.w	85372 <__aeabi_dmul+0x24a>
   8550a:	ea95 0f0c 	teq	r5, ip
   8550e:	f47f af25 	bne.w	8535c <__aeabi_dmul+0x234>
   85512:	4610      	mov	r0, r2
   85514:	4619      	mov	r1, r3
   85516:	e72c      	b.n	85372 <__aeabi_dmul+0x24a>
   85518:	ea95 0f0c 	teq	r5, ip
   8551c:	d106      	bne.n	8552c <__aeabi_ddiv+0x1b0>
   8551e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85522:	f43f aefd 	beq.w	85320 <__aeabi_dmul+0x1f8>
   85526:	4610      	mov	r0, r2
   85528:	4619      	mov	r1, r3
   8552a:	e722      	b.n	85372 <__aeabi_dmul+0x24a>
   8552c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85530:	bf18      	it	ne
   85532:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85536:	f47f aec5 	bne.w	852c4 <__aeabi_dmul+0x19c>
   8553a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   8553e:	f47f af0d 	bne.w	8535c <__aeabi_dmul+0x234>
   85542:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   85546:	f47f aeeb 	bne.w	85320 <__aeabi_dmul+0x1f8>
   8554a:	e712      	b.n	85372 <__aeabi_dmul+0x24a>

0008554c <__gedf2>:
   8554c:	f04f 3cff 	mov.w	ip, #4294967295
   85550:	e006      	b.n	85560 <__cmpdf2+0x4>
   85552:	bf00      	nop

00085554 <__ledf2>:
   85554:	f04f 0c01 	mov.w	ip, #1
   85558:	e002      	b.n	85560 <__cmpdf2+0x4>
   8555a:	bf00      	nop

0008555c <__cmpdf2>:
   8555c:	f04f 0c01 	mov.w	ip, #1
   85560:	f84d cd04 	str.w	ip, [sp, #-4]!
   85564:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85568:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8556c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85570:	bf18      	it	ne
   85572:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   85576:	d01b      	beq.n	855b0 <__cmpdf2+0x54>
   85578:	b001      	add	sp, #4
   8557a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   8557e:	bf0c      	ite	eq
   85580:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   85584:	ea91 0f03 	teqne	r1, r3
   85588:	bf02      	ittt	eq
   8558a:	ea90 0f02 	teqeq	r0, r2
   8558e:	2000      	moveq	r0, #0
   85590:	4770      	bxeq	lr
   85592:	f110 0f00 	cmn.w	r0, #0
   85596:	ea91 0f03 	teq	r1, r3
   8559a:	bf58      	it	pl
   8559c:	4299      	cmppl	r1, r3
   8559e:	bf08      	it	eq
   855a0:	4290      	cmpeq	r0, r2
   855a2:	bf2c      	ite	cs
   855a4:	17d8      	asrcs	r0, r3, #31
   855a6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   855aa:	f040 0001 	orr.w	r0, r0, #1
   855ae:	4770      	bx	lr
   855b0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   855b4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   855b8:	d102      	bne.n	855c0 <__cmpdf2+0x64>
   855ba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   855be:	d107      	bne.n	855d0 <__cmpdf2+0x74>
   855c0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   855c4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   855c8:	d1d6      	bne.n	85578 <__cmpdf2+0x1c>
   855ca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   855ce:	d0d3      	beq.n	85578 <__cmpdf2+0x1c>
   855d0:	f85d 0b04 	ldr.w	r0, [sp], #4
   855d4:	4770      	bx	lr
   855d6:	bf00      	nop

000855d8 <__aeabi_cdrcmple>:
   855d8:	4684      	mov	ip, r0
   855da:	4610      	mov	r0, r2
   855dc:	4662      	mov	r2, ip
   855de:	468c      	mov	ip, r1
   855e0:	4619      	mov	r1, r3
   855e2:	4663      	mov	r3, ip
   855e4:	e000      	b.n	855e8 <__aeabi_cdcmpeq>
   855e6:	bf00      	nop

000855e8 <__aeabi_cdcmpeq>:
   855e8:	b501      	push	{r0, lr}
   855ea:	f7ff ffb7 	bl	8555c <__cmpdf2>
   855ee:	2800      	cmp	r0, #0
   855f0:	bf48      	it	mi
   855f2:	f110 0f00 	cmnmi.w	r0, #0
   855f6:	bd01      	pop	{r0, pc}

000855f8 <__aeabi_dcmpeq>:
   855f8:	f84d ed08 	str.w	lr, [sp, #-8]!
   855fc:	f7ff fff4 	bl	855e8 <__aeabi_cdcmpeq>
   85600:	bf0c      	ite	eq
   85602:	2001      	moveq	r0, #1
   85604:	2000      	movne	r0, #0
   85606:	f85d fb08 	ldr.w	pc, [sp], #8
   8560a:	bf00      	nop

0008560c <__aeabi_dcmplt>:
   8560c:	f84d ed08 	str.w	lr, [sp, #-8]!
   85610:	f7ff ffea 	bl	855e8 <__aeabi_cdcmpeq>
   85614:	bf34      	ite	cc
   85616:	2001      	movcc	r0, #1
   85618:	2000      	movcs	r0, #0
   8561a:	f85d fb08 	ldr.w	pc, [sp], #8
   8561e:	bf00      	nop

00085620 <__aeabi_dcmple>:
   85620:	f84d ed08 	str.w	lr, [sp, #-8]!
   85624:	f7ff ffe0 	bl	855e8 <__aeabi_cdcmpeq>
   85628:	bf94      	ite	ls
   8562a:	2001      	movls	r0, #1
   8562c:	2000      	movhi	r0, #0
   8562e:	f85d fb08 	ldr.w	pc, [sp], #8
   85632:	bf00      	nop

00085634 <__aeabi_dcmpge>:
   85634:	f84d ed08 	str.w	lr, [sp, #-8]!
   85638:	f7ff ffce 	bl	855d8 <__aeabi_cdrcmple>
   8563c:	bf94      	ite	ls
   8563e:	2001      	movls	r0, #1
   85640:	2000      	movhi	r0, #0
   85642:	f85d fb08 	ldr.w	pc, [sp], #8
   85646:	bf00      	nop

00085648 <__aeabi_dcmpgt>:
   85648:	f84d ed08 	str.w	lr, [sp, #-8]!
   8564c:	f7ff ffc4 	bl	855d8 <__aeabi_cdrcmple>
   85650:	bf34      	ite	cc
   85652:	2001      	movcc	r0, #1
   85654:	2000      	movcs	r0, #0
   85656:	f85d fb08 	ldr.w	pc, [sp], #8
   8565a:	bf00      	nop

0008565c <__aeabi_d2iz>:
   8565c:	ea4f 0241 	mov.w	r2, r1, lsl #1
   85660:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   85664:	d215      	bcs.n	85692 <__aeabi_d2iz+0x36>
   85666:	d511      	bpl.n	8568c <__aeabi_d2iz+0x30>
   85668:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   8566c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   85670:	d912      	bls.n	85698 <__aeabi_d2iz+0x3c>
   85672:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   85676:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8567a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8567e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   85682:	fa23 f002 	lsr.w	r0, r3, r2
   85686:	bf18      	it	ne
   85688:	4240      	negne	r0, r0
   8568a:	4770      	bx	lr
   8568c:	f04f 0000 	mov.w	r0, #0
   85690:	4770      	bx	lr
   85692:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   85696:	d105      	bne.n	856a4 <__aeabi_d2iz+0x48>
   85698:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   8569c:	bf08      	it	eq
   8569e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   856a2:	4770      	bx	lr
   856a4:	f04f 0000 	mov.w	r0, #0
   856a8:	4770      	bx	lr
   856aa:	bf00      	nop

000856ac <__aeabi_uldivmod>:
   856ac:	b94b      	cbnz	r3, 856c2 <__aeabi_uldivmod+0x16>
   856ae:	b942      	cbnz	r2, 856c2 <__aeabi_uldivmod+0x16>
   856b0:	2900      	cmp	r1, #0
   856b2:	bf08      	it	eq
   856b4:	2800      	cmpeq	r0, #0
   856b6:	d002      	beq.n	856be <__aeabi_uldivmod+0x12>
   856b8:	f04f 31ff 	mov.w	r1, #4294967295
   856bc:	4608      	mov	r0, r1
   856be:	f000 b83b 	b.w	85738 <__aeabi_idiv0>
   856c2:	b082      	sub	sp, #8
   856c4:	46ec      	mov	ip, sp
   856c6:	e92d 5000 	stmdb	sp!, {ip, lr}
   856ca:	f000 f81d 	bl	85708 <__gnu_uldivmod_helper>
   856ce:	f8dd e004 	ldr.w	lr, [sp, #4]
   856d2:	b002      	add	sp, #8
   856d4:	bc0c      	pop	{r2, r3}
   856d6:	4770      	bx	lr

000856d8 <__gnu_ldivmod_helper>:
   856d8:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   856dc:	9e08      	ldr	r6, [sp, #32]
   856de:	4614      	mov	r4, r2
   856e0:	461d      	mov	r5, r3
   856e2:	4680      	mov	r8, r0
   856e4:	4689      	mov	r9, r1
   856e6:	f000 f829 	bl	8573c <__divdi3>
   856ea:	fb04 f301 	mul.w	r3, r4, r1
   856ee:	fba4 ab00 	umull	sl, fp, r4, r0
   856f2:	fb00 3205 	mla	r2, r0, r5, r3
   856f6:	4493      	add	fp, r2
   856f8:	ebb8 080a 	subs.w	r8, r8, sl
   856fc:	eb69 090b 	sbc.w	r9, r9, fp
   85700:	e9c6 8900 	strd	r8, r9, [r6]
   85704:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00085708 <__gnu_uldivmod_helper>:
   85708:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   8570c:	9e08      	ldr	r6, [sp, #32]
   8570e:	4614      	mov	r4, r2
   85710:	461d      	mov	r5, r3
   85712:	4680      	mov	r8, r0
   85714:	4689      	mov	r9, r1
   85716:	f000 f961 	bl	859dc <__udivdi3>
   8571a:	fb00 f505 	mul.w	r5, r0, r5
   8571e:	fba0 ab04 	umull	sl, fp, r0, r4
   85722:	fb04 5401 	mla	r4, r4, r1, r5
   85726:	44a3      	add	fp, r4
   85728:	ebb8 080a 	subs.w	r8, r8, sl
   8572c:	eb69 090b 	sbc.w	r9, r9, fp
   85730:	e9c6 8900 	strd	r8, r9, [r6]
   85734:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00085738 <__aeabi_idiv0>:
   85738:	4770      	bx	lr
   8573a:	bf00      	nop

0008573c <__divdi3>:
   8573c:	2900      	cmp	r1, #0
   8573e:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85742:	f2c0 80a1 	blt.w	85888 <__divdi3+0x14c>
   85746:	2400      	movs	r4, #0
   85748:	2b00      	cmp	r3, #0
   8574a:	f2c0 8098 	blt.w	8587e <__divdi3+0x142>
   8574e:	4615      	mov	r5, r2
   85750:	4606      	mov	r6, r0
   85752:	460f      	mov	r7, r1
   85754:	2b00      	cmp	r3, #0
   85756:	d13f      	bne.n	857d8 <__divdi3+0x9c>
   85758:	428a      	cmp	r2, r1
   8575a:	d958      	bls.n	8580e <__divdi3+0xd2>
   8575c:	fab2 f382 	clz	r3, r2
   85760:	b14b      	cbz	r3, 85776 <__divdi3+0x3a>
   85762:	f1c3 0220 	rsb	r2, r3, #32
   85766:	fa01 f703 	lsl.w	r7, r1, r3
   8576a:	fa20 f202 	lsr.w	r2, r0, r2
   8576e:	409d      	lsls	r5, r3
   85770:	fa00 f603 	lsl.w	r6, r0, r3
   85774:	4317      	orrs	r7, r2
   85776:	0c29      	lsrs	r1, r5, #16
   85778:	fbb7 f2f1 	udiv	r2, r7, r1
   8577c:	fb01 7712 	mls	r7, r1, r2, r7
   85780:	b2a8      	uxth	r0, r5
   85782:	fb00 f302 	mul.w	r3, r0, r2
   85786:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   8578a:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   8578e:	42bb      	cmp	r3, r7
   85790:	d909      	bls.n	857a6 <__divdi3+0x6a>
   85792:	197f      	adds	r7, r7, r5
   85794:	f102 3cff 	add.w	ip, r2, #4294967295
   85798:	f080 8105 	bcs.w	859a6 <__divdi3+0x26a>
   8579c:	42bb      	cmp	r3, r7
   8579e:	f240 8102 	bls.w	859a6 <__divdi3+0x26a>
   857a2:	3a02      	subs	r2, #2
   857a4:	442f      	add	r7, r5
   857a6:	1aff      	subs	r7, r7, r3
   857a8:	fbb7 f3f1 	udiv	r3, r7, r1
   857ac:	fb01 7113 	mls	r1, r1, r3, r7
   857b0:	fb00 f003 	mul.w	r0, r0, r3
   857b4:	b2b6      	uxth	r6, r6
   857b6:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   857ba:	4288      	cmp	r0, r1
   857bc:	d908      	bls.n	857d0 <__divdi3+0x94>
   857be:	1949      	adds	r1, r1, r5
   857c0:	f103 37ff 	add.w	r7, r3, #4294967295
   857c4:	f080 80f1 	bcs.w	859aa <__divdi3+0x26e>
   857c8:	4288      	cmp	r0, r1
   857ca:	f240 80ee 	bls.w	859aa <__divdi3+0x26e>
   857ce:	3b02      	subs	r3, #2
   857d0:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   857d4:	2300      	movs	r3, #0
   857d6:	e003      	b.n	857e0 <__divdi3+0xa4>
   857d8:	428b      	cmp	r3, r1
   857da:	d90a      	bls.n	857f2 <__divdi3+0xb6>
   857dc:	2300      	movs	r3, #0
   857de:	461a      	mov	r2, r3
   857e0:	4610      	mov	r0, r2
   857e2:	4619      	mov	r1, r3
   857e4:	b114      	cbz	r4, 857ec <__divdi3+0xb0>
   857e6:	4240      	negs	r0, r0
   857e8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   857ec:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   857f0:	4770      	bx	lr
   857f2:	fab3 f883 	clz	r8, r3
   857f6:	f1b8 0f00 	cmp.w	r8, #0
   857fa:	f040 8088 	bne.w	8590e <__divdi3+0x1d2>
   857fe:	428b      	cmp	r3, r1
   85800:	d302      	bcc.n	85808 <__divdi3+0xcc>
   85802:	4282      	cmp	r2, r0
   85804:	f200 80e2 	bhi.w	859cc <__divdi3+0x290>
   85808:	2300      	movs	r3, #0
   8580a:	2201      	movs	r2, #1
   8580c:	e7e8      	b.n	857e0 <__divdi3+0xa4>
   8580e:	b912      	cbnz	r2, 85816 <__divdi3+0xda>
   85810:	2301      	movs	r3, #1
   85812:	fbb3 f5f2 	udiv	r5, r3, r2
   85816:	fab5 f285 	clz	r2, r5
   8581a:	2a00      	cmp	r2, #0
   8581c:	d13a      	bne.n	85894 <__divdi3+0x158>
   8581e:	1b7f      	subs	r7, r7, r5
   85820:	0c28      	lsrs	r0, r5, #16
   85822:	fa1f fc85 	uxth.w	ip, r5
   85826:	2301      	movs	r3, #1
   85828:	fbb7 f1f0 	udiv	r1, r7, r0
   8582c:	fb00 7711 	mls	r7, r0, r1, r7
   85830:	fb0c f201 	mul.w	r2, ip, r1
   85834:	ea4f 4816 	mov.w	r8, r6, lsr #16
   85838:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   8583c:	42ba      	cmp	r2, r7
   8583e:	d907      	bls.n	85850 <__divdi3+0x114>
   85840:	197f      	adds	r7, r7, r5
   85842:	f101 38ff 	add.w	r8, r1, #4294967295
   85846:	d202      	bcs.n	8584e <__divdi3+0x112>
   85848:	42ba      	cmp	r2, r7
   8584a:	f200 80c4 	bhi.w	859d6 <__divdi3+0x29a>
   8584e:	4641      	mov	r1, r8
   85850:	1abf      	subs	r7, r7, r2
   85852:	fbb7 f2f0 	udiv	r2, r7, r0
   85856:	fb00 7012 	mls	r0, r0, r2, r7
   8585a:	fb0c fc02 	mul.w	ip, ip, r2
   8585e:	b2b6      	uxth	r6, r6
   85860:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   85864:	4584      	cmp	ip, r0
   85866:	d907      	bls.n	85878 <__divdi3+0x13c>
   85868:	1940      	adds	r0, r0, r5
   8586a:	f102 37ff 	add.w	r7, r2, #4294967295
   8586e:	d202      	bcs.n	85876 <__divdi3+0x13a>
   85870:	4584      	cmp	ip, r0
   85872:	f200 80ae 	bhi.w	859d2 <__divdi3+0x296>
   85876:	463a      	mov	r2, r7
   85878:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   8587c:	e7b0      	b.n	857e0 <__divdi3+0xa4>
   8587e:	43e4      	mvns	r4, r4
   85880:	4252      	negs	r2, r2
   85882:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   85886:	e762      	b.n	8574e <__divdi3+0x12>
   85888:	4240      	negs	r0, r0
   8588a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8588e:	f04f 34ff 	mov.w	r4, #4294967295
   85892:	e759      	b.n	85748 <__divdi3+0xc>
   85894:	4095      	lsls	r5, r2
   85896:	f1c2 0920 	rsb	r9, r2, #32
   8589a:	fa27 f109 	lsr.w	r1, r7, r9
   8589e:	fa26 f909 	lsr.w	r9, r6, r9
   858a2:	4097      	lsls	r7, r2
   858a4:	0c28      	lsrs	r0, r5, #16
   858a6:	fbb1 f8f0 	udiv	r8, r1, r0
   858aa:	fb00 1118 	mls	r1, r0, r8, r1
   858ae:	fa1f fc85 	uxth.w	ip, r5
   858b2:	fb0c f308 	mul.w	r3, ip, r8
   858b6:	ea49 0907 	orr.w	r9, r9, r7
   858ba:	ea4f 4719 	mov.w	r7, r9, lsr #16
   858be:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   858c2:	428b      	cmp	r3, r1
   858c4:	fa06 f602 	lsl.w	r6, r6, r2
   858c8:	d908      	bls.n	858dc <__divdi3+0x1a0>
   858ca:	1949      	adds	r1, r1, r5
   858cc:	f108 32ff 	add.w	r2, r8, #4294967295
   858d0:	d27a      	bcs.n	859c8 <__divdi3+0x28c>
   858d2:	428b      	cmp	r3, r1
   858d4:	d978      	bls.n	859c8 <__divdi3+0x28c>
   858d6:	f1a8 0802 	sub.w	r8, r8, #2
   858da:	4429      	add	r1, r5
   858dc:	1ac9      	subs	r1, r1, r3
   858de:	fbb1 f3f0 	udiv	r3, r1, r0
   858e2:	fb00 1713 	mls	r7, r0, r3, r1
   858e6:	fb0c f203 	mul.w	r2, ip, r3
   858ea:	fa1f f989 	uxth.w	r9, r9
   858ee:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   858f2:	42ba      	cmp	r2, r7
   858f4:	d907      	bls.n	85906 <__divdi3+0x1ca>
   858f6:	197f      	adds	r7, r7, r5
   858f8:	f103 31ff 	add.w	r1, r3, #4294967295
   858fc:	d260      	bcs.n	859c0 <__divdi3+0x284>
   858fe:	42ba      	cmp	r2, r7
   85900:	d95e      	bls.n	859c0 <__divdi3+0x284>
   85902:	3b02      	subs	r3, #2
   85904:	442f      	add	r7, r5
   85906:	1abf      	subs	r7, r7, r2
   85908:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   8590c:	e78c      	b.n	85828 <__divdi3+0xec>
   8590e:	f1c8 0220 	rsb	r2, r8, #32
   85912:	fa25 f102 	lsr.w	r1, r5, r2
   85916:	fa03 fc08 	lsl.w	ip, r3, r8
   8591a:	fa27 f302 	lsr.w	r3, r7, r2
   8591e:	fa20 f202 	lsr.w	r2, r0, r2
   85922:	fa07 f708 	lsl.w	r7, r7, r8
   85926:	ea41 0c0c 	orr.w	ip, r1, ip
   8592a:	ea4f 491c 	mov.w	r9, ip, lsr #16
   8592e:	fbb3 f1f9 	udiv	r1, r3, r9
   85932:	fb09 3311 	mls	r3, r9, r1, r3
   85936:	fa1f fa8c 	uxth.w	sl, ip
   8593a:	fb0a fb01 	mul.w	fp, sl, r1
   8593e:	4317      	orrs	r7, r2
   85940:	0c3a      	lsrs	r2, r7, #16
   85942:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   85946:	459b      	cmp	fp, r3
   85948:	fa05 f008 	lsl.w	r0, r5, r8
   8594c:	d908      	bls.n	85960 <__divdi3+0x224>
   8594e:	eb13 030c 	adds.w	r3, r3, ip
   85952:	f101 32ff 	add.w	r2, r1, #4294967295
   85956:	d235      	bcs.n	859c4 <__divdi3+0x288>
   85958:	459b      	cmp	fp, r3
   8595a:	d933      	bls.n	859c4 <__divdi3+0x288>
   8595c:	3902      	subs	r1, #2
   8595e:	4463      	add	r3, ip
   85960:	ebcb 0303 	rsb	r3, fp, r3
   85964:	fbb3 f2f9 	udiv	r2, r3, r9
   85968:	fb09 3312 	mls	r3, r9, r2, r3
   8596c:	fb0a fa02 	mul.w	sl, sl, r2
   85970:	b2bf      	uxth	r7, r7
   85972:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   85976:	45ba      	cmp	sl, r7
   85978:	d908      	bls.n	8598c <__divdi3+0x250>
   8597a:	eb17 070c 	adds.w	r7, r7, ip
   8597e:	f102 33ff 	add.w	r3, r2, #4294967295
   85982:	d21b      	bcs.n	859bc <__divdi3+0x280>
   85984:	45ba      	cmp	sl, r7
   85986:	d919      	bls.n	859bc <__divdi3+0x280>
   85988:	3a02      	subs	r2, #2
   8598a:	4467      	add	r7, ip
   8598c:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   85990:	fba5 0100 	umull	r0, r1, r5, r0
   85994:	ebca 0707 	rsb	r7, sl, r7
   85998:	428f      	cmp	r7, r1
   8599a:	f04f 0300 	mov.w	r3, #0
   8599e:	d30a      	bcc.n	859b6 <__divdi3+0x27a>
   859a0:	d005      	beq.n	859ae <__divdi3+0x272>
   859a2:	462a      	mov	r2, r5
   859a4:	e71c      	b.n	857e0 <__divdi3+0xa4>
   859a6:	4662      	mov	r2, ip
   859a8:	e6fd      	b.n	857a6 <__divdi3+0x6a>
   859aa:	463b      	mov	r3, r7
   859ac:	e710      	b.n	857d0 <__divdi3+0x94>
   859ae:	fa06 f608 	lsl.w	r6, r6, r8
   859b2:	4286      	cmp	r6, r0
   859b4:	d2f5      	bcs.n	859a2 <__divdi3+0x266>
   859b6:	1e6a      	subs	r2, r5, #1
   859b8:	2300      	movs	r3, #0
   859ba:	e711      	b.n	857e0 <__divdi3+0xa4>
   859bc:	461a      	mov	r2, r3
   859be:	e7e5      	b.n	8598c <__divdi3+0x250>
   859c0:	460b      	mov	r3, r1
   859c2:	e7a0      	b.n	85906 <__divdi3+0x1ca>
   859c4:	4611      	mov	r1, r2
   859c6:	e7cb      	b.n	85960 <__divdi3+0x224>
   859c8:	4690      	mov	r8, r2
   859ca:	e787      	b.n	858dc <__divdi3+0x1a0>
   859cc:	4643      	mov	r3, r8
   859ce:	4642      	mov	r2, r8
   859d0:	e706      	b.n	857e0 <__divdi3+0xa4>
   859d2:	3a02      	subs	r2, #2
   859d4:	e750      	b.n	85878 <__divdi3+0x13c>
   859d6:	3902      	subs	r1, #2
   859d8:	442f      	add	r7, r5
   859da:	e739      	b.n	85850 <__divdi3+0x114>

000859dc <__udivdi3>:
   859dc:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   859e0:	4614      	mov	r4, r2
   859e2:	4605      	mov	r5, r0
   859e4:	460e      	mov	r6, r1
   859e6:	2b00      	cmp	r3, #0
   859e8:	d143      	bne.n	85a72 <__udivdi3+0x96>
   859ea:	428a      	cmp	r2, r1
   859ec:	d953      	bls.n	85a96 <__udivdi3+0xba>
   859ee:	fab2 f782 	clz	r7, r2
   859f2:	b157      	cbz	r7, 85a0a <__udivdi3+0x2e>
   859f4:	f1c7 0620 	rsb	r6, r7, #32
   859f8:	fa20 f606 	lsr.w	r6, r0, r6
   859fc:	fa01 f307 	lsl.w	r3, r1, r7
   85a00:	fa02 f407 	lsl.w	r4, r2, r7
   85a04:	fa00 f507 	lsl.w	r5, r0, r7
   85a08:	431e      	orrs	r6, r3
   85a0a:	0c21      	lsrs	r1, r4, #16
   85a0c:	fbb6 f2f1 	udiv	r2, r6, r1
   85a10:	fb01 6612 	mls	r6, r1, r2, r6
   85a14:	b2a0      	uxth	r0, r4
   85a16:	fb00 f302 	mul.w	r3, r0, r2
   85a1a:	0c2f      	lsrs	r7, r5, #16
   85a1c:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   85a20:	42b3      	cmp	r3, r6
   85a22:	d909      	bls.n	85a38 <__udivdi3+0x5c>
   85a24:	1936      	adds	r6, r6, r4
   85a26:	f102 37ff 	add.w	r7, r2, #4294967295
   85a2a:	f080 80fd 	bcs.w	85c28 <__udivdi3+0x24c>
   85a2e:	42b3      	cmp	r3, r6
   85a30:	f240 80fa 	bls.w	85c28 <__udivdi3+0x24c>
   85a34:	3a02      	subs	r2, #2
   85a36:	4426      	add	r6, r4
   85a38:	1af6      	subs	r6, r6, r3
   85a3a:	fbb6 f3f1 	udiv	r3, r6, r1
   85a3e:	fb01 6113 	mls	r1, r1, r3, r6
   85a42:	fb00 f003 	mul.w	r0, r0, r3
   85a46:	b2ad      	uxth	r5, r5
   85a48:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   85a4c:	4288      	cmp	r0, r1
   85a4e:	d908      	bls.n	85a62 <__udivdi3+0x86>
   85a50:	1909      	adds	r1, r1, r4
   85a52:	f103 36ff 	add.w	r6, r3, #4294967295
   85a56:	f080 80e9 	bcs.w	85c2c <__udivdi3+0x250>
   85a5a:	4288      	cmp	r0, r1
   85a5c:	f240 80e6 	bls.w	85c2c <__udivdi3+0x250>
   85a60:	3b02      	subs	r3, #2
   85a62:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   85a66:	2300      	movs	r3, #0
   85a68:	4610      	mov	r0, r2
   85a6a:	4619      	mov	r1, r3
   85a6c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85a70:	4770      	bx	lr
   85a72:	428b      	cmp	r3, r1
   85a74:	d84c      	bhi.n	85b10 <__udivdi3+0x134>
   85a76:	fab3 f683 	clz	r6, r3
   85a7a:	2e00      	cmp	r6, #0
   85a7c:	d14f      	bne.n	85b1e <__udivdi3+0x142>
   85a7e:	428b      	cmp	r3, r1
   85a80:	d302      	bcc.n	85a88 <__udivdi3+0xac>
   85a82:	4282      	cmp	r2, r0
   85a84:	f200 80dd 	bhi.w	85c42 <__udivdi3+0x266>
   85a88:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85a8c:	2300      	movs	r3, #0
   85a8e:	2201      	movs	r2, #1
   85a90:	4610      	mov	r0, r2
   85a92:	4619      	mov	r1, r3
   85a94:	4770      	bx	lr
   85a96:	b912      	cbnz	r2, 85a9e <__udivdi3+0xc2>
   85a98:	2401      	movs	r4, #1
   85a9a:	fbb4 f4f2 	udiv	r4, r4, r2
   85a9e:	fab4 f284 	clz	r2, r4
   85aa2:	2a00      	cmp	r2, #0
   85aa4:	f040 8082 	bne.w	85bac <__udivdi3+0x1d0>
   85aa8:	1b09      	subs	r1, r1, r4
   85aaa:	0c26      	lsrs	r6, r4, #16
   85aac:	b2a7      	uxth	r7, r4
   85aae:	2301      	movs	r3, #1
   85ab0:	fbb1 f0f6 	udiv	r0, r1, r6
   85ab4:	fb06 1110 	mls	r1, r6, r0, r1
   85ab8:	fb07 f200 	mul.w	r2, r7, r0
   85abc:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   85ac0:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   85ac4:	428a      	cmp	r2, r1
   85ac6:	d907      	bls.n	85ad8 <__udivdi3+0xfc>
   85ac8:	1909      	adds	r1, r1, r4
   85aca:	f100 3cff 	add.w	ip, r0, #4294967295
   85ace:	d202      	bcs.n	85ad6 <__udivdi3+0xfa>
   85ad0:	428a      	cmp	r2, r1
   85ad2:	f200 80c8 	bhi.w	85c66 <__udivdi3+0x28a>
   85ad6:	4660      	mov	r0, ip
   85ad8:	1a89      	subs	r1, r1, r2
   85ada:	fbb1 f2f6 	udiv	r2, r1, r6
   85ade:	fb06 1112 	mls	r1, r6, r2, r1
   85ae2:	fb07 f702 	mul.w	r7, r7, r2
   85ae6:	b2ad      	uxth	r5, r5
   85ae8:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   85aec:	42af      	cmp	r7, r5
   85aee:	d908      	bls.n	85b02 <__udivdi3+0x126>
   85af0:	192c      	adds	r4, r5, r4
   85af2:	f102 31ff 	add.w	r1, r2, #4294967295
   85af6:	f080 809b 	bcs.w	85c30 <__udivdi3+0x254>
   85afa:	42a7      	cmp	r7, r4
   85afc:	f240 8098 	bls.w	85c30 <__udivdi3+0x254>
   85b00:	3a02      	subs	r2, #2
   85b02:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   85b06:	4610      	mov	r0, r2
   85b08:	4619      	mov	r1, r3
   85b0a:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85b0e:	4770      	bx	lr
   85b10:	2300      	movs	r3, #0
   85b12:	461a      	mov	r2, r3
   85b14:	4610      	mov	r0, r2
   85b16:	4619      	mov	r1, r3
   85b18:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85b1c:	4770      	bx	lr
   85b1e:	f1c6 0520 	rsb	r5, r6, #32
   85b22:	fa22 f705 	lsr.w	r7, r2, r5
   85b26:	fa03 f406 	lsl.w	r4, r3, r6
   85b2a:	fa21 f305 	lsr.w	r3, r1, r5
   85b2e:	fa01 fb06 	lsl.w	fp, r1, r6
   85b32:	fa20 f505 	lsr.w	r5, r0, r5
   85b36:	433c      	orrs	r4, r7
   85b38:	ea4f 4814 	mov.w	r8, r4, lsr #16
   85b3c:	fbb3 fcf8 	udiv	ip, r3, r8
   85b40:	fb08 331c 	mls	r3, r8, ip, r3
   85b44:	fa1f f984 	uxth.w	r9, r4
   85b48:	fb09 fa0c 	mul.w	sl, r9, ip
   85b4c:	ea45 0b0b 	orr.w	fp, r5, fp
   85b50:	ea4f 451b 	mov.w	r5, fp, lsr #16
   85b54:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   85b58:	459a      	cmp	sl, r3
   85b5a:	fa02 f206 	lsl.w	r2, r2, r6
   85b5e:	d904      	bls.n	85b6a <__udivdi3+0x18e>
   85b60:	191b      	adds	r3, r3, r4
   85b62:	f10c 35ff 	add.w	r5, ip, #4294967295
   85b66:	d36f      	bcc.n	85c48 <__udivdi3+0x26c>
   85b68:	46ac      	mov	ip, r5
   85b6a:	ebca 0303 	rsb	r3, sl, r3
   85b6e:	fbb3 f5f8 	udiv	r5, r3, r8
   85b72:	fb08 3315 	mls	r3, r8, r5, r3
   85b76:	fb09 f905 	mul.w	r9, r9, r5
   85b7a:	fa1f fb8b 	uxth.w	fp, fp
   85b7e:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   85b82:	45b9      	cmp	r9, r7
   85b84:	d904      	bls.n	85b90 <__udivdi3+0x1b4>
   85b86:	193f      	adds	r7, r7, r4
   85b88:	f105 33ff 	add.w	r3, r5, #4294967295
   85b8c:	d362      	bcc.n	85c54 <__udivdi3+0x278>
   85b8e:	461d      	mov	r5, r3
   85b90:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   85b94:	fbac 2302 	umull	r2, r3, ip, r2
   85b98:	ebc9 0707 	rsb	r7, r9, r7
   85b9c:	429f      	cmp	r7, r3
   85b9e:	f04f 0500 	mov.w	r5, #0
   85ba2:	d34a      	bcc.n	85c3a <__udivdi3+0x25e>
   85ba4:	d046      	beq.n	85c34 <__udivdi3+0x258>
   85ba6:	4662      	mov	r2, ip
   85ba8:	462b      	mov	r3, r5
   85baa:	e75d      	b.n	85a68 <__udivdi3+0x8c>
   85bac:	4094      	lsls	r4, r2
   85bae:	f1c2 0920 	rsb	r9, r2, #32
   85bb2:	fa21 fc09 	lsr.w	ip, r1, r9
   85bb6:	4091      	lsls	r1, r2
   85bb8:	fa20 f909 	lsr.w	r9, r0, r9
   85bbc:	0c26      	lsrs	r6, r4, #16
   85bbe:	fbbc f8f6 	udiv	r8, ip, r6
   85bc2:	fb06 cc18 	mls	ip, r6, r8, ip
   85bc6:	b2a7      	uxth	r7, r4
   85bc8:	fb07 f308 	mul.w	r3, r7, r8
   85bcc:	ea49 0901 	orr.w	r9, r9, r1
   85bd0:	ea4f 4119 	mov.w	r1, r9, lsr #16
   85bd4:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   85bd8:	4563      	cmp	r3, ip
   85bda:	fa00 f502 	lsl.w	r5, r0, r2
   85bde:	d909      	bls.n	85bf4 <__udivdi3+0x218>
   85be0:	eb1c 0c04 	adds.w	ip, ip, r4
   85be4:	f108 32ff 	add.w	r2, r8, #4294967295
   85be8:	d23b      	bcs.n	85c62 <__udivdi3+0x286>
   85bea:	4563      	cmp	r3, ip
   85bec:	d939      	bls.n	85c62 <__udivdi3+0x286>
   85bee:	f1a8 0802 	sub.w	r8, r8, #2
   85bf2:	44a4      	add	ip, r4
   85bf4:	ebc3 0c0c 	rsb	ip, r3, ip
   85bf8:	fbbc f3f6 	udiv	r3, ip, r6
   85bfc:	fb06 c113 	mls	r1, r6, r3, ip
   85c00:	fb07 f203 	mul.w	r2, r7, r3
   85c04:	fa1f f989 	uxth.w	r9, r9
   85c08:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   85c0c:	428a      	cmp	r2, r1
   85c0e:	d907      	bls.n	85c20 <__udivdi3+0x244>
   85c10:	1909      	adds	r1, r1, r4
   85c12:	f103 30ff 	add.w	r0, r3, #4294967295
   85c16:	d222      	bcs.n	85c5e <__udivdi3+0x282>
   85c18:	428a      	cmp	r2, r1
   85c1a:	d920      	bls.n	85c5e <__udivdi3+0x282>
   85c1c:	3b02      	subs	r3, #2
   85c1e:	4421      	add	r1, r4
   85c20:	1a89      	subs	r1, r1, r2
   85c22:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   85c26:	e743      	b.n	85ab0 <__udivdi3+0xd4>
   85c28:	463a      	mov	r2, r7
   85c2a:	e705      	b.n	85a38 <__udivdi3+0x5c>
   85c2c:	4633      	mov	r3, r6
   85c2e:	e718      	b.n	85a62 <__udivdi3+0x86>
   85c30:	460a      	mov	r2, r1
   85c32:	e766      	b.n	85b02 <__udivdi3+0x126>
   85c34:	40b0      	lsls	r0, r6
   85c36:	4290      	cmp	r0, r2
   85c38:	d2b5      	bcs.n	85ba6 <__udivdi3+0x1ca>
   85c3a:	f10c 32ff 	add.w	r2, ip, #4294967295
   85c3e:	2300      	movs	r3, #0
   85c40:	e712      	b.n	85a68 <__udivdi3+0x8c>
   85c42:	4633      	mov	r3, r6
   85c44:	4632      	mov	r2, r6
   85c46:	e70f      	b.n	85a68 <__udivdi3+0x8c>
   85c48:	459a      	cmp	sl, r3
   85c4a:	d98d      	bls.n	85b68 <__udivdi3+0x18c>
   85c4c:	f1ac 0c02 	sub.w	ip, ip, #2
   85c50:	4423      	add	r3, r4
   85c52:	e78a      	b.n	85b6a <__udivdi3+0x18e>
   85c54:	45b9      	cmp	r9, r7
   85c56:	d99a      	bls.n	85b8e <__udivdi3+0x1b2>
   85c58:	3d02      	subs	r5, #2
   85c5a:	4427      	add	r7, r4
   85c5c:	e798      	b.n	85b90 <__udivdi3+0x1b4>
   85c5e:	4603      	mov	r3, r0
   85c60:	e7de      	b.n	85c20 <__udivdi3+0x244>
   85c62:	4690      	mov	r8, r2
   85c64:	e7c6      	b.n	85bf4 <__udivdi3+0x218>
   85c66:	3802      	subs	r0, #2
   85c68:	4421      	add	r1, r4
   85c6a:	e735      	b.n	85ad8 <__udivdi3+0xfc>
   85c6c:	73256425 	.word	0x73256425
   85c70:	00000020 	.word	0x00000020
   85c74:	00000025 	.word	0x00000025
   85c78:	0000736d 	.word	0x0000736d
   85c7c:	6b74614d 	.word	0x6b74614d
   85c80:	2026206f 	.word	0x2026206f
   85c84:	20696c41 	.word	0x20696c41
   85c88:	616d6152 	.word	0x616d6152
   85c8c:	00000000 	.word	0x00000000
   85c90:	616c6544 	.word	0x616c6544
   85c94:	203a2079 	.word	0x203a2079
   85c98:	00000000 	.word	0x00000000
   85c9c:	65727453 	.word	0x65727453
   85ca0:	6874676e 	.word	0x6874676e
   85ca4:	00203a20 	.word	0x00203a20
   85ca8:	0c040800 	.word	0x0c040800
   85cac:	0e060a02 	.word	0x0e060a02
   85cb0:	0d050901 	.word	0x0d050901
   85cb4:	0f070b03 	.word	0x0f070b03
   85cb8:	00000043 	.word	0x00000043

00085cbc <_global_impure_ptr>:
   85cbc:	20070008                                ... 

00085cc0 <zeroes.6763>:
   85cc0:	30303030 30303030 30303030 30303030     0000000000000000
   85cd0:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   85ce0:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   85cf0:	00000000 33323130 37363534 62613938     ....0123456789ab
   85d00:	66656463 00000000 6c756e28 0000296c     cdef....(null)..
   85d10:	00000030                                0...

00085d14 <blanks.6762>:
   85d14:	20202020 20202020 20202020 20202020                     
   85d24:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   85d34:	49534f50 00000058 0000002e              POSIX.......

00085d40 <__mprec_tens>:
   85d40:	00000000 3ff00000 00000000 40240000     .......?......$@
   85d50:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   85d60:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   85d70:	00000000 412e8480 00000000 416312d0     .......A......cA
   85d80:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   85d90:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   85da0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   85db0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   85dc0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   85dd0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   85de0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   85df0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   85e00:	79d99db4 44ea7843                       ...yCx.D

00085e08 <__mprec_bigtens>:
   85e08:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   85e18:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   85e28:	7f73bf3c 75154fdd                       <.s..O.u

00085e30 <p05.5269>:
   85e30:	00000005 00000019 0000007d              ........}...

00085e3c <_init>:
   85e3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85e3e:	bf00      	nop
   85e40:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85e42:	bc08      	pop	{r3}
   85e44:	469e      	mov	lr, r3
   85e46:	4770      	bx	lr

00085e48 <__init_array_start>:
   85e48:	000827e1 	.word	0x000827e1

00085e4c <__frame_dummy_init_array_entry>:
   85e4c:	00080119                                ....

00085e50 <_fini>:
   85e50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85e52:	bf00      	nop
   85e54:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85e56:	bc08      	pop	{r3}
   85e58:	469e      	mov	lr, r3
   85e5a:	4770      	bx	lr

00085e5c <__fini_array_start>:
   85e5c:	000800f5 	.word	0x000800f5
